417
Deploying services using the Serverless deployment pattern
12.5.2 Developing a lambda function
Unlike when using the other three patterns, you must use a different programming
model for your lambda functions. A lambda function’s code and the packaging
depend on the programming language. A Java lambda function is a class that imple-
ments the generic interface RequestHandler, which is defined by the AWS Lambda
Java core library and shown in the following listing. This interface takes two type
parameters: I, which is the input type, and O, which is the output type. The type of I
and O depend on the specific kind of request that the lambda handles.
public interface RequestHandler<I, O> {
public O handleRequest(I input, Context context);
}
The RequestHandler interface defines a single handleRequest() method. This method
has two parameters, an input object and a context, which provide access to the lambda
execution environment, such as the request ID. The handleRequest() method
returns an output object. For lambda functions that handle HTTP requests that are
proxied by an AWS API Gateway, I and O are APIGatewayProxyRequestEvent and
APIGatewayProxyResponseEvent, respectively. As you’ll soon see, the handler func-
tions are quite similar to old-style Java EE servlets.
 A Java lambda is packaged as either a ZIP file or a JAR file. A JAR file is an uber JAR
(or fat JAR) created by, for example, the Maven Shade plugin. A ZIP file has the
classes in the root directory and JAR dependencies in the lib directory. Later, I show
how a Gradle project can create a ZIP file. But first, let’s look at the different ways of
invoking lambda function. 
12.5.3 Invoking lambda functions
There are four ways to invoke a lambda function:
HTTP requests
Events generated by AWS services
Scheduled invocations
Directly using an API call
Let’s look at each one.
HANDLING HTTP REQUESTS
One way to invoke a lambda function is to configure an AWS API Gateway to route
HTTP requests to your lambda. The API gateway exposes your lambda function as
an HTTPS endpoint. It functions as an HTTP proxy, invokes the lambda function
with an HTTP request object, and expects the lambda function to return an HTTP
response object. By using the API gateway with AWS Lambda you can, for example,
deploy RESTful services as lambda functions. 
Listing 12.8
A Java lambda function is a class that implements the RequestHandler 
interface.
 
