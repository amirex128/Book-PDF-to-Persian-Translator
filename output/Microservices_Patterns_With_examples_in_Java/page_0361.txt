331
Writing integration tests
The consumer-side test verifies that the command message proxy class sends correctly
structured command messages and correctly processes reply messages. In this exam-
ple, KitchenServiceProxyTest tests KitchenServiceProxy. It uses Spring Cloud Con-
tract to configure messaging stubs that verify that the command message matches a
contract’s input message and replies with the corresponding output message.
 The provider-side tests are code-generated by Spring Cloud Contract. Each test
method corresponds to a contract. It sends the contract’s input message as a com-
mand message and verifies that the reply message matches the contract’s output mes-
sage. Let’s look at the details, starting with the contract.
EXAMPLE ASYNCHRONOUS REQUEST/RESPONSE CONTRACT
Listing 10.8 shows the contract for one interaction. It consists of an input message and
an output message. Both messages specify a message channel, message body, and mes-
sage headers. The naming convention is from the provider’s perspective. The input
message’s messageFrom element specifies the channel that the message is read from.
Provider-side
integration test for
Kitchen Service
Consumer-side
integration test for
Kitchen Service
Spring cloud
contract
Reads
Tests
Sends to
Sends to
Receives from
Conﬁgures
Code
generates
Receives
from
Extends
Conﬁgures
Invokes
Reads
command
Reads reply
Sends
reply
command
Sends
command
Message
Contract.make {
inputMessage{...}
OutputMessage{...}
}
abstract class BaseMessaging{
void setUp(){...}
class MessageTest extends BaseMessaging{
}
KitchenService
Proxy
IntegrationTest
KitchenService
Proxy
KitchenService
CommandHandler
Reply
channel
Command
channel
Command
channel
Reply
channel
«mock»
KitchenService
Messaging stub
Sends input message and
veriﬁes that reply matches
contract’s output message
Figure 10.5
The contracts are used to test the adapter classes that implement each side of the asynchronous 
request/response interaction. The provider-side tests verify that KitchenServiceCommandHandler handles 
commands and sends back replies. The consumer-side tests verify KitchenServiceProxy sends commands 
that conform to the contract, and that it handles the example replies from the contract.
 
