44
CHAPTER 2
Decomposition strategies
2.2
Defining an application’s microservice architecture
How should we define a microservice architecture? As with any software development
effort, the starting points are the written requirements, hopefully domain experts, and
perhaps an existing application. Like much of software development, defining an
architecture is more art than science. This section describes a simple, three-step pro-
cess, shown in figure 2.5, for defining an application’s architecture. It’s important to
remember, though, that it’s not a process you can follow mechanically. It’s likely to be
iterative and involve a lot of creativity.
An application exists to handle requests, so the first step in defining its architecture is
to distill the application’s requirements into the key requests. But instead of describing
the requests in terms of specific IPC technologies such as REST or messaging, I use
Order
Service
FTGO
FTGO
Restaurant
Service
Kitchen
Service
...
Order
Service
Iterate
verifyOrder()
Restaurant
Service
Kitchen
Service
Functional requirements
createOrder()
createTicket()
acceptOrder()
createOrder()
acceptOrder()
FTGO
As a consumer
I want to place an order
so that I can ...
createOrder()
acceptOrder()
As a restaurant
I want to accept an order
so that I can ...
Step 1: Identify system operations
Step 2: Identify services
Step 3: Deﬁne service APIs and collaborations
The starting point are the requirements,
such as the user stories.
A system operation represents
an external request.
Figure 2.5
A three-step process for defining an application’s microservice architecture
 
