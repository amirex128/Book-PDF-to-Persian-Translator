431
Overview of refactoring to microservices
that you’ll waste time reimplementing features that are no longer needed. As Martin
Fowler reportedly said, “the only thing a Big Bang rewrite guarantees is a Big Bang!”
(www.randyshoup.com/evolutionary-architecture).
 Instead of doing a big bang rewrite, you should, as figure 13.1 shows, incrementally
refactor your monolithic application. You gradually build a new application, which is
called a strangler application. It consists of microservices that runs in conjunction
with your monolithic application. Over time, the amount of functionality imple-
mented by the monolithic application shrinks until either it disappears entirely or it
becomes just another microservice. This strategy is akin to servicing your car while
driving down the highway at 70 mph. It’s challenging, but is far less risky that attempt-
ing a big bang rewrite.
Martin Fowler refers to this application modernization strategy as the Strangler appli-
cation pattern (www.martinfowler.com/bliki/StranglerApplication.html). The name
comes from the strangler vine (or strangler fig—see https://en.wikipedia.org/wiki/
Strangler_fig) that is found in rain forests. A strangler vine grows around a tree in
The monolith shrinks over time.
The strangler application
grows larger over time.
Monolith
Monolith
Service
Strangler application
Monolith
Service
Monolith
Service
...
...
Monolith
Service
Service
Service
Service
Service
Service
Service
Service
Service
Service
Service
Service
Service
Service
Service
Service
Service
Service
Service
Time
Figure 13.1
The monolith is incrementally replaced by a strangler application comprised of services. 
Eventually, the monolith is replaced entirely by the strangler application or becomes another 
microservice.
 
