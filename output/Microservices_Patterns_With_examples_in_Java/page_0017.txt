CONTENTS
xv
12.5
Deploying services using the Serverless deployment 
pattern
415
Overview of serverless deployment with AWS Lambda
416
Developing a lambda function
417
■Invoking lambda 
functions
417
■Benefits of using lambda functions
418
Drawbacks of using lambda functions
419
12.6
Deploying a RESTful service using AWS Lambda 
and AWS Gateway
419
The design of the AWS Lambda version of Restaurant Service
419
Packaging the service as ZIP file
424
■Deploying lambda 
functions using the Serverless framework
425
13 
Refactoring to microservices
428
13.1
Overview of refactoring to microservices
429
Why refactor a monolith?
429
■Strangling the monolith
430
13.2
Strategies for refactoring a monolith to 
microservices
433
Implement new features as services
434
■Separate presentation 
tier from the backend
436
■Extract business capabilities into 
services
437
13.3
Designing how the service and the monolith 
collaborate
443
Designing the integration glue
444
■Maintaining data 
consistency across a service and a monolith
449
■Handling 
authentication and authorization
453
13.4
Implementing a new feature as a service: handling 
misdelivered orders
455
The design of Delayed Delivery Service
456
■Designing the 
integration glue for Delayed Delivery Service
457
13.5
Breaking apart the monolith: extracting delivery 
management
459
Overview of existing delivery management functionality
460
Overview of Delivery Service
462
■Designing the Delivery Service 
domain model
463
■The design of the Delivery Service integration 
glue
465
■Changing the FTGO monolith to interact with Delivery 
Service
467
index
473
 
