328
CHAPTER 10
Testing microservices: Part 2
package contracts;
org.springframework.cloud.contract.spec.Contract.make {
label 'orderCreatedEvent'
  
input {
triggeredBy('orderCreated()')       
}
outputMessage {
sentTo('net.chrisrichardson.ftgo.orderservice.domain.Order')
body('''{"orderDetails":{"lineItems":[{"quantity":5,"menuItemId":"1",
                 "name":"Chicken Vindaloo","price":"12.34","total":"61.70"}],
                 "orderTotal":"61.70","restaurantId":1, 
        "consumerId":1511300065921},"orderState":"APPROVAL_PENDING"}''')
        headers {
            header('event-aggregate-type', 
                        'net.chrisrichardson.ftgo.orderservice.domain.Order')
            header('event-aggregate-id', '1')
        }
}
}
The contract also has two other important elements:

label—is used by a consumer test to trigger publication of the event by Spring
Contact

triggeredBy—the name of the superclass method invoked by the generated
test method to trigger the publishing of the event
Let’s look at how the contract is used, starting with the provider-side test for Order-
Service.
CONSUMER-DRIVEN CONTRACT TESTS FOR ORDER SERVICE
The provider-side test for Order Service is another consumer-driven contract inte-
gration test. It verifies that OrderDomainEventPublisher, which is responsible for
publishing Order aggregate domain events, publishes events that match its clients’
expectations. Listing 10.6 shows MessagingBase, which is the base class for the test
classes code-generated by Spring Cloud Contract. It’s responsible for configuring the
OrderDomainEventPublisher class to use in-memory messaging stubs. It also defines
the methods, such as orderCreated(), which are invoked by the generated tests to
trigger the publishing of the event.
@RunWith(SpringRunner.class)
@SpringBootTest(classes = MessagingBase.TestConfiguration.class,
webEnvironment = SpringBootTest.WebEnvironment.NONE)
@AutoConfigureMessageVerifier
public abstract class MessagingBase {
Listing 10.5
A contract for a publish/subscribe interaction style
Listing 10.6
The abstract base class for the Spring Cloud Contract provider-side tests
Used by the 
consumer test to 
trigger the event 
to be published
Invoked by the code-
generated provider test
An Order-
Created
domain
event
 
