10
CHAPTER 1
Escaping monolithic hell
the N identical instances of the application. Z-axis scaling is a great way to scale an
application to handle increasing transaction and data volumes. 
Y-AXIS SCALING FUNCTIONALLY DECOMPOSES AN APPLICATION INTO SERVICES
X- and Z-axis scaling improve the application’s capacity and availability. But neither
approach solves the problem of increasing development and application complexity. To
solve those, you need to apply Y-axis scaling, or functional decomposition. Figure 1.6 shows
how Y-axis scaling works: by splitting a monolithic application into a set of services.
Application
instance 1
N identical application
instances
Application
instance 2
Load
balancer
Client
Request
Application
instance 3
Route requests using a
load balancing algorithm.
Figure 1.4
X-axis scaling runs multiple, identical instances of the monolithic 
application behind a load balancer.
Application
instance 1
N identical application
instances
Application
instance 2
Client
Router
Request:
GET /...
Authorization: userId:password
Application
instance 3
Users: a–h
Users: i-p
Users: r–z
Uses the userId to decide
where to route requests
Each instance is responsible
for a subset of the users.
Figure 1.5
Z-axis scaling runs multiple identical instances of the monolithic application behind 
a router, which routes based on a request attribute . Each instance is responsible for a subset 
of the data.
 
