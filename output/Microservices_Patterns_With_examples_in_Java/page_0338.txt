308
CHAPTER 9
Testing microservices: Part 1
There are two types of unit tests (https://martinfowler.com/bliki/UnitTest.html):
Solitary unit test—Tests a class in isolation using mock objects for the class’s
dependencies
Sociable unit test—Tests a class and its dependencies
The responsibilities of the class and its role in the architecture determine which type
of test to use. Figure 9.11 shows the hexagonal architecture of a typical service and the
type of unit test that you’ll typically use for each kind of class. Controller and service
classes are often tested using solitary unit tests. Domain objects, such as entities and
value objects, are typically tested using sociable unit tests.
«Message Channel»
«Message Channel»
POST/something
GET/something/id
Domain logic
Service
Entity
Solitary
unit test
Sociable
unit test
Value
object
Saga
Inbound
message
adapter
Outbound
message
adapter
Database
adapter
Database
Repository
Controller
Solitary
unit test
Figure 9.11
The responsibilities of a class determine whether to use a solitary or sociable unit test.
 
