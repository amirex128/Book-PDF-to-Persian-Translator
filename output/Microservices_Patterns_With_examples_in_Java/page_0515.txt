INDEX
485
patterns and pattern language (continued)
Decompose by subdomain 54
Deploy a service as a container 393
Deploy a service as a VM 390
Distributed tracing 370
Domain event 160
Domain model 150
Event sourcing 184
Exception tracking 376
Externalized configuration 361
Health check API 366
Language-specific packaging format 387
Log aggregation 368
Messaging 85
Microservice architecture 40
Microservice chassis 379
Monolithic architecture 40
Polling publisher 98
Remote procedure invocation 72
Saga 114
Self registration 82
Serverless deployment 416
Server-side discovery 85
Service component test 335
Service mesh 380
Sidecar 410
Strangler application 432
Transaction log tailing 99
Transaction script 149
Transactional outbox 98
groups of patterns 23–29
communication patterns 24–25
data consistency patterns 25
for automated testing of services 28
for decomposing applications into 
services 24
for handling cross-cutting concerns 28
for querying data 25–26
observability patterns 27–28
security patterns 28–29
service deployment patterns 26
sections of patterns
forces 21
related patterns 21–23
resulting context 21
pending state 176
persistence
persisting aggregates using events 186–188
traditional approach to 185–186
audit logging 186
event publishing bolted to business 
logic 186
lack of aggregate history 186
object-relational impedance mismatch
185–186
persistence integration tests 321–322
Persistence layer 38
pessimistic view countermeasure 130–131
pickup action 460
Pilot 409
pivot transaction 128, 450
pods 402
point-to-point channel 87
policy enforcement 409
polling 194–195
Polling publisher pattern 98–99
ports 38
pre-commit tests stage 306
predecessor pattern 21
Presentation layer 38
presentation logic 436
primary key-based queries 235
Process view 36
process() method 190, 193
production-ready service development
348–382
configurable services 360–364
pull-based externalized configuration
363–364
push-based externalized configuration
362–363
Microservice chassis pattern 378–382
service meshes 380–382
using 379–380
observable services 364–378
Application metrics pattern 373–376
Audit logging pattern 377–378
Distributed tracing pattern 370–373
Exception tracking pattern 376–377
Health check API pattern 366–368
Log aggregation pattern 368–370
secure services 349–360
handling authentication in API gateway
354–355
handling authorization 356
in traditional monolithic application
350–353
using JWTs to pass user identity and 
roles 356–357
using OAuth 2.0 357–360
Prometheus 375
properties, graph-based schema 280
Protocol Buffers 72
provider service 223
proxy classes 274
proxy interface 72
pseudonymization 201
Public API module 264
publish() method 166
publish/async responses 89
 
