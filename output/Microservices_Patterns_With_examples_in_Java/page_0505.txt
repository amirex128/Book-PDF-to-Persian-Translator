INDEX
475
Asynchronous messaging pattern (continued)
libraries and frameworks for 100–103
basic messaging 101
command/reply-based messaging 102–103
domain event publishing 102
message brokers 90–94
benefits and drawbacks of 93–94
brokerless messaging 91–92
implementing message channels using 93
overview of 92
overview of 86–87
transactional messaging 97–100
publishing events using Polling publisher 
pattern 98–99
publishing events using Transaction log tail-
ing pattern 99–100
using database table as message queue
97–98
asynchronous request/response interactions
implementing 87–88
integration tests for
consumer-side contract tests 332–335
contract tests 330–335
example contract 331–332
Atomicity, Consistency, Durability (ACD) 111
Atomicity, Consistency, Isolation, Durability 
(ACID) transactions 98, 110
attribute value 245
audit logging 28, 186, 366, 377–378
adding code to business logic 378
aspect-oriented programming 378
event sourcing 378
auditing 350
authentication and authorization
refactoring to microservices 453–455
API gateway maps USERINFO cookie to 
Authorization header 455
LoginHandler sets USERINFO cookie
454–455
security in microservice architecture
handling authentication 354–355
handling authorization 356
Authorization Server concept 357
automated testing 28, 293, 295–296
automatic sidecar injection 411
Avro 72
AWS API gateway service 271–272
AWS Application Load Balancer service 272
AWS DynamoDB 242–252
data modeling and query design 244–249
detecting duplicate events 248–249
findOrderHistory query 245–247
FTGO-order-history table 245
paginating query results 247
updating orders 247–248
OrderHistoryDaoDynamoDb class 249–252
addOrder() method 249–250
findOrderHistory() method 251–252
idempotentUpdate() method 250–251
notePickedUp() method 250
OrderHistoryEventHandlers module 243–244
AWS Gateway, deploying RESTful services 
using 419–426
deploying lambda functions using Serverless 
framework 425–426
design of Restaurant Service 419–423
packaging service as ZIP file 424
AWS Lambda
benefits of lambda functions 418
developing lambda functions 417
drawbacks of lambda functions 419
invoking lambda functions 417–418
defining scheduled lambda functions 418
handling events 418
handling HTTP requests 417
invoking lambda functions using web service 
requests 418
overview of 416
RESTful services 419–426
deploying lambda functions using Serverless 
framework 425–426
design of Restaurant Service 419–423
packaging service as ZIP file 424
aws.region property 363
Axon 202
Azure functions, Microsoft 416
B
Backends for frontends (BFF) pattern 264–266
batching 288
@Before setUp() method 309
beforeHandling() method 423
Big Ball of Mud pattern 2
big bang rewrite 430
binary message formats 72
bounded context 55
broker-based messaging 90–94
benefits and drawbacks of 93–94
implementing message channels using 93
overview of 92
brokerless messaging 91–92
Browser API module 264
business capability 40
business logic 146–219
adding audit logging code to 378
domain events 160–168
consuming 167–168
defined 161
event enrichment 161–162
 
