INDEX
478
Delayed Delivery Service
changing FTGO monolith to interact with
467–470
defining interface 467–468
implementing interface 468–470
refactoring monolith to call interface
468
design for 456–457
domain model 463–464
deciding which data to migrate 464
design of domain logic 464
identifying which entities and fields are 
part of delivery management 463
existing delivery functionality 460–461
integration glue for 457–459, 465–467
CustomerContactInfoRepository 
interface 458
design of API 465–466
how Delivery Service accesses FTGO 
data 466
how FTGO accesses data 467
publishing and consuming Order and Restau-
rant domain events 458–459
overview of 462–463
deleted flag 201
deliver action 460
DeliveryServiceImpl class 468
dependencies 125
deploy stage 306
deployment 383–427
Language-specific packaging format 
pattern 386–390
benefits of 388–389
drawbacks of 389–390
RESTful services using AWS Lambda and AWS 
Gateway 419–426
deploying lambda functions using Serverless 
framework 425–426
design of Restaurant Service 419–423
packaging service as ZIP file 424
Serverless deployment pattern 415–419
benefits of lambda functions 418
developing lambda functions 417
drawbacks of lambda functions 419
invoking lambda functions 417–418
overview of 416
Service as container pattern 393–399
benefits of 398
Docker 395–398
drawbacks of 399
Service as virtual machine pattern 390–393
benefits of 392
drawbacks of 392–393
Service mesh pattern 380
Sidecar pattern 410
with Kubernetes 399–415
deploying API gateway 405–406
deploying Restaurant Service 402–405
overview of 399–402
service meshes 407–415
zero-downtime deployments 406–407
deployment frequency 31
Deployment patterns
Deploy a service as a container 22, 393
Deploy a service as a VM 390, 392
Language-specific packaging format 386, 390
Serverless deployment 415–419
Service mesh 380
Sidecar 410
deployment pipeline 305–307
Deployment view 36
DestinationRule 413
dirty reads 127
Distributed tracing pattern 28, 366, 370–373
distributed tracing server 373
instrumentation libraries 373
Distributed Transaction Processing (DTP) 112
Docker 395–398
building images 395–396
pushing images to registry 396–397
running containers 397–398
docker build command 396
Docker containers 267
docker push command 397
docker run command 397
docker tag command 396
document message 86
domain event publishing 102
domain events 160–168, 198–199
consuming 167–168, 458–459
defined 161
defining 207
event enrichment 161–162
event schema evolution 198–199
generating 164–165
identifying 162–163
managing schema changes through 
upcasting 199
publishing 102, 166–167, 448–449, 458–459
reasons to publish 160–161
subscribing to 208–209, 448–449
domain model 54, 150–160
aggregates
consistency boundaries 155
designing business logic with 159–160
explicit boundaries 154–155
granularity 158
identifying aggregates 155
rules for 155–157
creating high-level domain model 46–48
 
