INDEX
486
publish/subscribe-style interaction
implementing 89
integration tests for 326–330
contract for publishing OrderCreated 
event 327–328
tests for Order History Service 329–330
tests for Order Service 328–329
publish-subscribe channel 87
pull model of externalized configuration 361, 375
push model of externalized configuration 361, 
375
Q
quality attributes 8, 34, 37
quality of service 8, 37
queries 41
query arguments 286
query() operation 246, 249
querying patterns 220–252
API composition pattern 26, 64, 79, 221–228
benefits and drawbacks of 227–228
design issues 225–227
findOrder() query operation 221–222, 224
overview of 222–224
CQRS pattern 26, 63, 160, 184, 221, 228–236
benefits of 235–236
drawbacks of 236
motivations for using 229–232
overview of 232–235
R
RabbitMQ 92
rate limiting 262
RDBMS-based event store
creating saga orchestrator when using 211
idempotent message processing with 197
reactive programming model 227
readinessProbe 404, 407
receiving port interface 86
reduce operation 187
refactoring 428–471
application modernization 430–432
demonstrating value 432
designing how service and monolith 
collaborate 443–455
authentication and authorization 453–455
data consistency 449–453
integration glue 444–449
extracting delivery management 459–470
changing FTGO monolith to interact with 
Delivery Service 467–470
designing Delivery Service domain 
model 463–464
designing Delivery Service integration 
glue 465–467
existing delivery functionality 460–461
overview of Delivery Service 462–463
implementing new features as services 455–459
design for Delayed Delivery Service 456–457
integration glue for Delayed Delivery 
Service 457–459
minimizing changes 432–433
overview of 429–433
reasons for 429–430
strategies for 433–442
extracting business capabilities into 
services 437–442
implementing new features as services
434–435
separating presentation tier from 
backend 436–437
technical deployment infrastructure 433
Refactoring to microservices patterns
Anti-corruption layer 446–447
Strangler application 431–432
ReflectiveMutableCommandProcessingAggregate 
class 206–207
Refresh Token concept 358
Releasing services 408
Reliable communications pattern
Circuit breaker 77–80, 108
Remote procedure invocation (RPI) pattern
72–85
Circuit breaker pattern 77–80
developing robust RPI proxies 79
recovering from unavailable services 79–80
gRPC 76–77
REST 73–76
benefits and drawbacks of 75–76
fetching multiple resources in single 
request 74–75
mapping operations to HTTP verbs 75
REST maturity model 74
specifying REST APIs 74
service discovery 80–85
overview of 81
using application-level service discovery 
patterns 81–83
using platform-provided service discovery 
patterns 83–85
reply channel header 88–89
Repository object, DDD 152
request attribute 10
request logging 262
request/async response-style API 90
request/response interactions 87–89
asynchronous 87–88
integration tests for REST-based 322–326
 
