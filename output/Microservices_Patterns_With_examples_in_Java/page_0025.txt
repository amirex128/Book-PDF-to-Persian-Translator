ABOUT THIS BOOK
xxiii
Roadmap
This book consists of 13 chapters:
■
Chapter 1 describes the symptoms of monolithic hell, which occurs when a
monolithic application outgrows its architecture, and advises on how to escape
by adopting the microservice architecture. It also provides an overview of the
microservice architecture pattern language, which is the organizing theme for
most of the book.
■
Chapter 2 explains why software architecture is important and describes the
patterns you can use to decompose an application into a collection of services.
It also explains how to overcome the various obstacles you typically encounter
along the way.
■
Chapter 3 describes the different patterns for robust, interprocess communica-
tion in a microservice architecture. It explains why asynchronous, message-
based communication is often the best choice.
■
Chapter 4 explains how to maintain data consistency across services by using
the Saga pattern. A saga is a sequence of local transactions coordinated using
asynchronous messaging.
■
Chapter 5 describes how to design the business logic for a service using the
domain-driven design (DDD) Aggregate and Domain event patterns.
■
Chapter 6 builds on chapter 5 and explains how to develop business logic using
the Event sourcing pattern, an event-centric way to structure the business logic
and persist domain objects.
■
Chapter 7 describes how to implement queries that retrieve data scattered
across multiple services by using either the API composition pattern or the
Command query responsibility segregation (CQRS) pattern.
■
Chapter 8 covers the external API patterns for handling requests from a diverse
collection of external clients, such as mobile applications, browser-based Java-
Script applications, and third-party applications.
■
Chapter 9 is the first of two chapters on automated testing techniques for micro-
services. It introduces important testing concepts such as the test pyramid, which
describes the relative proportions of each type of test in your test suite. It also
shows how to write unit tests, which form the base of the testing pyramid.
■
Chapter 10 builds on chapter 9 and describes how to write other types of tests in
the test pyramid, including integration tests, consumer contract tests, and com-
ponent tests.
■
Chapter 11 covers various aspects of developing production-ready services,
including security, the Externalized configuration pattern, and the service
observability patterns. The service observability patterns include Log aggrega-
tion, Application metrics, and Distributed tracing.
■
Chapter 12 describes the various deployment patterns that you can use to
deploy services, including virtual machines, containers, and serverless. It also
 
