347
Summary
Summary
Use contracts, which are example messages, to drive the testing of interactions
between services. Rather than write slow-running tests that run both services
and their transitive dependencies, write tests that verify that the adapters of
both services conform to the contracts.
Write component tests to verify the behavior of a service via its API. You should
simplify and speed up component tests by testing a service in isolation, using
stubs for its dependencies.
Write user journey tests to minimize the number of end-to-end tests, which are
slow, brittle, and time consuming. A user journey test simulates a user’s journey
through the application and verifies high-level behavior of a relatively large
slice of the application’s functionality. Because there are few tests, the amount
of per-test overhead, such as test setup, is minimized, which speeds up the tests. 
 
