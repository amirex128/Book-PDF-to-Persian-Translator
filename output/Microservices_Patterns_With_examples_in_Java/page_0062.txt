32
CHAPTER 1
Escaping monolithic hell
2
The Neutral Zone—The intermediate stage between the old and new ways of doing
things, where people are often confused. They are often struggling to learn the
new way of doing things.
3
The New Beginning—The final stage where people have enthusiastically embraced
the new way of doing things and are starting to experience the benefits.
The book describes how best to manage each stage of the transition and increase the
likelihood of successfully implementing the change. FTGO is certainly suffering from
monolithic hell and needs to migrate to a microservice architecture. It must also
change its organization and development processes. In order for FTGO to successfully
accomplish this, however, it must take into account the transition model and consider
people’s emotions.
 In the next chapter, you’ll learn about the goal of software architecture and how to
decompose an application into services. 
Summary
The Monolithic architecture pattern structures the application as a single deploy-
able unit.
The Microservice architecture pattern decomposes a system into a set of inde-
pendently deployable services, each with its own database.
The monolithic architecture is a good choice for simple applications, but micro-
service architecture is usually a better choice for large, complex applications.
The microservice architecture accelerates the velocity of software development
by enabling small, autonomous teams to work in parallel.
The microservice architecture isn’t a silver bullet—there are significant draw-
backs, including complexity.
The Microservice architecture pattern language is a collection of patterns that
help you architect an application using the microservice architecture. It helps
you decide whether to use the microservice architecture, and if you pick the
microservice architecture, the pattern language helps you apply it effectively.
You need more than just the microservice architecture to accelerate software
delivery. Successful software development also requires DevOps and small,
autonomous teams.
Don’t forget about the human side of adopting microservices. You need to con-
sider employees’ emotions in order to successfully transition to a microservice
architecture. 
 
