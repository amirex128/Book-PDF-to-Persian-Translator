5 I hope it goes without saying that I am not a lawyer, but should you wish to look at the legislation that covers
this in the UK, it’s the Equality Act 2010, specifically section 20. The W3C also has a good overview of acces‐
sibility guidelines.
On the other hand, if the widgets are simpler in nature and are largely static compo‐
nents, the ability to include them using something as simple as client-side or server-
side templating is very straightforward by comparison.
Constraints
Before moving on to discuss our next pattern, I want to address the topic of con‐
straints. Increasingly, the users of our software interact with it from a variety of dif‐
ferent devices. Each of these devices imposes different constraints that our software
has to accommodate. On a desktop web application, for example, we consider con‐
straints such as what browser visitors are using, or their screen resolution. People
with impaired sight may make use of our software via screen readers, and people with
restricted mobility may be more likely to use keyboard-style inputs to navigate the
screen.
So although our core services—our core offering—might be the same, we need a way
to adapt them for the different constraints that exist for each type of interface, and for
the different needs of our users. This can be driven purely from a financial standpoint
if you want—more happy customers means more money. But there is also a human,
ethical consideration that comes to the fore: when we ignore customers that have spe‐
cific needs, we deny them the chance to use our services. In some contexts, making it
impossible for people to navigate a UI due to design decisions has led to legal action
and fines—for example, the UK, with a number of other countries, rightly has legisla‐
tion in place to ensure access to websites for people with disabilities.5
Mobile devices have brought a whole host of new constraints. The way our mobile
applications communicate with a server can have an impact. It isn’t just about pure
bandwidth concerns, where the limitations of mobile networks can play a part. Dif‐
ferent sorts of interactions can drain battery life, leading to some angry customers.
The nature of interactions changes according to the device, too. I can’t easily right-
click on a tablet. On a mobile phone, I may want to design my interface for mostly
one-handed use, with most operations being controlled by a thumb. Elsewhere, I
might allow people to interact with services via SMS in places where bandwidth is at a
premium—the use of SMS as an interface is huge in the global south, for example.
A wider discussion on the accessibility of user interfaces is outside the scope of this
book, but we can at least explore the specific challenges caused by different types of
clients, such as mobile devices. A common solution to handling the different needs of
client devices is to perform some sort of filtering and call aggregation on the client
474 
| 
Chapter 14: User Interfaces
