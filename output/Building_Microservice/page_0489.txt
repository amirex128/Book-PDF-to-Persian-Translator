Fundamentally, our users want to engage with our software in as seamless a way as
possible. Be that through a browser on a desktop, or through a native or web mobile
app, the result is the same—users interact with our software through a single pane of
glass. They shouldn’t care whether the user interface is built in a modular or mono‐
lithic way. So we have to look at ways to break apart our user interface functionality
and bring it all back together again, all while resolving the challenges caused by
single-page applications, mobile devices, and more. These issues will occupy us for
the rest of this chapter.
Pattern: Monolithic Frontend
The monolithic frontend pattern describes an architecture in which all the UI state
and behavior is defined in the UI itself, with calls made to backing microservices to
get required data or carry out required operations. Figure 14-3 shows an example of
this. Our screen wants to display information about an album and its track listing, so
the UI makes a request to pull this data from the Album microservice. We also display
information about the most recent special offers by requesting information from the
Promotions microservice. In this example, our microservices return JSON that the UI
uses to update the displayed information.
Figure 14-3. Our Album details screen pulls information from downstream microservi‐
ces to render the UI
Pattern: Monolithic Frontend 
| 
463
