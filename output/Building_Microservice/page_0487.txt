issues, which made better use of their deeper skills and experience. A similar shift has
happened in the space of operations and testers, with more of this work being pulled
into teams.
So, on the contrary, moving specialists out of dedicated teams won’t inhibit the spe‐
cialists’ ability to do their job; in fact, it will likely increase the bandwidth they have to
focus on the difficult problems that really need their attention.
The trick is to find a more effective way to deploy your specialists. Ideally, they would
be embedded in the teams. Sometimes, though, there might not be enough work to
justify their full-time presence in a given team, in which case they may well split their
time between multiple teams. Another model is to have a dedicated team with these
skills whose explicit job is to enable other teams. In Team Topologies, Skelton and
Pais describe these teams as enabling teams. Their job is to go out and help other
teams who are focused on delivering new features to do their job. You can think of
these teams as a bit more like an internal consultancy—they can come in and spend
targeted time with a stream-aligned team, helping it become more self-sufficient in a
particular area or else providing some dedicated time to help roll out a particularly
difficult piece of work.
So whether your specialists are embedded full-time in a given team, or work to enable
others to do the same work, you can remove organizational silos and also help skill
up your colleagues at the same time.
Ensuring Consistency
The second issue often cited as a reason for dedicated frontend teams is that of con‐
sistency. By having a single team responsible for a user interface, you ensure that the
UI has a consistent look and feel. This can extend from easy things like using the
same colors and fonts to solving the same interface problems in the same way—using
a consistent design and interaction language that helps users interact with the system.
This consistency doesn’t just help communicate a degree of polish regarding the
product itself but also ensures that users will find it easier to use new functionality
when it is delivered.
There are ways, though, to help ensure a degree of consistency across teams. If you
are using the enabling team model, with specialists spending time with multiple
teams, they can help ensure that the work done by each team is consistent. The
creation of shared resources like a living CSS style guide or shared UI components
can also help.
As a concrete example of an enabling team being used to help with consistency, the
Financial Times Origami team builds web components in collaboration with the
design team, which encapsulates the brand identity—ensuring a consistent look and
feel across the stream-aligned teams. This type of enabling team provides two forms
Toward Stream-Aligned Teams 
| 
461
