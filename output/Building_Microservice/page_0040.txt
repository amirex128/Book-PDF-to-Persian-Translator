4 Matthew Skelton and Manuel Pais, Team Topologies (Portland, OR: IT Revolution, 2019).
Often, the UI is not provided directly by the microservice, but even if this is the case,
we would expect the portion of the UI related to this functionality to still be owned
by the Customer Profile Team, as Figure 1-4 indicates. This concept of a team own‐
ing an end-to-end slice of user-facing functionality is gaining traction. The book
Team Topologies4 introduces the idea of a stream-aligned team, which embodies this
concept:
A stream-aligned team is a team aligned to a single, valuable stream of work...[T]he
team is empowered to build and deliver customer or user value as quickly, safely, and
independently as possible, without requiring hand-offs to other teams to perform parts
of the work.
The teams shown in Figure 1-4 would be stream-aligned teams, a concept we’ll
explore in more depth in Chapters 14 and 15, including how these types of organiza‐
tional structures work in practice, and how they align with microservices.
A Note on “Fake” Companies
Throughout the book, at different stages, we will meet MusicCorp, FinanceCo,
FoodCo, AdvertCo, and PaymentCo.
FoodCo, AdvertCo, and PaymentCo are real companies whose names I have changed
for confidentiality reasons. In addition, when sharing information about these com‐
panies, I have often omitted certain details to provide more clarity. The real world is
often messy. I’ve always strived, though, to remove only extraneous detail that
wouldn’t be helpful, while still ensuring that the underlying reality of the situation
remains.
MusicCorp, on the other hand, is a fake company that is a composite of many organi‐
zations I have worked with. The stories I share around MusicCorp are reflections of
real things I have seen, but they haven’t all happened to the same company!
The Monolith
We’ve spoken about microservices, but microservices are most often discussed as an
architectural approach that is an alternative to monolithic architecture. To more
clearly distinguish the microservice architecture, and to help you better understand
whether microservices are worth considering, I should also discuss what exactly I
mean by monoliths.
When I talk about monoliths throughout this book, I am primarily referring to a unit
of deployment. When all functionality in a system must be deployed together, I
14 
| 
Chapter 1: What Are Microservices?
