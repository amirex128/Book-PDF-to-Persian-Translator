You can use CRDs for everything from managing small bits of configuration to con‐
trolling service meshes like Istio or cluster-based software like Kafka. With such a
flexible and powerful concept, I find it difficult to understand where CRDs would
best be used, and there doesn’t seem to be a general consensus out there among the
experts I’ve chatted to either. This whole space still doesn’t seem to be settling down
as quickly as I’d hoped, and there isn’t as much consensus as I’d like—a trend in the
Kubernetes ecosystem.
And Knative
Knative is an open source project that aims to provide FaaS-style workflows to devel‐
opers, using Kubernetes under the hood. Fundamentally, Kubernetes isn’t terribly
developer friendly, especially if we compare it to the usability of things like Heroku or
similar platforms. The aim with Knative is to bring the developer experience of FaaS
to Kubernetes, hiding the complexity of Kubernetes from developers. In turn, this
should mean development teams are able to more easily manage the full life cycle of
their software.
We’ve already discussed service meshes, and specifically mentioned Istio, back in
Chapter 5. A service mesh is essential for Knative to run. While Knative theoretically
allows you to plug in different service meshes, only Istio is considered stable at this
time (with support for other meshes like Ambassador and Gloo still in alpha). In
practice, this means that if you want to adopt Knative, you’ll also already have to have
bought into Istio.
With both Kubernetes and Istio, projects driven largely by Google, it took a very long
time for them to get to a stage where they could be considered stable. Kubernetes still
had major shifts after its 1.0 release, and only very recently Istio, which is going to
underpin Knative, was completely rearchitected. This track record of delivering sta‐
ble, production-ready projects makes me think that Knative may well take a lot
longer to be ready for use by most of us. While some organizations are using it, and
you could probably use it too, experience says it will be only so long before some
major shift will take place that will require painful migration. It’s partly for this rea‐
son that I’ve suggested that more conservative organizations who are considering an
FaaS-like offering for their Kubernetes cluster look elsewhere—projects like Open‐
FaaS are already being used in production by organizations all over the world and
don’t require an underlying service mesh. But if you do jump on the Knative train
right now, don’t be surprised if you have the odd derailment in your future.
One other note: it’s been a shame to see that Google has decided not to make Knative
a part of the CNCF—one can only assume this is because Google wants to drive the
direction of the tool itself. Kubernetes was a confusing prospect for many when
launched, partly because it reflected Google’s mindset around how containers should
be managed. It benefited hugely from involvement from a broader set of the industry,
Kubernetes and Container Orchestration 
| 
267
