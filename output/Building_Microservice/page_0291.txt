The Cloud Native Computing Federation
The Cloud Native Computing Foundation (CNCF for short) is an offshoot of the
nonprofit Linux Foundation. The CNCF focuses on curating the ecosystem of
projects to help promote cloud native development, although in practice this means
supporting Kubernetes and projects that work with or build on Kubernetes itself. The
projects themselves aren’t created or directly developed by the CNCF; instead, you
can see the CNCF as a place where these projects that might otherwise be developed
in isolation can be hosted together in the same place, and where common standards
and interoperability can be developed.
In this way, the CNCF reminds me of the role of the Apache Software Foundation—
as with the CNCF, a project being part of the Apache Software Foundation normally
implies a level of quality and wider community support. All of the projects hosted by
the CNCF are open source, although the development of these projects may well be
driven by commercial entities.
Aside from helping guide the development of these associated projects, the CNCF
also runs events, provides documentation and training materials, and defines the var‐
ious certification programs around Kubernetes. The group itself has members from
across the industry, and although it can be difficult for smaller groups or independ‐
ents to play much of a role in the organization itself, the degree of cross-industry sup‐
port (including many companies who are competitors with each other) is impressive.
As an outsider, the CNCF seems to have had great success in helping spread the word
regarding the usefulness of the projects it curates. It’s also acted as a place where the
evolution of major projects can be discussed in the open, ensuring a lot of broad
input. The CNCF has played a huge part in the success of Kubernetes—it’s easy to
imagine that without it, we’d still have a fragmented landscape in this area.
Platforms and Portability
You’ll often hear Kubernetes described as a “platform.” It’s not really a platform in
the sense that a developer would understand the term, though. Out of the box, all it
really gives you is the ability to run container workloads. Most folks using Kubernetes
end up assembling their own platform by installing supporting software such as ser‐
vice meshes, message brokers, log aggregation tools, and more. In larger organiza‐
tions, this ends up being the responsibility of a platform engineering team, who put
this platform together and manage it, and help developers use the platform
effectively.
This can be both a blessing and a curse. This pick-and-mix approach is made possible
due to a fairly compatible ecosystem of tools (thanks in large part to the work by the
CNCF). This means you can select your favorite tools for specific tasks if you want.
But it can also lead to the tyranny of choice—we can easily become overwhelmed
Kubernetes and Container Orchestration 
| 
265
