Figure 8-20. Different functions using the same database, as they are all logically part
of the same microservice and are managed by the same team
Figure 8-21. Each function using its own database
This mapping from a single microservice to multiple finer-grained deployable units
warps our previous definition of a microservice somewhat. We normally consider a
microservice as being an independently deployable unit—now one microservice is
made up of multiple different independently deployable units. Conceptually, in this
example, the microservice moves toward being more of a logical than a physical
concept.
Get even more fine-grained.    If you wanted to go even smaller, there is a temptation to
break down your functions per aggregate into smaller pieces. I am much more cau‐
tious here. Aside from the explosion of functions this will likely create, it also violates
one of the core principles of an aggregate—that we want to treat it as a single unit to
ensure we can better manage the integrity of the aggregate itself.
Deployment Options 
| 
255
