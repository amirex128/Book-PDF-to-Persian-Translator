Figure 2-18. A traditional three-tiered architecture is often driven by technological
boundaries
Organizational
As we established when I introduced Conway’s law back in Chapter 1, there is an
inherent interplay between organizational structure and the system architecture you
end up with. Quite aside from the studies that have shown this link, in my own anec‐
dotal experience I have seen this play out time and time again. How you organize
yourself ends up driving your systems architecture, for good or for ill. When it comes
to helping us define our service boundaries, we have to consider this as a key part of
our decision making.
Defining a service boundary whose ownership would cut across multiple different
teams is unlikely to yield the outcomes we would desire—as we’ll explore further in
Chapter 15, shared ownership of microservices is a fraught affair. It therefore follows
that we must take into account the existing organizational structure when consider‐
ing where and when to define boundaries, and in some situations we should perhaps
even consider changing the organizational structure to support the architecture we
want.
Of course, we also have to consider what happens if our organizational structure
changes too. Does that mean we now have to rearchitect our software? Well, in the
worst case, it might cause us to examine an existing microservice that now needs to
be split, as it contains functionality that now may be owned by two separate teams,
whereas before a single team was responsible for both parts. On the other hand, often
66 
| 
Chapter 2: How to Model Microservices
