aspects around security and resiliency, I found myself wanting to go back and expand
on those topics that are increasingly important to modern software development.
Thus in this second edition, I spend more time sharing explicit examples to better
explain the ideas. Every chapter has been reexamined, and every sentence reviewed.
Not a lot of the first edition remains in terms of concrete prose, but the ideas are all
still here. I’ve tried to be clearer in my own opinions, while still recognizing that there
are often multiple ways of solving a problem. This has meant expanding the discus‐
sion of inter-process communication, which is now split across three chapters. I also
spend more time looking at the implications of technologies such as containers,
Kubernetes, and serverless; as a result, there are now separate build and deployment
chapters.
My hope had been to create a book around the same size as the first edition, while
finding a way to pack in more ideas. As you can see, I’ve failed to achieve my goal—
this edition is bigger! But I think I’ve succeeded in being clearer in how I articulate
the ideas.
Navigating This Book
This book is primarily organized in a topic-based format. I have structured and writ‐
ten the book as though you will read it from beginning to end, but of course you may
want to jump to the specific topics that most interest you. If you do decide to dive
right into a specific chapter, you may find the Glossary toward the end of the book
helpful in explaining new or unfamiliar terms. On the topic of terminology, I use
microservice and service interchangeably throughout the book; you can assume that
the two terms refer to the same thing unless I explicitly state otherwise. I also summa‐
rize some of the book’s key advice in the Bibliography if you really just want to jump
to the end—just remember you’ll be missing a lot of detail if you do that!
The main body of the book is broken into three separate parts—Foundation, Imple‐
mentation, and People. Let’s look at what each part covers.
Part I, Foundation
In this part, I detail some of the core ideas behind microservices.
Chapter 1, What Are Microservices?
This is a general introduction to microservices in which I briefly discuss a num‐
ber of topics that I’ll expand on later in the book.
Chapter 2, How to Model Microservices
This chapter examines the importance of concepts like information hiding, cou‐
pling, cohesion, and domain-driven design in helping find the right boundaries
for your microservices.
Preface 
| 
xix
