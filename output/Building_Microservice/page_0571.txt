ensuring that what we are building matches this vision, and evolving the vision if
needed.
Fundamentally, governance should be a group activity. A properly functioning gover‐
nance group can work together to share the work and shape the vision. It could be an
informal chat with a small enough team, or a more structured regular meeting with
formal group membership for a larger scope. This is where I think the principles we
covered earlier should be discussed and changed as required. If a formal group is
required, this group needs to consist predominantly of people who are executing the
work being governed. This group should also be responsible for tracking and manag‐
ing technical risks.
Getting together and agreeing on how things can be done is a good idea. But spend‐
ing time making sure people are following these guidelines is less fun, as is placing a
burden on developers to implement all these standard things you expect each micro‐
service to do. I am a great believer in making it easy to do the right thing—and as we
discussed in Chapter 15, the paved road is a really useful concept here. The architect
has a role to clearly articulate the vision—where you are going—and to make it easy
to get there. As such, they should be involved in helping shape the requirements of
whatever paved road you build. For many, the platform will be the biggest example of
this—the architect ends up being an important stakeholder for the platform team.
We’ve already looked at the role of the platform in some depth, so let’s look at a cou‐
ple of other techniques we can use to make it as easy as possible for people to do the
right thing.
Exemplars
Written documentation is good and useful. I clearly see the value in it; after all, I’ve
written this book. But developers also like code—code they can run and explore. If
you have a set of standards or best practices you would like to encourage, then having
exemplars you can point people to is useful. The idea is that people can’t go far wrong
just by imitating some of the better parts of your system.
Ideally, these should be real-world microservices running in your system that get
things right, rather than isolated microservices that are implemented merely as “per‐
fect examples.” By ensuring your exemplars are actually being used, you ensure that
all the principles you have actually make sense.
Tailored Microservice Template
Wouldn’t it be great if you could make it really easy for all developers to follow most
of the guidelines you have with very little work? What if, out of the box, the develop‐
ers had most of the code in place to implement the core attributes that each microser‐
vice needs?
Governance and the Paved Road 
| 
545
