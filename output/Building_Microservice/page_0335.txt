Figure 10-3. Multiple collaborating services distributed across multiple hosts
Aggregation of information—metrics and logs—play a vital part in making this hap‐
pen. But this is not the only thing we need to consider. We need to work out how to
sift this huge influx of data and try to make sense of it all. Above all, this is largely
about a mindset shift, from a fairly static landscape of monitoring to the more active
world of observability and testing in production.
Observability Versus Monitoring
We’re going to start delving into how we begin solving some of the problems we’ve
just outlined, but before we do, I think it’s important that we explore a term that has
gained a lot of popularity since I wrote the first edition of this book—observability.
As is often the case, the concept of observability has been around for decades but has
only recently come to software development. The observability of a system is the
extent to which you can understand the internal state of the system from external
outputs. It typically requires a more holistic understanding of your software—seeing
it more as a system rather as than a set of disparate entities.
Observability Versus Monitoring 
| 
309
