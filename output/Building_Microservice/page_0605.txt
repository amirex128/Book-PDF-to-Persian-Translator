progressive delivery, 269-273
role of Puppet, Chef, and other tools, 258
selecting the right deployment platform,
257, 273
virtual machines (VMs), 239-241
zero-downtime deployment, 233
desired state management, 234-237
detective controls, 348, 570
development
artifact creation, 204
build pipelines, 201-201
building security into software delivery, 349
challenges of, 26
code organization, 205-217
continuous delivery (CD), 201-203, 570
continuous integration (CI), 197-200, 570
tooling, 203
trade-offs and environments, 203
directory services, 377
distributed monoliths, 17
distributed tracing, 19, 324-326
distributed transactions
avoiding, 181
versus sagas, 195
two-phase commits, 179-181
DNS (Domain Name System), 157
Docker, 246, 570
Dockerfiles, 258
documentation, of services, 169-173
domain coupling, 41, 570
domain events, 60
Domain Name System (DNS), 157
domain-driven design (DDD), 7, 51-62, 552,
570
DRY (don’t repeat yourself), 154
dynamic service registries, 159-161
E
ease of deployment, 25
EEMUA (Engineering Equipment and Materi‐
als Users Association), 332
Elasticsearch, 319
empathy, 548
enabling teams, 461, 503-509, 540
end-to-end tests
alternatives to, 292-296
implementing, 285-292
scope of, 281
Engineering Equipment and Materials Users
Association (EEMUA), 332
engineers, 526
(see also evolutionary architects)
ensemble programming, 517
environments
during deployment, 225-228
during development, 203
error budgets, 328, 570
error handling, 91, 548
etcd, 160
event sourcing, 434
event storming, 59-61
event-driven communication, 108-115, 553
events
components of, 111-115
defined, 570
versus messages, 110
evolutionary architects
architecture in stream-aligned organiza‐
tions, 540
building teams, 542
concept of, 560
core responsibilities of, 548
defining standards for microservices,
543-544
defining system boundaries, 530-533
exception handling, 548
governance and the paved road, 544-547
guiding evolutionary architecture, 539
habitability and, 534
making change possible, 529
principles and practices, 536-538
role of, 525-527
social construct of, 533
software architecture defined, 527
technical debt and, 547
vision for, 529
explicit schemas, 122, 143, 146, 169
exploratory testing, 277
extensibility, graceful, 390
F
feature branching, 199, 570
feature toggles, 80, 271
federation (Kubernetes), 262-263
fine-grained authorization, 379
Firecracker, 245
fitness functions, 539
Index 
| 
579
