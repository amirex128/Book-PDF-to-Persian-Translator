The advantages to being frugal with data collection are manifold. First, if you don’t
store it, no one can steal it. Second, if you don’t store it, no one (e.g., a governmental
agency) can ask for it either!
The German phrase Datensparsamkeit represents this concept. Originating from
German privacy legislation, it encapsulates the concept of storing only as much infor‐
mation as is absolutely required to fulfill business operations or satisfy local laws.
This is obviously in direct tension with the move toward storing more and more
information, but realizing that this tension even exists is a good start!
It’s all about the keys
Most forms of encryption involves making use of some key in conjunction with a
suitable algorithm to create encrypted data. To decrypt the data so it can be read,
authorized parties will need access to a key—either the same key or a different key (in
the case of public-key encryption). So where are your keys stored? Now, if I am
encrypting my data because I am worried about someone stealing my whole database,
and I store the key I use in the same database, then I haven’t really achieved much!
Therefore, we need to store the keys somewhere else. But where?
One solution is to use a separate security appliance to encrypt and decrypt data.
Another is to use a separate key vault that your service can access when it needs a key.
The life-cycle management of the keys (and access to change them) can be a vital
operation, and these systems can handle this for you. This is where HashiCorp’s
Vault can also come in very handy.
Some databases even include built-in support for encryption, such as SQL Server’s
Transparent Data Encryption, which aims to handle this in a transparent fashion.
Even if your database of choice does include such support, research how the keys are
handled and understand if the threat you are protecting against is actually being
mitigated.
Again, this stuff is complex. Avoid implementing your own encryption, and do some
good research!
Encrypt data when you first see it. Only decrypt on demand, and
ensure that data is never stored anywhere.
374 
| 
Chapter 11: Security
