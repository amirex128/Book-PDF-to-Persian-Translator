12 The “S” in “HTTPS” used to relate to the older Secure Socket Layer (SSL), which has been replaced with TLS
for a number of reasons. Confusingly, the term SSL still lingers even when TLS is actually being used. The
OpenSSL library, for example, is actually widely used to implement TLS, and when you are issued an SSL
certificate, it will actually be for TLS. We don’t make things easy for ourselves, do we?
Figure 11-6. The four main concerns when it comes to data in transit
Let’s look at each concern in a bit more detail.
Server identity
One of the simplest things to check is that the server you are talking to is exactly who
it claims to be. This is important because a malicious party could theoretically imper‐
sonate an endpoint—and vacuum up any useful data that you send it. Validating
server identity has long been a concern on the public internet, leading to the push for
more widespread use of HTTPS—and to an extent, we are able to benefit from the
work done to help secure the public internet when it comes to managing internal
HTTP endpoints.
When people talk about “HTTPS,” they are typically referring to using HTTP with
TLS.12 With most communication over the public internet, due to the various poten‐
tial attack vectors out there (unsecured WiFi, DNS poisoning, and the like), it is vital
to ensure that when we go to a website it really is the website it claims to be. With
HTTPS, our browser can look at the certificate for that website and make sure it is
valid. It is a highly sensible safety mechanism—“HTTPS Everywhere” has become a
rallying cry for the public internet, and with good reason.
370 
| 
Chapter 11: Security
