4 Gregor Hohpe and Bobby Woolf, Enterprise Integration Patterns (Boston: Addison-Wesley, 2003).
I also strongly recommend checking out Enterprise Integration Patterns by Gregor
Hohpe and Bobby Woolf,4 which contains a lot more detail on the different messag‐
ing patterns that you may want to consider in this space.
We also have to be honest, though, about the integration styles that we might con‐
sider “simpler”—the problems associated with knowing whether things worked or
not is not limited to asynchronous forms of integration. With a synchronous, block‐
ing call, if you get a time-out, did this happen because the request got lost and the
downstream party didn’t receive it? Or did the request get through, but the response
got lost? What do you do in that situation? If you retry, but the original request did
get through what then? (Well, this is where idempotency comes in, a topic we cover
in Chapter 12.)
Arguably, with regard to failure handling, synchronous blocking calls can cause us
just as many headaches when it comes to working out if things have happened (or
not). It’s just that those headaches may be more familiar to us!
Summary
In this chapter, I broke down some of the key styles of microservice communication
and discussed the various trade-offs. There isn’t always a single right option, but
hopefully I’ve detailed enough information regarding synchronous and asynchro‐
nous calls and event-driven and request-response styles of communication to help
you make the correct call for your given context. My own biases toward asynchro‐
nous, event-driven collaboration are a function not just of my experiences but also of
my aversion to coupling in general. But this style of communication comes with sig‐
nificant complexity that cannot be ignored, and every situation is unique.
In this chapter, I briefly mentioned a few specific technologies that can be used to
implement these interaction styles. We’re now ready to begin the second part of this
book—implementation. In the next chapter, we’ll explore implementing microservice
communication in more depth.
Summary 
| 
117
