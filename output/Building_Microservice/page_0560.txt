4 Grady Booch (@Grady_Booch), Twitter, September 4, 2020, 5:12 a.m., https://oreil.ly/ZgPRZ.
5 Jon Moore, “Architecture with 800 of My Closest Friends: The Evolution of Comcast’s Architecture Guild,”
InfoQ, May 14, 2019, https://oreil.ly/aIvbi.
Architecture is what happens, not what is planned. If as an architect you remove
yourself from the process of putting this vision into place, then you’re not an archi‐
tect—you’re a dreamer. The architecture that will emerge may or may not bear any
relationship to what you want. It will happen with or without you. Implementing an
architecture requires the work of many people and a host of decisions, large and
small.
As Grady Booch put it:4
In the beginning, the architecture of a software-intensive system is a statement of
vision. In the end, the [a]rchitecture of every such system is a reflection of the billions
upon billions of small and large, intentional and accidental design decisions made
along the way.
This means that even if you have a dedicated individual who is ultimately accounta‐
ble for the architecture, there are many people responsible for putting this vision into
practice. Implementing a successful architecture is going to be a team effort. Coming
back to Ralph Johnson’s quote from earlier, “architecture is a social construct.” A
great example of this comes from Comcast, which has shared its experiences of how
it decentralized decision making through the use of an architecture guild.5 Given its
scale, Comcast decided to leverage experiences from industry steering groups, where
collective decision making is key:
At Comcast we realized this problem looked very similar to the way open standards
bodies work: getting multiple autonomous groups to agree on technical approaches.
We designed an internal Architecture Guild explicitly modeled after a very successful
standards body, the Internet Engineering Task Force (IETF) that defines many impor‐
tant Internet protocols.
—Jon Moore, chief software architect at Comcast Cable
Comcast’s approach has a level of formality that some organizations might find oner‐
ous, but it seems to work well for the company, given its size and distribution.
Habitability
Yet another concept that comes from the built environment and has resonance in the
field of software development is habitability. I first learned of this term from Frank
Buschmann—he explained that an architect has responsibility for ensuring that the
environment they create is nice to work in. If the architecture is the framing of the
system, which describes how the hard-to-change things fit together, then there are
534 
| 
Chapter 16: The Evolutionary Architect
