A platform that can implement common functionality, such as the ability to handle
desired state management for microservices, log aggregation, and inter-microservice
authorization and authentication, can deliver huge improvements in productivity
and enable teams to take on more responsibility without also having to drastically
increase the amount of work they do. In fact, a platform should give teams more
bandwidth to focus on delivering features.
The platform team
A platform needs someone to run and manage it. These technology stacks can be
complex enough to warrant some specific expertise. My concern, though, is that on
occasion it can be too easy for platform teams to lose sight of why they exist.
A platform team has users, in the same way that any other team has users. The users
of the platform team are other developers—your job, if you are in a platform team, is
to make their lives easier (this of course is the job of any enabling team). That means
that the platform you create needs to fit the needs of the teams using it. It also means
that you need to work with the teams using your platform not only to help them use
it well but also to take on board their feedback and requirements to improve the plat‐
form you deliver.
In the past, I’ve preferred calling such a team something like “delivery services” or
“delivery support” to better articulate its goal. Really, the job of a platform team isn’t
to build a platform; it’s to make developing and shipping functionality easy. Building
a platform is just one way that the members of a platform team can achieve this. I do
worry that by calling themselves a platform team they will see all problems as things
that can and should be solved by the platform, rather than thinking more widely
about other ways to make developers’ lives easier.
Like any good enabling team, a platform team needs to operate almost like an inter‐
nal consultancy to some extent. If you are in a platform team, you need to be going
out to find out what problems people are facing and working with them to help them
get these problems fixed. But as you also end up building the platform too, you need
to have a heavy dose of product development work in there as well. In fact, taking a
product development approach to how you build out your platform is a great idea
and could be a great place to help grow new product owners.
The paved road
A concept that has become popular in software development is that of “the paved
road.” The idea is that you clearly communicate how you want things to be done and
then provide mechanisms whereby these things can be done easily. For example, you
might want to ensure that all microservices communicate via mutual TLS. You could
then back this up by providing a common framework or deployment platform that
Enabling Teams 
| 
507
