13 “Organizational Evolution for Accelerating Delivery of Comparison Services at Uswitch,” Team Topologies,
June 24, 2020, https://oreil.ly/zoyvv.
would automatically deliver mutual TLS for the microservices running on it. A plat‐
form can be a great way to deliver on that paved road.
The key concept behind a paved road is that using the paved road isn’t enforced—it
just provides an easier way of getting to your destination. So if a team wanted to
ensure its microservices communicated via mutual TLS without using the common
framework, it would have to find some other way of doing this, but it would still be
allowed. The analogy here is that while we might want everyone to get to the same
destination, people are free to find their own paths there—the hope is that the paved
road is the easiest way of getting where you need.
The paved road concept aims to make the common cases easy, while leaving room for
exceptions where warranted.
If we think of the platform as a paved road, by making it optional, you incentivize the
platform team to make the platform easy to use. Here is Paul Ingles again, on meas‐
uring the effectiveness of the platform team:13
We’d set [objectives and key results (OKRs)] around the number of teams we’d want
to adopt the platform, the number of applications using the platform autoscaling ser‐
vice, the proportion of applications switched to the platform dynamic credentials ser‐
vice, and so on. Some of those we’d track over longer periods of time, and others were
helpful to guide progress for a quarter and then we’d drop them in favor of something
else.
We never mandated the use of the platform, so setting key results for the number of
onboarded teams forced us to focus on solving problems that would drive adoption.
We also look for natural measures of progress: the proportion of traffic served by the
platform, and the proportion of revenue served through platform services are both
good examples of that.
When you place barriers in people’s way that seem arbitrary and capricious, those
people will find ways of working around the barriers to get a job done. So in general,
I find it much more effective to explain why things should be done in a certain way,
and then make it easy to do things in that way, rather than attempting to make the
things you don’t like impossible.
The shift to more autonomous, stream-aligned teams doesn’t eliminate the need for
having a clear technical vision or for being clear about certain things that all teams
are required to do. If there are concrete restrictions (the need to be cloud-vendor
agnostic, for example) or specific requirements that all teams need to obey (all PII
needs to be encrypted at rest using specific algorithms), then those still need to be
clearly communicated, and the reasons for them made clear. The platform can then
play a role in making these things easy to do. By using the platform, you are on the
508 
| 
Chapter 15: Organizational Structures
