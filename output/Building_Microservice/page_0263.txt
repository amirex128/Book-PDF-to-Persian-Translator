think you are better off adopting a platform that embraces it as a first-class concept.
As this means coming to grips with what might represent a new deployment platform
and all the associated ideas and tooling, you might want to delay adopting desired
state management until you already have a few microservices up and running. This
will allow you to get familiar with the basics of microservices before becoming over‐
loaded with new technology. Platforms like Kubernetes really help when you have
lots of things to manage—if you only have a few processes to worry about, you could
wait till later on to adopt these tools.
GitOps
GitOps, a fairly recent concept pioneered by Weaveworks, brings together the con‐
cepts of desired state management and infrastructure as code. GitOps was originally
conceived in the context of working with Kubernetes, and this is where the related
tooling is focused, although arguably it describes a workflow that others have used
before.
With GitOps, your desired state for your infrastructure is defined in code and stored
in source control. When changes are made to this desired state, some tooling ensures
that this updated desired state is applied to the running system. The idea is to give
developers a simplified workflow for working with their applications.
If you’ve used infrastructure configuration tools like Chef or Puppet, this model is
familiar for managing infrastructure. When using Chef Server or Puppet Master, you
had a centralized system capable of pushing out changes dynamically when they were
made. The shift with GitOps is that this tooling is making use of capabilities inside
Kubernetes to help manage applications rather than just infrastructure.
Tools like Flux are making it much easier to embrace these ideas. It’s worth noting, of
course, that while tools can make it easier for you to change the way you work, they
can’t force you into adopting new working approaches. Put differently, just because
you have Flux (or another GitOps tool), it doesn’t mean you’re embracing the ideas
of desired state management or infrastructure as code.
If you’re in the world of Kubernetes, adopting a tool like Flux and the workflows it
promotes may well speed up the introduction of concepts like desired state manage‐
ment and infrastructure as code. Just make sure you don’t lose sight of the goals of
the underlying concepts and get blinded by all the new technology in this space!
Deployment Options
When it comes to the approaches and tooling we can use for our microservice work‐
loads, we have loads of options. But we should look at these options in terms of the
principles I just outlined. We want our microservices to run in an isolated fashion
and to ideally be deployed in a way that avoids downtime. We want the tooling we
Deployment Options 
| 
237
