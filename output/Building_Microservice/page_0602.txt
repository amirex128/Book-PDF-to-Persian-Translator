software architecture defined, 527
three-tiered architecture, 10-12
vertical architecture, 12
architectural safety, 544
artifact creation, 204
async/await construct, 100
AsyncAPI, 147
asynchronous nonblocking calls, 98-101
atomic commits, versus atomic deployment,
211
atomicity, consistency, isolation, and durability
(ACID), 176
authentication and authorization
centralized, upstream authorization, 381
common single sign-on (SSO), 376
confused deputy problem, 380-381
decentralized authorization, 382
defined, 375, 569
fine-grained authorization, 379
human authentication, 376
JSON Web Token (JWT), 382-386
mutual authentication, 371
service-to-service authentication, 375
single sign-on gateways, 377-379
automation
in anomaly detection, 340
as essential to security, 349
during deployment, 231
autonomy, 498, 549
autoscaling, 449
availability, 393, 410
Azure
Application Insights, 320
Azure Functions, 238, 250
Azure Web Apps, 268
Azure’s Key Vault, 357
benefits of, 268
defined, 569
desired state management, 235
event grid product, 147
limitations of, 250-251
managed VMs on, 241
market share of, 264
openapi-diff tool, 148
public cloud services offered by, 21
SLA availability, 221
B
backend for frontend (BFF) pattern, 480-488
Backstage tool, 172
backups, 363, 375
backward compatibility, 121 (see also breaking
changes)
backward recovery, versus forward, 184
Biz Ops tool, 171
blameless post-mortems, 415
blue-green deployment, 273
bounded context
alternatives to business domain boundaries,
62-67
defined, 56, 569
defining system boundaries, 530-533
hidden models, 56
mapping to microservices, 58
shared models, 57
BPM (business process modeling) tools, 191
Brakeman, 350
branching, 199
breaking changes
avoiding, 144-149
managing, 149-154
brittle tests, 286
brittleness, 125
build pipelines, 201-201
bulkheads, 397, 400, 569
business functionality, aligning architecture
with, 10-14
business process modeling (BPM) tools, 191
business-facing tests, 276
C
caching
basics of, 435
cache poisoning, 448
invalidation, 442-447
performance benefits, 436
robustness benefits, 436
scaling benefits, 436
trade-offs between freshness and optimiza‐
tion, 447-448
where to cache, 437-442
canary releases, 271, 337
CAP theorem
availability, 410
combined approach, 412
components of, 408-410
consistency, 410
partition tolerance, 411
576 
| 
Index
