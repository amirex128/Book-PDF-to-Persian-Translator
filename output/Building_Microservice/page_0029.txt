CHAPTER 1
What Are Microservices?
Microservices have become an increasingly popular architecture choice in the half
decade or more since I wrote the first edition of this book. I can’t claim credit for the
subsequent explosion in popularity, but the rush to make use of microservice archi‐
tectures means that while many of the ideas I captured previously are now tried and
tested, new ideas have come into the mix at the same time that earlier practices have
fallen out of favor. So it’s once again time to distill the essence of microservice archi‐
tecture while highlighting the core concepts that make microservices work.
This book as a whole is designed to give a broad overview of the impact that micro‐
services have on various aspects of software delivery. To start us off, this chapter will
take a look at the core ideas behind microservices, the prior art that brought us here,
and some reasons why these architectures are used so widely.
Microservices at a Glance
Microservices are independently releasable services that are modeled around a busi‐
ness domain. A service encapsulates functionality and makes it accessible to other
services via networks—you construct a more complex system from these building
blocks. One microservice might represent inventory, another order management, and
yet another shipping, but together they might constitute an entire ecommerce system.
Microservices are an architecture choice that is focused on giving you many options
for solving the problems you might face.
They are a type of service-oriented architecture, albeit one that is opinionated about
how service boundaries should be drawn, and one in which independent deployabil‐
ity is key. They are technology agnostic, which is one of the advantages they offer.
From the outside, a single microservice is treated as a black box. It hosts business
functionality on one or more network endpoints (for example, a queue or a REST
3
