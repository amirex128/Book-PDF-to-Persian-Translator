community of practice (CoP) groups, 505
enabling teams, 461, 503-509, 540
ensuring consistency across, 461
full stack teams, 459
geographical distribution, 521
platform teams, 507
size of, 495
small teams, large organization, 496-497
stream-aligned teams, 459-463, 492,
540-542
strong versus collective ownership, 502
team APIs, 497
two-pizza teams, 494
understanding responsibilities, 541
technical debt, 547
technology choices
GraphQL, 133-135
message brokers, 135-140
options explored, 123
remote procedure calls (RPCs), 123-127
Representational State Transfer (REST),
127-133
stream-aligned teams and, 462
technology coupling, 124
technology heterogeneity, 22, 65
technology overload, 27
technology-facing tests, 276
templates, 545
temporal coupling, 42
testing
A/B tests, 336
canary releases, 337
challenges of microservices, 30
chaos engineering, 337
consumer-driven contract testing, 148
consumer-driven contracts (CDCs),
293-296
contract tests, 292
cross-functional testing, 300-302
developer experience, 296
end-to-end test alternatives, 292-296
end-to-end test implementation, 285-292
holistic approach to, 303
manual exploratory testing, 277
overview of, 556
Pact testing tool, 294
parallel run pattern, 337
performance tests, 301
preproduction to in-production testing,
297-299, 335-337
robustness tests, 302
service test implementation, 283-285
smoke tests, 337
synthetic transactions, 335-336
test scope, 278-283
types of tests, 276-277
threat modeling, 572
three pillars of observability, 310
tight coupling, 38
tightly coupled organizations, 493
time to live (TTL), 158, 443
time-outs, 397-399
tooling, 203
topic-based systems, 135
traces (distributed tracing), 325
transactions (see database transactions)
trunk-based development, 199, 573
trust, 138
two-phase commit algorithms (2PCs), 179-181
two-pizza teams, 494
type 2 virtualization, 240
U
ubiquitous language, 52, 573
unit tests, 279
upstream authorization, 381
usage, tracking, 153
user credentials, 355
user experience, 122
user interfaces (UIs)
adapting to device constraints, 474
backend for frontend (BFF) pattern,
480-488
central aggregating gateway pattern,
475-479
developments over time, 455
GraphQL, 488-489
hybrid approach, 489
melding of digital and mobile UIs, 456
micro frontend pattern, 464-466
monolithic frontend pattern, 463-464
overview of, 559
ownership models, 456-459
page-based decomposition, 467-468
stream-aligned teams, 459-463, 492
widget-based decomposition, 469-474
Index 
| 
585
