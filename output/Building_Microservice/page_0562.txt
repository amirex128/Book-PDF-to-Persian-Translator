A Principled Approach
Rules are for the obedience of fools and the guidance of wise men.
—Generally attributed to Douglas Bader
Making decisions in system design is all about trade-offs, and microservice architec‐
tures give us lots of trade-offs to make! When picking a data store, do we pick a plat‐
form that we have less experience with but that gives us better scaling? Is it OK for us
to have two different technology stacks in our system? What about three? Some deci‐
sions can be made completely on the spot with the information available to us, and
these are the easiest to make. But what about those decisions that might have to be
made on incomplete information?
Framing can help here, and a great way to help frame our decision making is to
define a set of principles and practices that guide it, based on goals that we are trying
to achieve. Let’s look at each of these aspects of framing in turn.
Strategic Goals
The role of the architect is already daunting enough, so luckily we usually don’t have
to also define strategic goals! Strategic goals should speak to where your company is
going and to how it sees itself as best making its customers happy. These will be high-
level goals and may not include technology at all. They could be defined at a com‐
pany level or a division level. They might be things like “Expand into Southeast Asia
to unlock new markets,” or “Let the customer achieve as much as possible using self-
service.” The key is that they define where your organization is headed, so you need
to make sure the technology is aligned to that.
If you’re the person defining the company’s technical vision, this may mean you’ll
need to spend more time with the nontechnical parts of your organization (or “the
business,” as they are often called). What is the driving vision for the business? And
how does it change?
Principles
Principles are rules you have made in order to align what you are doing to some
larger goal, and they will sometimes change. For example, if one of your strategic
goals as an organization is to decrease the time to market for new features, you may
define a principle that says that delivery teams have full control throughout the life
cycle of their software to ship whenever they are ready, independently of any other
team. If another goal is that your organization is moving to aggressively grow its
offerings in other countries, you may decide to implement a principle that the entire
system must be portable to allow for it to be deployed locally in order to respect sov‐
ereignty of data.
536 
| 
Chapter 16: The Evolutionary Architect
