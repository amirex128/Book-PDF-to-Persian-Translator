6 See the article “BFF @ SoundCloud” by Lukasz Plotnicki for a great overview of how SoundCloud uses the
BFF pattern.
Pattern: Backend for Frontend (BFF)
The main distinction between a BFF and a central aggregating gateway is that a BFF
is single purpose in nature—it is developed for a specific user interface. This pattern
has proved to be very successful in helping handle the differing concerns of user
interfaces, and I’ve seen it work well at a number of organizations, including Sound‐
Cloud6 and REA. As we see in Figure 14-11, where we revisit MusicCorp, the web and
mobile shopping interfaces now have their own aggregating backends.
Figure 14-11. Each user interface has its own BFF
Due to its specific nature, the BFF sidesteps some of the concerns around the central
aggregating gateway. As we aren’t trying to be all things to all people, a BFF avoids
becoming a bottleneck for development, with multiple teams all trying to share own‐
ership. We are also less worried about coupling with the user interface, as coupling is
much more acceptable. A given BFF is for a specific user interface—assuming they
are owned by the same team, then the inherent coupling is far easier to manage. I
480 
| 
Chapter 14: User Interfaces
