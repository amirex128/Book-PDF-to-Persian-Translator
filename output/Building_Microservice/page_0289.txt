Figure 8-24. An example of federation in Kubernetes
The federated nature makes resource pooling more challenging. As we see in
Figure 8-24, Cluster A is fully utilized, whereas Cluster B has lots of unused capacity.
If we wanted to run more workloads on Cluster A, doing so would be possible only if
we could give it more resources, such as moving the empty node on Cluster B over to
Cluster A. How easy it will be to move the node from one cluster to the other will
depend on the nature of the federation software being used, but I can well imagine
this being a nontrivial change. Bear in mind that a single node can be part of either
one cluster or another and so cannot run pods for both Cluster A and Cluster B.
It’s worth noting that having multiple clusters can be beneficial when we consider the
challenges of upgrading the cluster itself. It may be easier and safer to move a micro‐
service over to a newly upgraded cluster than to upgrade the cluster in-place.
Fundamentally, these are challenges of scale. For some organizations, you’ll never
have these issues, as you’re happy to share a single cluster. For other organizations
looking to get efficiencies at larger scale, this is certainly an area that you’ll want to
explore in more detail. It should be noted that there are a number of different visions
for what Kubernetes federation should look like, and a number of different tool‐
chains out there for managing them.
Kubernetes and Container Orchestration 
| 
263
