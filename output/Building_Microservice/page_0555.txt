3 Elevators, for my North American readers.
how you thought about software architecture, you’d miss out on a lot. Yes, a lot of
software architecture is about thinking about the things that will be hard to change,
but it is also about creating space to allow change in the design.
Making Change Possible
Coming back to the world of buildings rather than software systems: architect Mies
van der Rohe arguably did more to pioneer what we now think of as the modern sky‐
scraper than any other architect—his famous Seagram Building became the blueprint
for much of what followed. The Seagram Building differs from a lot of what came
before. The outer walls of the building are nonstructural—they wrap a steel outer
frame. The main building services—lifts,3 stairways, air conditioning, water and
waste, and the electrical system—run through a central concrete core. Watch a
modern high-rise being constructed today, and it’s this central concrete core that is
built first, a giant crane often seen perching on top. Each floor of the Seagram Build‐
ing has no interior structural walls—this means that you have total flexibility in terms
of how the space is used. You can reconfigure the space as you see fit, routing electri‐
cal wiring and air conditioning to different parts of each floor via suspended ceilings
and ducts in the floor itself.
It’s interesting to note that the Seagram Building was developed using a process in
which the design of the building evolved while the construction was carried out. Now
where have we seen that idea before?
The idea with this design was to deliver what Mies van der Rohe called “universal
space”—a large, single-span volume that could be reconfigured to suit different
needs. The use of buildings changes, so the idea was to deliver space that is as flexible
as possible in terms of how it can be used. In this way, Mies van der Rohe not only
had to focus on the fundamental aesthetics of the building, finding a space for core
services that would be difficult if not impossible to change later, but he also had to
ensure that the building could be used in different ways than originally envisaged.
Shortly, we’ll look at how we allow for change in the space of a microservice architec‐
ture.
An Evolutionary Vision for the Architect
Our requirements as architects of software shift more rapidly than they do for people
who design and build buildings—as do the tools and techniques at our disposal. The
things we create are not fixed points in time. Once launched into production, our
software will continue to evolve as the way it is used changes. For most things we
Making Change Possible 
| 
529
