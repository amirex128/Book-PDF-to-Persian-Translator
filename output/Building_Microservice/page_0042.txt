6 For some useful insights into the thinking behind Shopify’s use of a modular monolith rather than microser‐
vices, watch “Deconstructing the Monolith” by Kirsten Westeinde.
The Modular Monolith
As a subset of the single-process monolith, the modular monolith is a variation in
which the single process consists of separate modules. Each module can be worked
on independently, but all still need to be combined together for deployment, as
shown in Figure 1-7. The concept of breaking software into modules is nothing new;
modular software has its roots in work done around structured programming in the
1970s, and even further back than that. Nonetheless, this is an approach that I still
don’t see enough organizations properly engage with.
Figure 1-7. In a modular monolith, the code inside the process is divided into modules
For many organizations, the modular monolith can be an excellent choice. If the
module boundaries are well defined, it can allow for a high degree of parallel work,
while avoiding the challenges of the more distributed microservice architecture by
having a much simpler deployment topology. Shopify is a great example of an
organization that has used this technique as an alternative to microservice decompo‐
sition, and it seems to work really well for that company.6
One of the challenges of a modular monolith is that the database tends to lack the
decomposition we find in the code level, leading to significant challenges if you want
to pull apart the monolith in the future. I have seen some teams attempt to push the
idea of the modular monolith further by having the database decomposed along the
same lines as the modules, as shown in Figure 1-8.
16 
| 
Chapter 1: What Are Microservices?
