8 Gregor Hohpe and Bobby Woolf, Enterprise Integration Patterns (Boston: Addison-Wesley, 2003).
9 Bernd Ruecker, Practical Process Automation (Sebastopol: O’Reilly, 2021).
In my experience, explicitly modeling business processes as a saga avoids many of the
challenges of distributed transactions, while having the added benefit of making what
might otherwise be implicitly modeled processes much more explicit and obvious to
your developers. Making the core business processes of your system a first-class con‐
cept will have a host of advantages.
Summary
So as we can see, the path to implementing workflows in our microservice architec‐
ture comes down to explicitly modeling the business process we are trying to imple‐
ment. This brings us back to the idea of modeling aspects of our business domain in
our microservice architecture—explicitly modeling business processes makes sense if
our microservice boundaries are also defined primarily in terms of our business
domain.
Whether you decide to gravitate more toward orchestration or toward choreography,
hopefully you’re much better placed to know what model will fit your problem space
better.
If you want to explore this space in more detail, although sagas aren’t explicitly cov‐
ered, Enterprise Integration Patterns by Gregor Hohpe and Bobby Woolf has a num‐
ber of patterns that can be incredibly useful when implementing different types of
workflow.8 I can also heartily recommend Practical Process Automation by Bernd
Ruecker.9 Bernd’s book focuses much more on the orchestration side of sagas, but it
is packed with useful information that makes it a natural following-on point for this
topic.
Now we have a sense of how our microservices can communicate and coordinate
with each other, but how do we build them in the first place? In our next chapter,
we’ll look at how to apply source control, continuous integration, and continuous
delivery in the context of a microservice architecture.
196 
| 
Chapter 6: Workflow
