Encrypt backups
Backups are good. We want to back up our important data. And it may seem like an
obvious point, but if the data is sensitive enough that we want it to be encrypted in
our running production system, then we will probably also want to make sure that
any backups of the same data are also encrypted!
Authentication and Authorization
Authentication and authorization are core concepts when it comes to people and
things that interact with our system. In the context of security, authentication is the
process by which we confirm that a party is who they say they are. We typically
authenticate a human user by having them type in their username and password. We
assume that only the actual user has access to this information, and therefore the per‐
son entering this information must be them. Other, more complex systems exist as
well, of course. Our phones now let us use our fingerprint or face to confirm that we
are who we say we are. Generally, when we’re talking abstractly about who or what is
being authenticated, we refer to that party as the principal.
Authorization is the mechanism by which we map from a principal to the action we
are allowing them to do. Often, when a principal is authenticated, we will be given
information about them that will help us decide what we should let them do. We
might, for example, be told what department or office they work in—a piece of infor‐
mation that our system can use to decide what the principal can and cannot do.
Ease of use is important—we want to make it easy for our users to access our system.
We don’t want everyone to have to log in separately to access different microservices,
using a different username and password for each one. So we also need to look at
how we can implement single sign-on (SSO) in a microservices environment.
Service-to-Service Authentication
Earlier we discussed mutual TLS, which, aside from protecting data in transit, also
allows us to implement a form of authentication. When a client talks to a server using
mutual TLS, the server is able to authenticate the client, and the client is able to
authenticate the server—this is a form of service-to-service authentication. Other
authentication schemes can be used besides mutual TLS. A common example is the
use of API keys, where the client needs to use the key to hash a request in such a way
that the server is able to verify that the client used a valid key.
Authentication and Authorization 
| 
375
