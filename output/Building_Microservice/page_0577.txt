Afterword: Bringing It All Together
This book has covered a lot of ground, and I’ve shared a lot of advice along the way.
Given the breadth of coverage, I thought it sensible to summarize some of my key
advice regarding microservice architectures. For those of you who have read the
whole book, this should be a great refresher. For those of you who are impatient and
jumped to the end, be aware that there is a lot of detail behind this advice, and I’d
urge you read up on the detail behind some of these ideas rather than just adopting
these ideas blindly.
With all that said, I’m aiming to keep this last chapter as brief as possible, so let’s get
started.
What Are Microservices?
As introduced in Chapter 1, microservices are a type of service-oriented architecture
that focuses on independent deployability. Independent deployability means that you
can make a change to a microservice, deploy that microservice, and release its func‐
tionality to the end users without requiring other microservices to change. Getting
the most out of a microservice architecture means embracing this concept. Normally,
each microservice is deployed as a process, with communication with other microser‐
vices being done over some form of network protocol. It’s common to deploy multi‐
ple instances of a microservice, perhaps so that you can provide more scale, or else to
improve robustness by having redundancy.
To deliver independent deployability, we need to make sure when changing one
microservice that we don’t break interactions with other microservices. This requires
that our interfaces with other microservices are stable, and that changes be made in a
backward-compatible way. Information hiding, which I expanded on in Chapter 2,
describes an approach in which as much information as possible (code, data) is hid‐
den behind an interface. You should expose only the bare minimum over your ser‐
vice interfaces to satisfy your consumers. The less you expose, the easier it is to
ensure the changes you make are going to be backward compatible. Information
Afterword: Bringing It All Together 
| 
551
