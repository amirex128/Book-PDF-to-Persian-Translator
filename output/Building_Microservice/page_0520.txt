3 Nachiappan Nagappan, Brendan Murphy, and Victor Basili, “The Influence of Organizational Structure on
Software Quality: An Empirical Case Study” ICSE ’08: Proceedings of the 30th International Conference on
Software Engineering (New York: ACM, 2008).
4 And we all know Windows Vista was quite error-prone!
typically colocated with strongly aligned visions and goals, while loosely coupled
organizations are well represented by distributed open source communities.
In their study, in which they matched similar product pairs from each type of organi‐
zation, the authors found that the more loosely coupled organizations actually cre‐
ated more modular, less coupled systems, whereas the more tightly coupled
organization’s software was less modularized.
Windows Vista
Microsoft carried out an empirical study3 in which it looked at how its own organiza‐
tional structure impacted the quality of a specific software product, Windows Vista.
Specifically, the researchers looked at multiple factors to determine how error-prone
a component in the system would be.4 After looking at multiple metrics, including
commonly used software quality metrics like code complexity, they found that the
metrics associated with organizational structures (such as the number of engineers
who have worked on a piece of code) proved to be the most statistically relevant
measures.
So here we have another example of an organization’s structure impacting the nature
of the system that organization creates.
Netflix and Amazon
Probably the two poster children for the idea that organizations and architecture
should be aligned are Amazon and Netflix. Early on, Amazon started to understand
the benefits of teams owning the whole life cycle of the systems they managed. It
wanted teams to own and operate the systems they looked after, managing the entire
life cycle. But Amazon also knew that small teams can work faster than large teams.
This led to its infamous two-pizza teams, where no team should be so big that it could
not be fed by two pizzas. This is, of course, not a totally useful metric—we never find
out if we’re eating pizza for lunch or dinner (or breakfast!), nor how big the pizzas
are—but again, the general idea is that the optimum team size is 8–10 people, and
that this team should be customer facing. This driver for small teams owning the
whole life cycle of their services is a major reason why Amazon developed Amazon
Web Services. It needed to create the tooling to allow its teams to be self-sufficient.
494 
| 
Chapter 15: Organizational Structures
