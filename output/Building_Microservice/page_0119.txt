Technology for Inter-Process Communication:
So Many Choices
And in a world where we have too many choices and too little time, the obvious thing to do
is just ignore stuff.
—Seth Godin
The range of technology available to us for inter-process communication is vast. As a
result, we can often be overburdened with choice. I often find that people gravitate to
technology that is familiar to them, or perhaps just to the latest hot technology they
learned about from a conference. The problem with this is that when you buy into a
specific technology choice, you are often buying into a set of ideas and constraints
that come along for the ride. These constraints might not be the right ones for you—
and the mindset behind the technology may not actually line up with the problem
you are trying to solve.
If you’re trying to build a website, single page app technology like Angular or React is
a bad fit. Likewise, trying to use Kafka for request-response really isn’t a good idea, as
it was designed for more event-based interactions (topics we’ll get to in just a
moment). And yet I see technology used in the wrong place time and time again.
People pick the shiny new tech (like microservices!) without considering whether it
actually fits their problem.
Thus when it comes to the bewildering array of technology available to us for com‐
munication between microservices, I think it’s important to talk first about the style
of communication you want, and only then look for the right technology to imple‐
ment that style. With that in mind, let’s take a look at a model I’ve been using for
several years to help distinguish between the different approaches for microservice-
to-microservice communication, which in turn can help you filter the technology
options you’ll want to look at.
Styles of Microservice Communication
In Figure 4-1 we see an outline for the model I use for thinking about different styles
of communication. This model is not meant to be entirely exhaustive (I’m not trying
to present a grand unified theory of inter-process communication here), but it pro‐
vides a good high-level overview for considering the different styles of communica‐
tion that are most widely used for microservice architectures.
Technology for Inter-Process Communication: So Many Choices 
| 
93
