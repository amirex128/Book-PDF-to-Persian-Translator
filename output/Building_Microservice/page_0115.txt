CHAPTER 4
Microservice Communication Styles
Getting communication between microservices right is problematic for many due in
great part, I feel, to the fact that people gravitate toward a chosen technological
approach without first considering the different types of communication they might
want. In this chapter, I’ll try and tease apart the different styles of communication to
help you understand the pros and cons of each, as well as which approach will best fit
your problem space.
We’ll be looking at synchronous blocking and asynchronous nonblocking communi‐
cation mechanisms, as well as comparing request-response collaboration with event-
driven collaboration.
By the end of this chapter you should be much better prepared to understand the dif‐
ferent options available to you and will have a foundational knowledge that will help
when we start looking at more detailed implementation concerns in the following
chapters.
From In-Process to Inter-Process
OK, let’s get the easy stuff out of the way first—or at least what I hope is the easy stuff.
Namely, calls between different processes across a network (inter-process) are very
different from calls within a single process (in-process). At one level, we can ignore
this distinction. It’s easy, for example, to think of one object making a method call on
another object and then just map this interaction to two microservices communicat‐
ing via a network. Putting aside the fact that microservices aren’t just objects, this
thinking can get us into a lot of trouble.
Let’s look at some of these differences and how they might change how you think
about the interactions between your microservices.
89
