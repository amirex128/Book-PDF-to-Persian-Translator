11 Steven Shorrock, “Alarm Design: From Nuclear Power to WebOps,” Humanistic Systems (blog), October 16,
2015, https://oreil.ly/RCHDL.
Toward better alerting
So we want to avoid having too many alerts, as well as having alerts that aren’t useful.
What guidelines can we look at to help us create better alerts?
Steven Shorrock expands on this subject in his article “Alarm Design: From Nuclear
Power to WebOps,”11 which is a great read and a good jumping-off point for more
reading in this area. From the article:
The purpose of [alerts] is to direct the user’s attention towards significant aspects of
the operation or equipment that require timely attention.
Drawing on work from outside software development, we have a useful set of rules
from, of all places, the Engineering Equipment and Materials Users Association
(EEMUA), which has come up with as good a description of what makes for a good
alert as I’ve seen:
Relevant
Make sure the alert is of value.
Unique
Ensure that the alert isn’t duplicating another.
Timely
We need to get the alert quickly enough to make use of it.
Prioritized
Give the operator enough information to decide in what order the alerts should
be dealt with.
Understandable
The information in the alert needs to be clear and readable.
Diagnostic
It needs to be clear what is wrong.
Advisory
Help the operator understand what actions need to be taken.
Focusing
Draw attention to the most important issues.
Looking back over my career to times when I’ve worked in production support, it’s
depressing to think how rarely the alerts I’ve had to deal with follow any of these
rules.
332 
| 
Chapter 10: From Monitoring to Observability
