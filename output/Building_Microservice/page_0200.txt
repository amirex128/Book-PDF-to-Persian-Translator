Figure 5-10. Different styles of inter-microservice communication, along with example
implementing technologies
• Whatever choice you make, consider the use of schemas, in part to help make
your contracts more explicit but also to help catch accidental breaking changes.
• Where possible, strive to make changes that are backward compatible to ensure
that independent deployability remains a possibility.
• If you do have to make backward-incompatible changes, find a way to allow con‐
sumers time to upgrade to avoid lockstep deployments.
• Think about what you can do to help surface information about your endpoints
to humans—consider the use of humane registries and the like to help make
sense of the chaos.
We’ve looked at how we can implement a call between two microservices, but what
happens when we need to coordinate operations between multiple microservices?
That will be the focus of our next chapter.
174 
| 
Chapter 5: Implementing Microservice Communication
