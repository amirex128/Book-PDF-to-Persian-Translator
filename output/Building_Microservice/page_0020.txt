Why I Wrote This Book
At one level, I wrote this book because I wanted to make sure that the information in
the first edition remained up to date, accurate, and useful. I wrote the first edition
because there were really interesting ideas that I wanted to share. I was fortunate that
I was in a place where I had the time and support to write the first edition, and that I
could do so from a fairly unbiased viewpoint because I didn’t work for a big technol‐
ogy vendor. I wasn’t selling a solution, and I hoped I wasn’t selling microservices
either—I just found the ideas fascinating, and I loved unpacking the concept of
microservices and finding ways of sharing it more broadly.
When I really break it down, I wrote a second edition for two main reasons. Firstly, I
felt I could do a better job this time. I’ve learned more, and I am hopefully a bit better
as a writer. But I also wrote this second edition because I played a small part in help‐
ing these ideas hit the mainstream, and as such I have a duty of care to make sure
they are presented in a sensible, balanced way. Microservices have become, for many,
the default architectural choice. This is something that I think is hard to justify, and I
wanted a chance to share why.
This book isn’t pro microsevices, nor is it anti microservices. I just want to make sure
that I’ve properly explored the context in which these ideas work well and shared the
problems they can cause.
What’s Changed Since the First Edition?
I wrote the first edition of Building Microservices in around a year, starting at the
beginning of 2014, with the book being released in February 2015. This was early in
the microservices story, at least in terms of the wider industry’s awareness of the
term. Since then, microservices have gone mainstream in a way that I couldn’t have
predicted. With that growth has come a much wider set of experiences to draw on,
and more technology to explore.
As I worked with more teams in the wake of the first edition, I started to refine my
thinking around some of the ideas associated with microservices. In some cases, this
meant that ideas that were only at the periphery of my thinking, like information hid‐
ing, started to become more clear as foundational concepts that needed to be better
highlighted. In other areas, new technology presented both new solutions and new
problems for our systems. Seeing so many people flock to Kubernetes in the hope
that it would solve all their issues with microservice architectures certainly gave me
pause for thought.
Additionally, I’d written the first edition of Building Microservices to provide not just
an explanation of microservices, but also a broad overview of how this architectural
approach changes aspects of software development. So as I looked more deeply at
xviii 
| 
Preface
