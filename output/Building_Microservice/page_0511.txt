Figure 14-14. Both BFFs are performing the same operations to display a wishlist
A way to reduce the duplication in functionality here would be to extract this com‐
mon behavior into a new microservice. In Figure 14-15, we see our new dedicated
Wishlist microservice that our Android and iOS applications can both make use of.
I have to say that the same code being used in two places wouldn’t automatically
cause me to want to extract out a service in this way, but I’d certainly be considering
it if the transaction cost of creating a new service was low enough, or if I was using
the code in more than a couple of places—in this specific situation, if we were also
showing wishlists on our web interface, for example, a dedicated microservice would
start to look even more appealing. I think the old adage of creating an abstraction
when you’re about to implement something for the third time still feels like a good
rule of thumb, even at the service level.
Pattern: Backend for Frontend (BFF) 
| 
485
