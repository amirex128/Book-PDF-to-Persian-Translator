Figure 15-2. Enabling teams support multiple stream-aligned teams
But enabling teams can come in different shapes and sizes.
Consider Figure 15-3. Each team has decided to pick a different programming lan‐
guage. When looked at in isolation, each of these decisions seems to make sense—
each team has chosen the programming language that it is happiest with. But what
about the organization as a whole? Do you want to have to support multiple different
programming languages within your organization? How does that complicate rota‐
tion between teams, and how does it affect hiring, for that matter?
You may decide that you actually don’t want this much local optimization—but you
need to be aware of these different choices being made and have some ability to dis‐
cuss these changes if you want some degree of control. This is typically where I see a
very small supporting group working across the teams to help connect people so
these discussions can happen properly.
It’s in these cross-cutting supporting groups that I can see the obvious place for
architects to be based, at least part of their time. An old-fashioned architect would tell
people what to do. In the new, modern, decentralized organization, architects are
surveying the landscape, spotting trends, helping connect people, and acting as a
sounding board to help other teams get stuff done. They aren’t a unit of control in
this world; they are yet another enabling function (often with a new name—I’ve seen
terms like principal engineer used for people playing the role of what I would con‐
sider an architect). We’ll explore the role of architects more in Chapter 16.
504 
| 
Chapter 15: Organizational Structures
