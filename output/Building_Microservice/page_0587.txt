Further Reading
Throughout this book, I have referenced many papers, presentations, and books that
I have learned a great deal from, and I have made sure to list them in Bibliography.
Since the first edition, though, the two books that have had the biggest impact on my
thinking, and as a result have been referenced extensively in this new edition, are
worth calling out here as “must reads.” The first is Accelerate by Nicole Forsgren, Jez
Humble, and Gene Kim. The second is Team Topologies by Matthew Skelton and
Manuel Pais. These two books are, in my opinion, the two most useful books on soft‐
ware development written in the last ten years, and I consider them essential reading
whether you are into microservices or not.
As a companion to this book, my own Monolith to Microservices goes into more
depth on how to break apart existing system architectures.
Looking Forward
In the future, I suspect the technology that makes microservices easier to build and
run will continue to improve, and I am especially keen to see what the second- (and
third-) generation FaaS products look like. Whether or not FaaS takes off, Kubernetes
will become even more widespread, even if it will increasingly be hidden behind more
developer-friendly abstraction layers. Kubernetes has won, but in a way that I think
most application developers shouldn’t have to worry about. I remain very interested
in seeing how Wasm changes how we think about deployments, and I still have a sus‐
picion that unikernels may have a second coming as well.
Since this book’s first edition, microservices have well and truly gone mainstream in a
way that has surprised me, and that has concerned me too. It seems that a lot of peo‐
ple adopting microservices are doing so more because everyone else is doing it, rather
than microservices being right for them. As such, I fully expect us to hear more hor‐
ror stories about failed microservice implementations, which I will digest with relish
to see what can be learned. I also fully expect a wider industry backlash against
microservices at some point when the microservice disaster case studies reach critical
mass. Applying critical thinking to work out what approach makes the most sense in
any given situation isn’t very sexy or marketable, and I don’t expect that will change
in a world where selling technology is more profitable than selling ideas.
I don’t mean to sound pessimistic! We are, as an industry, still very young, and we
are still finding our place in the world. The amount of energy and ingenuity that gets
put into software development continues to keep me interested, and I can’t wait to
see what the next decade brings.
Afterword: Bringing It All Together 
| 
561
