Service Meshes and API Gateways
Few areas of technology associated with microservices have had as much attention,
hype, and confusion around them as that of service meshes and API gateways. Both
have their place, but confusingly, they can also overlap in responsibilities. The API
gateway in particular is prone to misuse (and mis-selling), so it’s important that we
understand how these types of technology can fit into our microservice architecture.
Rather than attempt to deliver a detailed view as to what you can do with these prod‐
ucts, I instead want to provide an overview of where they fit in, how they can help,
and some pitfalls to avoid.
In typical data center speak, we’d talk about “east-west” traffic as being inside a data
center, with “north-south” traffic relating to interactions that enter or leave the data
center from the outside world. From the point of view of networking, what a data
center is has become a somewhat blurry concept, so for our purposes we’ll talk more
broadly about a networked perimeter. This could relate to an entire data center, a
Kubernetes cluster, or perhaps just a virtual networking concept like a group of
machines running on the same virtual LAN.
Speaking generally, an API gateway sits on the perimeter of your system and deals
with north-south traffic. Its primary concerns are managing access from the outside
world to your internal microservices. A service mesh, on the other hand, deals very
narrowly with communication between microservices inside your perimeter—the
east-west traffic—as Figure 5-6 shows.
Figure 5-6. An overview of where API gateways and service meshes are used
162 
| 
Chapter 5: Implementing Microservice Communication
