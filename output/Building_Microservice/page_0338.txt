Log aggregation
Collecting information across multiple microservices, a vital building block of
any monitoring or observability solution
Metrics aggregation
Capturing raw numbers from our microservices and infrastructure to help detect
problems, drive capacity planning, and perhaps even scale our applications
Distributed tracing
Tracking a flow of calls across multiple microservice boundaries to work out
what went wrong and derive accurate latency information
Are you doing OK?
Looking at error budgets, SLAs, SLOs, and so on to see how they can be used as
part of making sure our microservice is meeting the needs of its consumers
Alerting
What should you alert on? What does a good alert look like?
Semantic monitoring
Thinking differently about the health of our systems, and about what should
wake us up at 3 a.m.
Testing in production
A summary of various testing in production techniques
Let’s start with perhaps the simplest thing to get up and running, but something that
will pay for itself many times over: log aggregation.
Log Aggregation
With many servers and microservice instances in even a modest microservice archi‐
tecture, logging into machines or SSH-multiplexing to retrieve logs doesn’t really cut
it. Instead, we’re looking to use specialized subsystems to grab our logs and make
them available centrally.
Logs will very quickly become one of the most vital mechanisms to help you under‐
stand what is happening in your production system. With simpler deployment archi‐
tectures, our logfiles, what we put into them, and how we treat them are often an
afterthought. With an increasingly distributed system, they will become a vital tool,
not only helping you diagnose what went wrong when you find out you have a prob‐
lem but also telling you that there was an issue that needed your attention in the first
place.
As we’ll discuss shortly, there are a variety of tools in this space, but they all largely
operate in the same way, as outlined in Figure 10-4. Processes (like our microservice
instances) log to their local filesystem. A local daemon process periodically collects
312 
| 
Chapter 10: From Monitoring to Observability
