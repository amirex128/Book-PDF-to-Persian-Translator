Geographical Distribution
Colocated teams will find synchronous communication to be very simple, especially
as they are typically in the same place at the same time. If your team is distributed,
synchronous communication can be more difficult, but it is still achievable if the
team members are in the same or similar time zones. When communicating with
people in various different time zones, the cost of coordination can increase drasti‐
cally. In one of my previous roles I worked as an architect, helping support teams
based in India, the UK, Brazil, and the US, while I myself was based in Australia. Set‐
ting up a meeting between myself and the leads of the various teams was incredibly
difficult. This meant that we held these meetings infrequently (typically monthly),
and we also had to make sure to discuss only the most important issues during these
sessions, as often more than half of the attendees would be working outside their core
working hours.
Outside of these sessions, we would have asynchronous communication, largely via
email, about other less time-critical issues. But with me in Australia, the delay in this
form of communication was significant. I would wake up on a Monday morning to
have a pretty quiet start to the week, as most of the world hadn’t woken up—this
would give me time to process the emails I had received from teams in the UK, Brazil,
and the US on their Friday afternoon, which was my Saturday morning.
I recall one client project I worked on in which ownership of a single microservice
was shared between two geographical locations. Eventually, each site started special‐
izing the work it handled. This allowed it to take ownership of part of the codebase,
within which it could have an easier cost of change. The teams then had more coarse-
grained communication about how the two parts interrelated; effectively, the com‐
munication pathways made possible within the organizational structure matched the
coarse-grained API that formed the boundary between the two halves of the
codebase.
So where does this leave us when considering evolving our own service design? Well,
I would suggest that geographical boundaries between people involved with the
development should be a strong consideration when looking to define both team
boundaries and software boundaries. It’s much easier for a single team to form when
its members are colocated. If colocation isn’t possible, and you are looking to form a
distributed team, then ensuring that team members are in the same or very similar
time zones will aid communication within that team, as it will reduce the need for
asynchronous communication.
Perhaps your organization decides that it wants to increase the number of people
working on your project by opening up an office in another country. At this point,
you should think actively about what parts of your system can be moved over. Per‐
haps this is what drives your decisions about what functionality to split out next.
Geographical Distribution 
| 
521
