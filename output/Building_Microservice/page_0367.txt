Much of the drive around AI has always been to try and codify expert knowledge into
an automated system. The idea that we can automate away expertise might be attrac‐
tive to some, but it’s also a potentially dangerous idea in this space, at least with our
current understanding. Why automate away expertise? So then you don’t have to
invest in having expert operators run your system. I’m not trying to make some point
here about the upheaval of labor caused by technological advancement—more that
people are selling this idea now, and companies are buying this idea now, in the hope
that these are fully solvable (and automatable) problems. The reality is that right now,
they aren’t.
I worked recently with a data science–focused startup in Europe. The startup was
working with a company that provided bed-monitoring hardware, which could
gather various pieces of data about a patient. The data scientists were able to help see
patterns in the data, showing odd clusters of patients that could be determined by
correlating various facets of the data. The data scientists could say “these patients
seem related” but had no awareness as to what the meaning of that relationship was.
It took a clinician to explain that some of these clusters referred to patients who were,
in general, more sick than others. It required expertise to identify the cluster, and a
different expertise to understand what this cluster meant and put that knowledge into
action. Coming back to our tooling for monitoring and observability tooling, I could
see such a tool alerting someone to the fact that “something looks odd,” but knowing
what to do with that information still requires a degree of expertise.
While I’m sure that features such as “automated anomaly detection” may well con‐
tinue to improve, we have to recognize that right now, the expert in the system is, and
will remain for some time, a human. We can create tools that can better inform the
operator of what needs to be done, and we can provide automation to help the opera‐
tor carry out their decisions in a more effective manner. But the fundamentally varied
and complicated environment of a distributed system means that we need skilled and
supported human operators. We want our experts to use their expertise in asking the
right questions and making the best decisions they can. We shouldn’t be asking them
to use their expertise to deal with the shortcomings of poor tools. Nor should we suc‐
cumb to the convenient notion that some fancy new tool will solve all our problems.
Getting Started
As I’ve outlined, there is a lot to think about here. But I want to provide a basic start‐
ing point for a simple microservice architecture in terms of what and how you should
capture things.
To start off with, you want to be able to capture basic information about the hosts
your microservices are running on—CPU rate, I/O, and so on—and make sure you
can match a microservice instance back to the host it is running on. For each micro‐
service instance, you want to capture response times for its service interfaces and
Getting Started 
| 
341
