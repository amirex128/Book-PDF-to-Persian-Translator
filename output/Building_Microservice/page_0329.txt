9 Ham Vocke, “The Practical Test Pyramid,” martinfowler.com, February 26, 2018, https://oreil.ly/J7lc6.
Summary
Bringing this all together, what I have outlined in this chapter is a holistic approach
to testing that hopefully gives you some general guidance on how to proceed when
testing your own systems. To reiterate the basics:
• Optimize for fast feedback, and separate types of tests accordingly.
• Avoid the need for end-to-end tests that span more than one team—consider
using consumer-driven contracts instead.
• Use consumer-driven contracts to provide focus points for conversations
between teams.
• Try to understand the trade-off between putting more effort into testing and
detecting issues faster in production (optimizing for MTBF versus optimizing for
MTTR).
• Give testing in production a try!
If you are interested in reading more about testing, I recommend Agile Testing by
Lisa Crispin and Janet Gregory (Addison-Wesley), which among other things covers
the use of the testing quadrant in more detail. For a deeper dive into the test pyramid,
along with some code samples and more tool references, I also recommend “The
Practical Test Pyramid” by Ham Vocke.9
This chapter focused mostly on making sure our code works before it hits produc‐
tion, but we also started to look at testing our application once it reaches production.
This is something we need to explore in a lot more detail. It turns out that microser‐
vices cause a multitude of challenges for understanding how our software is behaving
in production—a topic we’ll cover in more depth next.
Summary 
| 
303
