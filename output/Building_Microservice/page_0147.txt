CHAPTER 5
Implementing Microservice
Communication
As we discussed in the previous chapter, your choice of technology should be driven
in large part by the style of communication you want. Deciding between blocking
synchronous or nonblocking asynchronous calls, request-response or event-driven
collaboration, will help you whittle down what might otherwise be a very long list of
technology. In this chapter, we’re going to look at some of the technology commonly
used for microservice communication.
Looking for the Ideal Technology
There is a bewildering array of options for how one microservice can talk to another.
But which is the right one—SOAP? XML-RPC? REST? gRPC? And new options are
always coming out. So before we discuss specific technology, let’s think about what
we want out of which technology we pick.
Make Backward Compatibility Easy
When making changes to our microservices, we need to make sure we don’t break
compatibility with any consuming microservices. As such, we want to ensure that
whatever technology we pick makes it easy to make backward-compatible changes.
Simple operations like adding new fields shouldn’t break clients. We also ideally want
the ability to validate that the changes we have made are backward-compatible—and
have a way to get that feedback before we deploy our microservice into production.
121
