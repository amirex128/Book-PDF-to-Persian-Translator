Data partitioning
Dividing work based on some attribute of the data, e.g., customer group.
Functional decomposition
Separation of work based on the type, e.g., microservice decomposition.
With scaling, do the easy stuff first. Vertical scaling and horizontal duplication are
quick and easy compared with the other two axes presented here. If they work, great!
If not, you can look at the other mechanisms. It’s common as well to mix the differ‐
ent types of scaling—partitioning your traffic based on customers, for example, and
then having each partition scaled horizontally.
User Interfaces
All too often, the user interface is an afterthought when it comes to system decompo‐
sition—we break apart our microservices but leave a monolithic user interface. This
in turn leads to the problems of having separate frontend and backend teams.
Instead, we want stream-aligned teams, where one team owns all the functionality
associated with an end-to-end slice of user functionality. To make that change hap‐
pen and get rid of siloed frontend and backend teams, we need to break apart our
user interfaces.
In Chapter 14, I share how we can use micro frontends to deliver decomposed user
interfaces using single-page app frameworks like React. User interfaces often face
problems in terms of the number of calls they need to make, or because they need to
perform call aggregation and filtering to suit mobile devices. The backend for front‐
end (BFF) pattern can help provide server-side aggregation and filtering in these sit‐
uations, although if you are able to use GraphQL, you may be able to sidestep the use
of BFFs.
Organization
In Chapter 15, we looked at the shift away from horizontally aligned, siloed teams
toward team structures that are organized around end-to-end slices of functionality.
These stream-aligned teams, as the authors of Team Topologies describe them, are
supported by enabling teams, as Figure A-3 shows. Enabling teams will often have a
specific cross-cutting focus, such as focusing on security or usability, and support the
stream-aligned teams in these aspects.
Afterword: Bringing It All Together 
| 
559
