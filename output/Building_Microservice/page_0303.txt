Each type of test shown in this quadrant has a place. Exactly how much of each test
you want to do will depend on the nature of your system, but the key point to under‐
stand is that you have multiple choices in terms of how to test your system. The trend
recently has been away from any large-scale manual testing in favor of automating as
much repetitive testing as possible, and I certainly agree with this approach. If you
currently carry out large amounts of manual testing, I would suggest you address that
before proceeding too far down the path of microservices, as you won’t get many of
their benefits if you are unable to validate your software quickly and efficiently.
Manual Exploratory Testing
In general, the shift from a monolithic architecture to a microservice architecture will
have minimal impact on exploratory testing, aside from any wider organizational
shift that might occur. As we’ll explore in “Toward Stream-Aligned Teams” on page
459, we’d expect the user interface for the application to also be broken down along
team lines. In such a context, the ownership of manual testing may well change.
The ability to automate some tasks, such as verifying how something looks, was pre‐
viously limited exclusively to manual exploratory testing. The maturing of tooling
that enables visual assertions has allowed us to start automating tasks that were previ‐
ously done manually. You shouldn’t see this as a reason to have no manual testing,
though; you should instead see it as a chance to free up testers’ time to focus on less
repetitive, exploratory testing.
When done well, manual exploratory testing is to a great extent about discovery. Set‐
ting aside time to explore the application as an end user can unearth issues that
otherwise wouldn’t be evident. Manual testing can also be vital in situations in which
an automated test is infeasible to implement, perhaps because of the cost of writing
the test. Automation is about removing repetitive tasks to free up humans to do the
more creative, ad hoc activities. So think of automation as a way of freeing up our
brainpower for the things we do best.
For the purposes of this chapter, we mostly ignore manual exploratory testing. This
isn’t to say that this type of testing isn’t important, but just that the scope of this
chapter is to focus primarily on how testing microservices differs from testing more
typical monolithic applications. But when it comes to automated tests, how many of
each test do we want? Another model will help us answer this question and under‐
stand what the different trade-offs might be.
Types of Tests 
| 
277
