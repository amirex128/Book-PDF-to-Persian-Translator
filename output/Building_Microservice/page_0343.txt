Figure 10-6. Generating a correlation ID for a set of calls
You will, of course, need to ensure that each service knows to pass on the correlation
ID. This is where you need to standardize and be stronger in enforcing this across
your system. But once you have done this, you can actually create tooling to track all
sorts of interactions. Such tooling can be useful in tracking down event storms or odd
corner cases, or even in identifying especially costly transactions, as you can picture
the whole cascade of calls.
Correlation IDs in logs are the sorts of things that don’t seem that useful initially, but
trust me—over time, they can be incredibly useful. Unfortunately, they can be a pain
to retrofit into a system. It’s for this reason I strongly suggest that you implement
correlation IDs in logging as early as possible. Logs can of course only take you so far
in this regard—some sorts of problems are better solved by distributed tracing tools,
which we’ll explore shortly. But a simple correlation ID in a logfile can be incredibly
useful initially, meaning you can defer the use of a dedicated tracing tool until your
system is complex enough to warrant it.
Once you have log aggregation, get correlation IDs in as soon as
possible. Easy to do at the start and hard to retrofit later, they will
drastically improve the value of your logs.
Building Blocks for Observability 
| 
317
