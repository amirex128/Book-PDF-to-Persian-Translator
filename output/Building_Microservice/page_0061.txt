CHAPTER 2
How to Model Microservices
My opponent’s reasoning reminds me of the heathen, who, being asked on what the world
stood, replied, “On a tortoise.” But on what does the tortoise stand? “On another tortoise.”
—Rev. Joseph Frederick Berg (1854)
So you know what microservices are and, I hope, have a sense of their key benefits.
You’re probably eager now to go and start making them, right? But where to start? In
this chapter, we’ll look at some foundational concepts such as information hiding,
coupling, and cohesion and understand how they’ll shift our thinking about drawing
boundaries around our microservices. We’ll also look at different forms of decompo‐
sition you might use, as well as focusing more deeply on domain-driven design being
a hugely useful technique in this space.
We’ll look at how to think about the boundaries of your microservices so as to maxi‐
mize the upsides and avoid some of the potential downsides. But first, we need some‐
thing to work with.
Introducing MusicCorp
Books about ideas work better with examples. Where possible, I’ll be sharing stories
from real-world situations, but I’ve found it’s also useful to have a fictional scenario
to work with. Throughout the book, we’ll be returning to this scenario, seeing how
the concept of microservices works within this world.
So let’s turn our attention to the cutting-edge online retailer MusicCorp. MusicCorp
was until recently just a brick-and-mortar retailer, but after the bottom dropped out
of the vinyl record business, it focused more and more of its efforts online. The com‐
pany has a website but feels that now is the time to double-down on the online world.
After all, those smartphones for music are just a passing fad (Zunes are way better,
obviously), and music fans are quite happy to wait for CDs to arrive at their
35
