9 Gregor Hohpe, The Software Architect Elevator (Sebastopol: O’Reilly, 2020).
Collaboration
Engage with as many of your peers and colleagues as possible to help define,
refine, and execute the vision
Adaptability
Make sure that the technical vision changes as required by your customers or
organization.
Autonomy
Find the right balance between standardizing and enabling autonomy for your
teams.
Governance
Ensure that the system being implemented fits the technical vision, and make
sure it is easy for people to do the right thing.
The evolutionary architect is one who understands that demonstrating these core
responsibilities is a constant balancing act. Forces are always pushing us one way or
another, and understanding where to push back or where to go with the flow is often
something that comes only with experience. But the worst reaction to all these forces
that push us toward change is to become more rigid or fixed in our thinking.
While much of the advice in this chapter can apply to any systems architect, micro‐
services give us many more decisions to make. Therefore, being better able to balance
all of these trade-offs is essential. If you want to explore this topic in more depth, I
can recommend the already quoted Building Evolutionary Architectures, as well as
Gregor Hohpe’s The Software Architect Elevator,9 which helps architects understand
how they can bridge the gap between high-level strategic thinking and on-the-ground
delivery.
We’re almost at the end of the book, and we’ve covered a lot of ground. In the After‐
word, we’ll now summarize what we’ve learned.
Summary 
| 
549
