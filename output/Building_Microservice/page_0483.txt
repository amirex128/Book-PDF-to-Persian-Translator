Figure 14-1. Making a change across all three tiers is more involved
The model that I greatly prefer and feel is better aligned to achieving the goal of inde‐
pendent deployability is to have the UI broken apart and managed by a team that also
manages the server-side components, as we see in Figure 14-2. Here, a single team
ends up being responsible for all the changes we need to make to add our new
control.
Teams with full ownership of the end-to-end functionality are able to make changes
more quickly. Having full ownership encourages each team to have a direct contact
point with an end user of the software. With backend teams, it’s easy to lose track of
who the end user is.
Despite the drawbacks, I (unfortunately) still see the dedicated frontend team as
being the more common organizational pattern among companies who make use of
microservices. Why is this?
Ownership Models 
| 
457
