5 Adam Shostack, Threat Modeling: Designing for Security (Indianapolis: Wiley, 2014).
This extreme (but true) story is a great example of a common problem we face when
trying to secure our systems. Without having time to take in all the factors and
understand just where your biggest risks are, you may well end up missing the places
where your time is better spent. The goal of threat modeling is about helping you
understand what an attacker might want from your system. What are they after? Will
different types of malicious actors want to gain access to different assets? Threat
modeling, when done right, is largely about putting yourself in the mind of the
attacker, thinking from the outside in. This outsider view is important, and it’s one
reason why having an external party help drive a threat modeling exercise can be very
useful.
The core idea of threat modeling doesn’t change much when we look at microservice
architectures, aside from the fact that any architecture being analyzed may now be
more complex. What shifts is how we take the outcome of a threat model and put it
into action. One of the outputs of a threat modeling exercise would be a list of recom‐
mendations for what security controls need to be put in place—these controls can
include things like a change in process, a shift in technology, or perhaps a modifica‐
tion in system architecture. Some of these changes may be cross-cutting and could
impact multiple teams and their associated microservices. Others might result in
more targeted work. Fundamentally, though, when undertaking threat modeling, you
do need to look holistically—focusing this analysis on too small a subset of your sys‐
tem, such as one or two microservices, may result in a false sense of security. You
may end up focusing your time on building a fantastically secure front door, only to
have left the window open.
For a deeper dive into this topic, I can recommend Threat Modeling: Designing for
Security5 by Adam Shostack.
Protect
Once we’ve identified our most valuable—and most vulnerable—assets, we need to
ensure that they are properly protected. As I’ve noted, microservice architectures
arguably give us a much wider surface area of attack, and we therefore have more
things that may need to be protected, but they also give us more options to defend in
depth. We’ll spend most of this chapter focusing on various aspects of protection,
primarily because this is the area where microservice architectures create the most
challenges.
352 
| 
Chapter 11: Security
