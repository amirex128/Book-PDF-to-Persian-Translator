Toward Digital
Over the last couple of years, organizations have started to move away from thinking
that web or mobile should be treated differently; they are instead thinking about digi‐
tal more holistically. What is the best way for our customers to use the services we
offer? And what does that do to our system architecture? The understanding that we
cannot predict exactly how a customer might end up interacting with our products
has driven adoption of more granular APIs, like those delivered by microservices. By
combining the capabilities our microservices expose in different ways, we can curate
different experiences for our customers on their desktop application, mobile device,
and wearable device and even in physical form if they visit our brick-and-mortar
store.
So think of user interfaces as the places where we weave together the various strands
of the capabilities we want to offer our users. With that in mind, how do we pull all
these strands together? We need to look at this problem from two sides: the who and
the how. Firstly, we’ll consider the organizational aspects—who owns what responsi‐
bilities when it comes to delivering user interfaces? Secondly, we’ll look at a set of
patterns that can be used to implement these interfaces.
Ownership Models
As we discussed way back in Chapter 1, the traditional layered architecture can cause
issues when it comes to delivering software effectively. In Figure 14-1, we see an
example in which responsibility for the user interface layer is owned by a single front‐
end team, with the backend services work done by another. In this example, adding a
simple control involves work being done by three different teams. These sorts of
tiered organizational structures can significantly impact our speed of delivery due to
the need to constantly coordinate changes and hand off work between teams.
456 
| 
Chapter 14: User Interfaces
