CHAPTER 8
Deployment
Deploying a single-process monolithic application is a fairly straightforward process.
Microservices, with their interdependence and wealth of technology options, are a
different kettle of fish altogether. When I wrote the first edition of this book, this
chapter already had a lot to say about the huge variety of options available to you.
Since then, Kubernetes has come to the fore, and Function as a Service (FaaS) plat‐
forms have given us even more ways to think about how to actually ship our software.
Although the technology may have changed over the last decade, I think many of the
core principles associated with building software haven’t changed. In fact, I think it’s
all the more important that we thoroughly understand these foundational ideas, as
they can help us understand how to navigate this chaotic landscape of new technol‐
ogy. With that in mind, this chapter will highlight some core principles related to
deployment that are important to understand, while also showing how the different
tools available to you may help (or hinder) in regard to putting these principles into
practice.
To start off with, though, let’s peek behind the curtain a bit and look at what happens
as we move from a logical view of our systems architecture toward a real physical
deployment topology.
From Logical to Physical
To this point, when we’ve discussed microservices, we’ve spoken about them in a log‐
ical sense rather than in a physical sense. We could talk about how our Invoice
microservice communicates with the Order microservice, as shown in Figure 8-1,
without actually looking at the physical topology of how these services are deployed.
A logical view of an architecture typically abstracts away underlying physical deploy‐
ment concerns—that notion needs to change for the scope of this chapter.
219
