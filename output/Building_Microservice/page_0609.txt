preproduction validation, 276
preventative control, 348, 572
principal, 375, 572
principle of defense in depth, 347
principle of least privilege, 347
private keys, scanning for, 358
production experiments, 415
production monitoring tools, 324
(see also monitoring)
programming approaches
ensemble programming, 517
mob programming, 517
structured programming, 40
progressive delivery, 269-273
Prometheus, 323
Protolock, 148
Puppet, 258
Q
questions and comments, xxii
queue-based systems, 136
R
real user monitoring, 334
real-time monitoring, 339
rebound, ability to, 389
redundancy, 405
remote procedure calls (RPCs), 123-127
replica sets (Kubernetes), 261
reporting databases, 85
reporting, challenges of microservices, 28
Representational State Transfer (REST),
127-133
request caches, 442
request-response communication, 104-108, 553
requests
versus commands, 106
defined, 572
resiliency
blameless post-mortems, 415
CAP theorem, 408-413
challenges of, 391
chaos engineering, 413-415
core concepts of, 387-391
cross-functional requirements and, 392
impact on functionality, 394
overview of, 558
risk management, 407
stability patterns, 395-407
response time, 393
responses, 572
responsibilities, understanding, 541
responsive control, 348, 572
REST-over-HTTP-based APIs, 132
retries, 399
risk management, 407
robustness
assuring, 23
benefits of caching, 436
challenges of improving, 388
chaos engineering and, 413
defined, 572
determining which options to use, 417
principle of, 146
robustness tests, 302
rollbacks
reducing, 188
semantic rollbacks, 187
when using sagas, 185-189
root cause analysis, 415
RPCs (remote procedure calls), 123-127
S
sagas
benefits of, 182
core concept of, 182
defined, 572
versus distributed transactions, 195
failure modes, 184-189
implementing, 189-195
lack of atomicity in, 183
limitations of, 185
role in microservices, 183, 554
Salt, 258
salted password hashing, 373
scaling
autoscaling, 449
avoiding premature optimization, 433
benefits of, 24
caching, 435-449
CQRS and event sourcing, 434
data partitioning, 426-430
databases during deployment, 223
four axes of, 419
functional decomposition, 430-432
horizontal duplication, 422-426
microservice templates and, 547
monitoring and, 340
Index 
| 
583
