often describe the use of a BFF with a user interface as though the UI is actually split
into two parts. One part sits on the client device (the web interface or native mobile
application), with the second part, the BFF, being embedded on the server side.
The BFF is tightly coupled to a specific user experience and will typically be main‐
tained by the same team as the user interface, thereby making it easier to define and
adapt the API as the UI requires, while also simplifying the process of lining up
release of both the client and server components.
How Many BFFs?
When it comes to delivering the same (or similar) user experience on different plat‐
forms, I have seen two different approaches. The model I prefer (and the model I see
most often) is to strictly have a single BFF for each different type of client—this is a
model I saw used at REA, as outlined in Figure 14-12. The Android and iOS applica‐
tions, while covering similar functionality, each had their own BFF.
Figure 14-12. The REA iOS and Android applications have different BFFs
Pattern: Backend for Frontend (BFF) 
| 
481
