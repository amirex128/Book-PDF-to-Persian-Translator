126 
Part Two  Quality Attributes	
7—Modifiability
Table 7.2  Checklist to Support the Design and Analysis Process for Modifiability
Category
Checklist
Allocation of 
Responsibilities
Determine which changes or categories of changes are likely to 
occur through consideration of changes in technical, legal, social, 
business, and customer forces. For each potential change or 
category of changes: 
■
■
Determine the responsibilities that would need to be added, 
modified, or deleted to make the change. 
■
■
Determine what  responsibilities are impacted by the change.
■
■
Determine an allocation of responsibilities to modules that 
places, as much as possible, responsibilities that will be 
changed (or impacted by the change) together in the same 
module, and places responsibilities that will be changed at 
different times in separate modules.
Coordination 
Model
Determine which functionality or quality attribute can change at 
runtime and how this affects coordination; for example, will the 
information being communicated change at runtime, or will the 
communication protocol change at runtime? If so, ensure that such 
changes affect a small number set of modules.
Determine which devices, protocols, and communication paths 
used for coordination are likely to change. For those devices, 
protocols, and communication paths, ensure that the impact of 
changes will be limited to a small set of modules.
For those elements for which modifiability is a concern, use 
a coordination model that reduces coupling such as publish-
subscribe, defers bindings such as enterprise service bus, or 
restricts dependencies such as broadcast.
Data Model
Determine which changes (or categories of changes) to the data 
abstractions, their operations, or their properties are likely to 
occur. Also determine which changes or categories of changes 
to these data abstractions will involve their creation, initialization, 
persistence, manipulation, translation, or destruction.
For each change or category of change, determine if the 
changes will be made by an end user, a system administrator, or 
a developer. For those changes to be made by an end user or 
system administrator, ensure that the necessary attributes are 
visible to that user and that the user has the correct privileges to 
modify the data, its operations, or its properties.
For each potential change or category of change:
■
■
Determine which data abstractions would need to be added, 
modified, or deleted to make the change.
■
■
Determine whether there would be any changes to the 
creation, initialization, persistence, manipulation, translation, or 
destruction of these data abstractions.
■
■
Determine which other data abstractions are impacted 
by the change. For these additional data abstractions, 
determine whether the impact would be on the operations, 
their properties, their creation, initialization, persistence, 
manipulation, translation, or destruction.
■
■
Ensure an allocation of data abstractions that minimizes the 
number and severity of modifications to the abstractions by the 
potential changes.
Design your data model so that items allocated to each element of 
the data model are likely to change together.
