	
10—Testability  161
running system. This allows the monitoring of the effect of failed processes 
and gives the ability to ensure that the system does not fail or suffer serious 
degradation as a result of a process failure. 
Recently, the Chaos Monkey got some friends to assist in the testing. 
Currently, the Netflix Simian Army includes these:
■
■
The Latency Monkey induces artificial delays in the client-server 
communication layer to simulate service degradation and measures if 
upstream services respond appropriately. 
■
■
The Conformity Monkey finds instances that don’t adhere to best 
practices and shuts them down. For example, if an instance does not 
belong to an auto-scaling group, it will not appropriately scale when 
demand goes up.
■
■
The Doctor Monkey taps into health checks that run on each instance as 
well as monitors other external signs of health (e.g., CPU load) to detect 
unhealthy instances. 
■
■
The Janitor Monkey ensures that the Netflix cloud environment is 
running free of clutter and waste. It searches for unused resources and 
disposes of them.
■
■
The Security Monkey is an extension of Conformity Monkey. It finds 
security violations or vulnerabilities, such as improperly configured 
security groups, and terminates the offending instances. It also ensures 
that all the SSL and digital rights management (DRM) certificates are 
valid and are not coming up for renewal.
■
■
The 10-18 Monkey (localization-internationalization) detects 
configuration and runtime problems in instances serving customers in 
multiple geographic regions, using different languages and character 
sets. The name 10-18 comes from L10n-i18n, a sort of shorthand for the 
words localization and internationalization.
Some of the members of the Simian Army use fault injection to place 
faults into the running system in a controlled and monitored fashion. 
Other members monitor various specialized aspects of the system and its 
environment. Both of these techniques have broader applicability than just 
Netflix.
Not all faults are equal in terms of severity. More emphasis should be 
placed on finding the most severe faults than on finding other faults. The 
Simian Army reflects a determination by Netflix that the faults they look for 
are the most serious in terms of their impact.
This strategy illustrates that some systems are too complex and adap-
tive to be tested fully, because some of their behaviors are emergent. An 
aspect of testing in that arena is logging of operational data produced by 
the system, so that when failures occur, the logged data can be analyzed in 
the lab to try to reproduce the faults. Architecturally this can require mecha-
nisms to access and log certain system state. The Simian Army is one way 
to discover and log behavior in systems of this ilk.
—LB
