3.5â€ƒ Stakeholders
55
Name
Description
Interest in Architecture
Implementer
Responsible for the development of specific elements according to 
designs, requirements, and the architecture.
Understanding inviolable constraints and exploitable freedoms on 
development activities.
Integrator
Responsible for taking individual components and integrating them, 
according to the architecture and system designs.
Producing integration plans and procedures, and locating the source 
of integration failures.
Maintainer
Responsible for fixing bugs and providing enhancements to the system 
throughout its life (including adaptation of the system for uses not originally 
envisioned).
Understanding the ramifications of a change.
Network 
Administrator
Responsible for the maintenance and oversight of computer hardware 
and software in a computer network. This may include the deployment, 
configuration, maintenance, and monitoring of network components.
Determining network loads during various use profiles, understanding 
uses of the network.
Product-Line 
Manager
Responsible for development of an entire family of products, all built using 
the same core assets (including the architecture).
Determining whether a potential new member of a product family is in 
or out of scope and, if out, by how much.
Project Manager
Responsible for planning, sequencing, scheduling, and allocating 
resources to develop software components and deliver components to 
integration and test activities.
Helping to set budget and schedule, gauging progress against 
established budget and schedule, identifying and resolving 
development-time resource contention.
Representative of 
External Systems 
Responsible for managing a system with which this one must interoperate, 
and its interface with our system.
Defining the set of agreement between the systems. 
System Engineer
Responsible for design and development of systems or system 
components in which software plays a role.
Assuring that the system environment provided for the software is 
sufficient.
Tester
Responsible for the (independent) test and verification of the system or its 
elements against the formal requirements and the architecture.
Creating tests based on the behavior and interaction of the software 
elements. 
User
The actual end users of the system. There may be distinguished kinds of 
users, such as administrators, superusers, etc.
Users, in the role of reviewers, might use architecture documentation 
to check whether desired functionality is being delivered. Users might 
also use the documentation to understand what the major system 
elements are, which can aid them in emergency field maintenance.
