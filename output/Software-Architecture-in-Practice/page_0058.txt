2.14  Summary
37
2.13  Providing a Basis for Training
The architecture, including a description of how the elements interact with each 
other to carry out the required behavior, can serve as the first introduction to the 
system for new project members. This reinforces our point that one of the im-
portant uses of software architecture is to support and encourage communication 
among the various stakeholders. The architecture is a common reference point.
Module views are excellent for showing someone the structure of a project: 
Who does what, which teams are assigned to which parts of the system, and so 
forth. Component-and-connector views are excellent for explaining how the sys-
tem is expected to work and accomplish its job.
We will discuss these views in more detail in Chapter 18.
2.14  Summary
Software architecture is important for a wide variety of technical and nontechni-
cal reasons. Our list includes the following:
1.	 An architecture will inhibit or enable a system’s driving quality attributes.
2.	 The decisions made in an architecture allow you to reason about and man-
age change as the system evolves.
3.	 The analysis of an architecture enables early prediction of a system’s 
qualities.
4.	 A documented architecture enhances communication among stakeholders.
5.	 The architecture is a carrier of the earliest and hence most fundamental, 
hardest-to-change design decisions.
6.	 An architecture defines a set of constraints on subsequent implementation.
7.	 The architecture dictates the structure of an organization, or vice versa.
8.	 An architecture can provide the basis for evolutionary prototyping.
9.	 An architecture is the key artifact that allows the architect and project man-
ager to reason about cost and schedule.
10.	 An architecture can be created as a transferable, reusable model that forms 
the heart of a product line.
11.	 Architecture-based development focuses attention on the assembly of com-
ponents, rather than simply on their creation.
12.	 An architecture channels the creativity of developers, reducing design and 
system complexity.
13.	 An architecture can be the foundation for training of a new team member.
