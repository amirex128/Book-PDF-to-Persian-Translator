144 
Part Two  Quality Attributes	
8—Performance
Table 8.2  Checklist to Support the Design and Analysis Process for 
Performance, continued
Category
Checklist
Mapping among 
Architectural 
Elements
Where heavy network loading will occur, determine whether 
co-locating some components will reduce loading and improve 
overall efficiency.
Ensure that components with heavy computation requirements 
are assigned to processors with the most processing capacity. 
Determine where introducing concurrency (that is, allocating 
a piece of functionality to two or more copies of a component 
running simultaneously) is feasible and has a significant positive 
effect on performance.
Determine whether the choice of threads of control and their 
associated responsibilities introduces bottlenecks. 
Resource 
Management
Determine which resources in your system are critical for 
performance. For these resources, ensure that they will be 
monitored and managed under normal and overloaded system 
operation. For example: 
■
■
System elements that need to be aware of, and manage, 
time and other performance-critical resources
■
■
Process/thread models 
■
■
Prioritization of resources and access to resources 
■
■
Scheduling and locking strategies 
■
■
Deploying additional resources on demand to meet increased 
loads
Binding Time
For each element that will be bound after compile time, 
determine the following:
■
■
Time necessary to complete the binding
■
■
Additional overhead introduced by using the late binding 
mechanism
Ensure that these values do not pose unacceptable performance 
penalties on the system.
Choice of 
Technology
Will your choice of technology let you set and meet hard, real-
time deadlines? Do you know its characteristics under load and 
its limits?
Does your choice of technology give you the ability to set the 
following:
■
■
Scheduling policy
■
■
Priorities
■
■
Policies for reducing demand
■
■
Allocation of portions of the technology to processors
■
■
Other performance-related parameters
Does your choice of technology introduce excessive overhead 
for heavily used operations?
