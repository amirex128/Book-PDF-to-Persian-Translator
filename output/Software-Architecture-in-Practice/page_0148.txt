7.3  A Design Checklist for Modifiability
127
Category
Checklist
Mapping among 
Architectural 
Elements
Determine if it is desirable to change the way in which functionality 
is mapped to computational elements (e.g., processes, threads, 
processors) at runtime, compile time, design time, or build time.
Determine the extent of modifications necessary to accommodate 
the addition, deletion, or modification of a function or a quality 
attribute. This might involve a determination of the following, for 
example:
■
■
Execution dependencies
■
■
Assignment of data to databases
■
■
Assignment of runtime elements to processes, threads, or 
processors
Ensure that such changes are performed with mechanisms that 
utilize deferred binding of mapping decisions.
Resource 
Management
Determine how the addition, deletion, or modification of a 
responsibility or quality attribute will affect resource usage. This 
involves, for example:
■
■
Determining what changes might introduce new resources or 
remove old ones or affect existing resource usage
■
■
Determining what resource limits will change and how
Ensure that the resources after the modification are sufficient to 
meet the system requirements.
Encapsulate all resource managers and ensure that the policies 
implemented by those resource managers are themselves 
encapsulated and bindings are deferred to the extent possible.
Binding Time
For each change or category of change:
■
■
Determine the latest time at which the change will need to be 
made. 
■
■
Choose a defer-binding mechanism (see Section 7.2) that 
delivers the appropriate capability at the time chosen.
■
■
Determine the cost of introducing the mechanism and the cost 
of making changes using the chosen mechanism. Use the 
equation on page 118 to assess your choice of mechanism.
■
■
Do not introduce so many binding choices that change is 
impeded because the dependencies among the choices are 
complex and unknown. 
Choice of 
Technology
Determine what modifications are made easier or harder by your 
technology choices. 
■
■
Will your technology choices help to make, test, and deploy 
modifications?
■
■
How easy is it to modify your choice of technologies (in case 
some of these technologies change or become obsolete)?
Choose your technologies to support the most likely modifications. 
For example, an enterprise service bus makes it easier to change 
how elements are connected but may introduce vendor lock-in.
