3.1  Architecture in a Technical Context
43
He was also responsible to a variety of stakeholders. In this case, the 
primary customer was the king, but Hybertsson also was responsible to 
the crew that would sail his creation. Also like all architects, Hybertsson 
brought his experience with him to the task. In this case, his experience 
told him to design the Vasa as though it were a single-gun-deck ship and 
then extrapolate, which was in accordance with the technical environment 
of the day. Faced with an impossible task, Hybertsson had the good sense 
to die about a year before the ship was finished.
The project was completed to his specifications, however, and on 
Sunday morning, August 10, 1628, the mighty ship was ready. She set her 
sails, waddled out into Stockholm’s deep-water harbor, fired her guns in sa-
lute, and promptly rolled over. Water poured in through the open gun ports, 
and the Vasa plummeted. A few minutes later her first and only voyage 
ended 30 meters beneath the surface. Dozens among her 150-man crew 
drowned.
Inquiries followed, which concluded that the ship was well built but “badly 
proportioned.” In other words, its architecture was flawed. Today we know 
that Hybertsson did a poor job of balancing all of the conflicting constraints 
levied on him. In particular, he did a poor job of risk management and a 
poor job of customer management (not that anyone could have fared bet-
ter). He simply acquiesced in the face of impossible requirements. 
The story of the Vasa, although more than 375 years old, well illustrates 
the Architecture Influence Cycle: organization goals beget requirements, 
which beget an architecture, which begets a system. The architecture flows 
from the architect’s experience and the technical environment of the day. 
Hybertsson suffered from the fact that neither of those were up to the task 
before him. 
In this book, we provide three things that Hybertsson could have used:
1.	
Examples of successful architectural practices that work under 
demanding requirements, so as to help set the technical 
playing field of the day.
2.	
Methods to assess an architecture before any system is built 
from it, so as to mitigate the risks associated with launching 
unprecedented designs.
3.	
Techniques for incremental architecture-based development, 
so as to uncover design flaws before it is too late to correct 
them.
Our goal is to give architects another way out of their design dilemmas 
than the one that befell the ill-fated Dutch ship designer. Death before de-
ployment is not nearly so admired these days. 
—PCC
