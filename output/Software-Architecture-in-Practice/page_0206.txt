185
12
Other Quality Attributes
Quality is not an act, it is a habit.
—Aristotle
Chapters 5–11 each dealt with a particular quality attribute important to software 
systems. Each of those chapters discussed how its particular quality attribute is 
defined, gave a general scenario for that quality attribute, and showed how to 
write specific scenarios to express precise shades of meaning concerning that 
quality attribute. And each gave a collection of techniques to achieve that quality 
attribute in an architecture. In short, each chapter presented a kind of portfolio for 
specifying and designing to achieve a particular quality attribute.
Those seven chapters covered seven of the most important quality attributes, in 
terms of their occurrence in modern software-reliant systems. However, as is no 
doubt clear, seven only begins to scratch the surface of the quality attributes that 
you might find needed in a software system you’re working on. 
Is cost a quality attribute? It is not a technical quality attribute, but it certainly 
affects fitness for use. We consider economic factors in Chapter 23. 
This chapter will give a brief introduction to a few other quality attributes—a 
sort of “B list” of quality attributes—but, more important, show how to build the 
same kind of specification or design portfolio for a quality attribute not covered 
in our list.
12.1  Other Important Quality Attributes
Besides the quality attributes we’ve covered in depth in Chapters 5–11, some oth-
ers that arise frequently are variability, portability, development distributability, 
scalability and elasticity, deployability, mobility, and monitorability. We discuss 
“green” computing in Section 12.3.
