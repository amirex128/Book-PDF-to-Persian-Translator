12.4  Using Standard Lists of Quality Attributes—or Not 
193
several times. Worse, it came on whenever the pilot let the nose fall a bit 
(increasing the airspeed and taking the readings into the “valid” range, but 
still in stall) and then stopped when he pulled back. That is, doing the right 
thing resulted in the wrong feedback and vice versa. 
Was this an unsafe system, or a safe system unsafely operated? 
Ultimately the courts will decide. 
Software that can physically harm us is a fact of our modern life. 
Sometimes the link between software and physical harm is direct, as in 
the Ariane example, and sometimes it’s much more tenuous, as in the Air 
France 447 example. But as software professionals, we cannot take refuge 
in the fact that our software can’t actually inflict harm any more than the 
person who shouts “Fire!” in a crowded theater can claim it was the stam-
pede, not the shout, that caused injury.
—PCC
12.4  Using Standard Lists of Quality Attributes—or Not 
Architects have no shortage of lists of quality attributes for software systems at 
their disposal. The standard with the pause-and-take-a-breath title of “ISO/IEC 
FCD 25010: Systems and software engineering—Systems and software product 
Quality Requirements and Evaluation (SQuaRE)—System and software quality 
models,” is a good example. The standard divides quality attributes into those 
supporting a “quality in use” model and those supporting a “product quality” 
model. That division is a bit of a stretch in some places, but nevertheless begins 
a divide-and-conquer march through a breathtaking array of qualities. See Figure 
12.1 for this array.
The standard lists the following quality attributes that deal with product 
quality:
■
■Functional suitability. The degree to which a product or system provides 
functions that meet stated and implied needs when used under specified 
conditions
■
■Performance efficiency. Performance relative to the amount of resources 
used under stated conditions
■
■Compatibility. The degree to which a product, system, or component can 
exchange information with other products, systems, or components, and/or 
perform its required functions, while sharing the same hardware or software 
environment
■
■Usability. The degree to which a product or system can be used by specified 
users to achieve specified goals with effectiveness, efficiency, and satisfac-
tion in a specified context of use
