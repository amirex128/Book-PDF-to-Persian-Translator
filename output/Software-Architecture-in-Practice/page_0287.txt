266 
Part Two  Quality Attributes	
14—Quality Attribute Modeling and Analysis
Table 14.3  Forms of Analysis, Their Life-Cycle Stage, Cost, and Confidence in 
Their Outputs
Life-Cycle Stage
Form of Analysis
Cost
Confidence
Requirements
Experience-based analogy
Low
Low–High
Requirements
Back-of-the-envelope
Low
Low–Medium
Architecture
Thought experiment
Low
Low–Medium
Architecture
Checklist
Low
Medium
Architecture
Analytic model
Low–Medium
Medium
Architecture
Simulation
Medium
Medium
Architecture
Prototype
Medium
Medium–High
Implementation 
Experiment
Medium–High
Medium–High
Fielded System
Instrumentation
Medium–High
High
The table shows that analysis performed later in the life cycle yields results that 
merit high confidence. However, this confidence comes at a price. First, the cost of 
performing the analysis also tends to be higher. But the cost of changing the system 
to fix a problem uncovered by analysis skyrockets later in the life cycle.
Choosing an appropriate form of analysis requires a consideration of all of 
the factors listed in Table 14.3: What life-cycle stage are you currently in? How 
important is the achievement of the quality attribute in question and how worried 
are you about being able to achieve the goals for this attribute? And finally, how 
much budget and schedule can you afford to allocate to this form of risk miti-
gation? Each of these considerations will lead you to choose one or more of the 
analysis techniques described in this chapter.
14.6  Summary
Analysis of an architecture enables early prediction of a system’s qualities. We can 
analyze an architecture to see how the system or systems we build from it will per-
form with respect to their quality attribute goals. Some quality attributes, most nota-
bly performance and availability, have well-understood, time-tested analytic models 
that can be used to assist in quantitative analysis. Other quality attributes have less 
sophisticated models that can nevertheless help with predictive analysis. 
For some quality attributes, checklists exist to enable the architect to test 
compliance or to guide the architect when making design decisions. Quality at-
tribute checklists can come from industry consortia, from government organiza-
tions, or from private organizations. In large organizations they may be devel-
oped in house. The architect should treat the items on an applicable checklist as 
requirements, in that they need to be understood and prioritized. 
