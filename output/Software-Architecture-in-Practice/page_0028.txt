1.1  What Software Architecture Is and What It Isn’t
7
architect’s level of concern. But to the extent that an element’s behavior influ-
ences another element or influences the acceptability of the system as a whole, 
this behavior must be considered, and should be documented, as part of the soft-
ware architecture. 
Not All Architectures Are Good Architectures
The definition is indifferent as to whether the architecture for a system is a good 
one or a bad one. An architecture may permit or preclude a system’s achievement 
of its behavioral, quality attribute, and life-cycle requirements. Assuming that we 
do not accept trial and error as the best way to choose an architecture for a sys-
tem—that is, picking an architecture at random, building the system from it, and 
then hacking away and hoping for the best—this raises the importance of archi-
tecture design, which is treated in Chapter 17, and architecture evaluation, which 
we deal with in Chapter 21.
System and Enterprise Architectures
Two disciplines related to software architecture are system architecture 
and enterprise architecture. Both of these disciplines have broader con-
cerns than software and affect software architecture through the estab-
lishment of constraints within which a software system must live. In both 
cases, the software architect for a system should be on the team that pro-
vides input into the decisions made about the system or the enterprise. 
System architecture
A system’s architecture is a representation of a system in which there 
is a mapping of functionality onto hardware and software components, 
a mapping of the software architecture onto the hardware architecture, 
and a concern for the human interaction with these components. That is, 
system architecture is concerned with a total system, including hardware, 
software, and humans.
A system architecture will determine, for example, the functionality that 
is assigned to different processors and the type of network that connects 
those processors. The software architecture on each of those processors 
will determine how this functionality is implemented and how the various 
processors interact through the exchange of messages on the network.
A description of the software architecture, as it is mapped to hardware 
and networking components, allows reasoning about qualities such as per-
formance and reliability. A description of the system architecture will allow 
reasoning about additional qualities such as power consumption, weight, 
and physical footprint.
When a particular system is designed, there is frequently negotiation be-
tween the system architect and the software architect as to the distribution 
