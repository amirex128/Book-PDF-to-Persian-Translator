63
4
Understanding Quality 
Attributes
Between stimulus and response, there is a space. In 
that space is our power to choose our response. In 
our response lies our growth and our freedom.
— Viktor E. Frankl, Man’s Search for Meaning
As we have seen in the Architecture Influence Cycle (in Chapter 3), many fac-
tors determine the qualities that must be provided for in a system’s architecture. 
These qualities go beyond functionality, which is the basic statement of the sys-
tem’s capabilities, services, and behavior. Although functionality and other qual-
ities are closely related, as you will see, functionality often takes the front seat in 
the development scheme. This preference is shortsighted, however. Systems are 
frequently redesigned not because they are functionally deficient—the replace-
ments are often functionally identical—but because they are difficult to maintain, 
port, or scale; or they are too slow; or they have been compromised by hackers. 
In Chapter 2, we said that architecture was the first place in software creation in 
which quality requirements could be addressed. It is the mapping of a system’s 
functionality onto software structures that determines the architecture’s support 
for qualities. In Chapters 5–11 we discuss how various qualities are supported by 
architectural design decisions. In Chapter 17 we show how to integrate all of the 
quality attribute decisions into a single design. 
We have been using the term “quality attribute” loosely, but now it is time to 
define it more carefully. A quality attribute (QA) is a measurable or testable prop-
erty of a system that is used to indicate how well the system satisfies the needs of 
its stakeholders. You can think of a quality attribute as measuring the “goodness” 
of a product along some dimension of interest to a stakeholder.
In this chapter our focus is on understanding the following:
■
■How to express the qualities we want our architecture to provide to the sys-
tem or systems we are building from it 
