292 
Part Three  Architecture in the Life Cycle	
16—Architecture and Requirements
16.1  Gathering ASRs from Requirements Documents
An obvious location to look for candidate ASRs is in the requirements documents 
or in user stories. After all, we are looking for requirements, and requirements 
should be in requirements documents. Unfortunately, this is not usually the case, 
although as we will see, there is information in the requirements documents that 
can be of use. 
Don’t Get Your Hopes Up
Many projects don’t create or maintain the kind of requirements document that 
professors in software engineering classes or authors of traditional software en-
gineering books love to prescribe. Whether requirements are specified using the 
“MoSCoW” style (must, should, could, won’t), or as a collection of “user sto-
ries,” neither of these is much help in nailing down quality attributes.
Furthermore, no architect just sits and waits until the requirements are “fin-
ished” before starting work. The architect must begin while the requirements are 
still in flux. Consequently, the QA requirements are quite likely to be up in the 
air when the architect starts work. Even where they exist and are stable, require-
ments documents often fail an architect in two ways.
First, most of what is in a requirements specification does not affect the 
architecture. As we’ve seen over and over, architectures are mostly driven or 
“shaped” by quality attribute requirements. These determine and constrain the 
most important architectural decisions. And yet the vast bulk of most require-
ments specifications is focused on the required features and functionality of a 
system, which shape the architecture the least. The best software engineering 
practices do prescribe capturing quality attribute requirements. For example, the 
Software Engineering Body of Knowledge (SWEBOK) says that quality attribute 
requirements are like any other requirements. They must be captured if they are 
important, and they should be specified unambiguously and be testable. 
In practice, though, we rarely see adequate capture of quality attribute re-
quirements. How many times have you seen a requirement of the form “The 
system shall be modular” or “The system shall exhibit high usability” or “The 
system shall meet users’ performance expectations”? These are not requirements, 
but in the best case they are invitations for the architect to begin a conversation 
about what the requirements in these areas really are. 
Second, much of what is useful to an architect is not in even the best re-
quirements document. Many concerns that drive an architecture do not manifest 
themselves at all as observables in the system being specified, and so are not 
the subject of requirements specifications. ASRs often derive from business goals 
in the development organization itself; we’ll explore this in Section 16.3. De-
velopmental qualities are also out of scope; you will rarely see a requirements 
