203
13
Architectural Tactics 
and Patterns
I have not failed. I’ve just found 
10,000 ways that won’t work. 
—Thomas Edison
There are many ways to do design badly, and just a few ways to do it well. Be-
cause success in architectural design is complex and challenging, designers have 
been looking for ways to capture and reuse hard-won architectural knowledge. 
Architectural patterns and tactics are ways of capturing proven good design 
structures, so that they can be reused. 
Architectural patterns have seen increased interest and attention, from both 
software practitioners and theorists, over the past 15 years or more. An architec-
tural pattern 
■
■is a package of design decisions that is found repeatedly in practice,
■
■has known properties that permit reuse, and 
■
■describes a class of architectures.
Because patterns are (by definition) found in practice, one does not invent 
them; one discovers them. Cataloging patterns is akin to the job of a Linnaean 
botanist or zoologist: “discovering” patterns and describing their shared charac-
teristics. And like the botanist, zoologist, or ecologist, the pattern cataloger strives 
to understand how the characteristics lead to different behaviors and different re-
sponses to environmental conditions. For this reason there will never be a com-
plete list of patterns: patterns spontaneously emerge in reaction to environmental 
conditions, and as long as those conditions change, new patterns will emerge. 
Architectural design seldom starts from first principles. Experienced architects 
typically think of creating an architecture as a process of selecting, tailoring, and 
combining patterns. The software architect must decide how to instantiate a pat-
tern—how to make it fit with the specific context and the constraints of the problem.
