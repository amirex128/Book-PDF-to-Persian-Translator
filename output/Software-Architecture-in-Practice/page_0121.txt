100 
Part Two  Quality Attributes	
5—Availability
■
■Mountains of papers have been written about parameter typing, but [Utas 
05] writes about it in the context of availability (as opposed to bug preven-
tion, its usual context).
■
■Hardware engineers often use preparation-and-repair tactics. Examples in-
clude error detection and correction (EDAC) coding, forward error correction 
(FEC), and temporal redundancy. EDAC coding is typically used to protect 
control memory structures in high-availability distributed real-time embedded 
systems [Hamming 80]. Conversely, FEC coding is typically employed to 
recover from physical-layer errors occurring on external network links More-
los-Zaragoza 06]. Temporal redundancy involves sampling spatially redundant 
clock or data lines at time intervals that exceed the pulse width of any transient 
pulse to be tolerated, and then voting out any defects detected [Mavis 02].
Tactics for availability, fault prevention:
■
■Parnas and Madey have written about increasing an element’s competence 
set [Parnas 95].
■
■The ACID properties, important in the transactions tactic, were introduced 
by Gray in the 1970s and discussed in depth in [Gray 93]. 
Analysis:
■
■Fault tree analysis dates from the early 1960s, but the granddaddy of re-
sources for it is the U.S. Nuclear Regulatory Commission’s “Fault Tree 
Handbook,” published in 1981 [Vesely 81]. NASA’s 2002 “Fault Tree 
Handbook with Aerospace Applications” [Vesely 02] is an updated compre-
hensive primer of the NRC handbook, and the source for the notation used 
in this chapter. Both are available online as downloadable PDF files. 
5.6  Discussion Questions
1.	
Write a set of concrete scenarios for availability using each of the possible 
responses in the general scenario.
2.	
Write a concrete availability scenario for the software for a (hypothetical) 
pilotless passenger aircraft.
3.	
Write a concrete availability scenario for a program like Microsoft Word.
4.	
Redundancy is often cited as a key strategy for achieving high availability. 
Look at the tactics presented in this chapter and decide how many of them 
exploit some form of redundancy and how many do not.
5.	
How does availability trade off against modifiability? How would you make 
a change to a system that is required to have “24/7” availability (no sched-
uled or unscheduled downtime, ever)?
