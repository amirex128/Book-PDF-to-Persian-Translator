50 
Part One  Introduction	
3—The Many Contexts of Software Architecture
Figure 3.2 illustrates the major points from the preceding discussion. In the 
figure, the arrows mean “leads to.” The solid arrows highlight the relationships of 
most interest to us.
Architectures and the Development Organization
A development organization contributes many of the business goals that influ-
ence an architecture. For example, if the organization has an abundance of ex-
perienced and idle programmers skilled in peer-to-peer communications, then 
a peer-to-peer architecture might be the approach supported by management. If 
not, it may well be rejected. This would support the business goal, perhaps left 
implicit, of not wanting to hire new staff or lay off existing staff, or not wanting 
to invest significantly in the retraining of existing staff. 
More generally, an organization often has an investment in assets, such as 
existing architectures and the products based on them. The foundation of a de-
velopment project may be that the proposed system is the next in a sequence of 
similar systems, and the cost estimates assume a high degree of asset reuse and a 
high degree of skill and productivity from the programmers. 
Additionally, an organization may wish to make a long-term business in-
vestment in an infrastructure to pursue strategic goals and may view the proposed 
system as one means of financing and extending that infrastructure. For example, 
an organization may decide that it wants to develop a reputation for supporting 
solutions based on cloud computing or service-oriented architecture or high-per-
formance real-time computing. This long-term goal would be supported, in part, 
by infrastructural investments that will affect the developing organization: a 
cloud-computing group needs to be hired or grown, infrastructure needs to be 
purchased, or perhaps training needs to be planned.
Business Goals
Quality Attributes
Architecture
Nonarchitectural Solutions
Figure 3.2  Some business goals may lead to quality attribute requirements 
(which lead to architectures), or lead directly to architectural decisions, or lead to 
nonarchitectural solutions.
