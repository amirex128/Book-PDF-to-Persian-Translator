204 
Part Two  Quality Attributes	
13—Architectural Tactics and Patterns
In Chapters 5–11 we have seen a variety of architectural tactics. These are 
simpler than patterns. Tactics typically use just a single structure or computa-
tional mechanism, and they are meant to address a single architectural force. For 
this reason they give more precise control to an architect when making design 
decisions than patterns, which typically combine multiple design decisions into 
a package. Tactics are the “building blocks” of design, from which architectural 
patterns are created. Tactics are atoms and patterns are molecules. Most patterns 
consist of (are constructed from) several different tactics. For this reason we say 
that patterns package tactics. 
In this chapter we will take a very brief tour through the patterns universe, 
touching on some of the most important and most commonly used patterns for ar-
chitecture, and we will then look at the relationships between patterns and tactics: 
showing how a pattern is constructed from tactics, and showing how tactics can 
be used to tailor patterns when the pattern that you find in a book or on a website 
doesn’t quite address your design needs.
13.1  Architectural Patterns
An architectural pattern establishes a relationship between:
■
■A context. A recurring, common situation in the world that gives rise to a 
problem.
■
■A problem. The problem, appropriately generalized, that arises in the given 
context. The pattern description outlines the problem and its variants, and 
describes any complementary or opposing forces. The description of the 
problem often includes quality attributes that must be met.
■
■A solution. A successful architectural resolution to the problem, appro-
priately abstracted. The solution describes the architectural structures 
that solve the problem, including how to balance the many forces at 
work. The solution will describe the responsibilities of and static rela-
tionships among elements (using a module structure), or it will describe 
the runtime behavior of and interaction between elements (laying out a 
component-and-connector or allocation structure). The solution for a pat-
tern is determined and described by:
■
■A set of element types (for example, data repositories, processes, and 
objects)
■
■A set of interaction mechanisms or connectors (for example, method 
calls, events, or message bus)
■
■A topological layout of the components 
■
■A set of semantic constraints covering topology, element behavior, and 
interaction mechanisms
