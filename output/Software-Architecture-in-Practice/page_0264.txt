13.4  Using Tactics Together 
243
quality attribute endangers another. We are able to use tactics profitably because 
we can gauge the direct and side effects of a tactic, and when the tradeoff is ac-
ceptable, we employ the tactic. In doing so we gain some benefit in our quality 
attribute of interest while giving up something else (with respect to a different 
quality attribute and, we hope, of a much smaller magnitude).
This section will walk through an example that shows how applying tactics 
to a pattern can produce negative effects in one area, but how adding other tactics 
can bring relief and put you back in an acceptable design space. The point is to 
show the interplay between tactics that you can use to your advantage. Just as 
some combinations of liquids are noxious whereas others yield lovely things like 
strawberry lemonade, tactics can either make things worse or put you in a happy 
design space. Here, then, is a walkthrough of tactic mixology.
Consider a system that needs to detect faults in its components. A common 
tactic for detecting faults is ping/echo. Let us assume that the architect has de-
cided to employ ping/echo as a way to detect failed components in the system. 
Every tactic has one or more side effects, and ping/echo is no different. Common 
considerations associated with ping/echo are these:
■
■Security. How to prevent a ping flood attack?
■
■Performance. How to ensure that the performance overhead of ping/echo is 
small?
■
■Modifiability. How to add ping/echo to the existing architecture?
We can represent the architect’s reasoning and decisions thus far as shown 
in Figure 13.17.
System
Ping/Echo
Add to
system
Ping
flood
Performance
overhead
Figure 13.17  Partial availability decisions
