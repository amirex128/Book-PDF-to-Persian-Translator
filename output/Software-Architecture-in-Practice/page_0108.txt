5.2  Tactics for Availability
87
5.2  Tactics for Availability
A failure occurs when the system no longer delivers a service that is consistent 
with its specification; this failure is observable by the system’s actors. A fault 
(or combination of faults) has the potential to cause a failure. Availability tac-
tics, therefore, are designed to enable a system to endure system faults so that a 
service being delivered by the system remains compliant with its specification. 
The tactics we discuss in this section will keep faults from becoming failures or 
at least bound the effects of the fault and make repair possible. We illustrate this 
approach in Figure 5.4.
Availability tactics may be categorized as addressing one of three catego-
ries: fault detection, fault recovery, and fault prevention. The tactics categoriza-
tion for availability is shown in Figure 5.5 (on the next page). Note that it is often 
the case that these tactics will be provided for you by a software infrastructure, 
such as a middleware package, so your job as an architect is often one of choos-
ing and assessing (rather than implementing) the right availability tactics and the 
right combination of tactics. 
Fault
Fault Masked
or Repair Made
Tactics
to Control
Availability
Figure 5.4  Goal of availability tactics
Detect Faults
Before any system can take action regarding a fault, the presence of the fault 
must be detected or anticipated. Tactics in this category include the following:
■
■Ping/echo refers to an asynchronous request/response message pair ex-
changed between nodes, used to determine reachability and the round-trip 
delay through the associated network path. But the echo also determines 
that the pinged component is alive and responding correctly. The ping is 
