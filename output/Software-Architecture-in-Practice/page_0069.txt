48 
Part One  Introduction	
3—The Many Contexts of Software Architecture
Evaluating an architecture for the qualities that it supports is essential to 
ensuring that the system constructed from that architecture satisfies its stake-
holders’ needs. Analysis techniques to evaluate the quality attributes that an ar-
chitecture imparts to a system have become much more widespread in the past 
decade. Scenario-based techniques provide one of the most general and effective 
approaches for evaluating an architecture. The most mature methodological ap-
proach is found in the Architecture Tradeoff Analysis Method (ATAM) of Chap-
ter 21, while the economic implications of architectural decisions are explored in 
Chapter 23.
Implementing and Testing the System 
Based on the Architecture
If the architect designs and analyzes a beautiful, conceptually sound architec-
ture which the implementers then ignore, what was the point? If architecture is 
important enough to devote the time and effort of your best minds to, then it is 
just as important to keep the developers faithful to the structures and interaction 
protocols constrained by the architecture. Having an explicit and well-commu-
nicated architecture is the first step toward ensuring architectural conformance. 
Having an environment or infrastructure that actively assists developers in creat-
ing and maintaining the architecture (as opposed to just the code) is better. 
There are many reasons why developers might not be faithful to the archi-
tecture: It might not have been properly documented and disseminated. It might 
be too confusing. It might be that the architect has not built ground-level support 
for the architecture (particularly if it presents a different way of “doing business” 
than the developers are used to), and so the developers resist it. Or the developers 
may sincerely want to implement the architecture but, being human, they occa-
sionally slip up. This is not to say that the architecture should not change, but it 
should not change purely on the basis of the whims of the developers, because 
they may not have the overall picture.
Ensuring That the Implementation 
Conforms to the Architecture
Finally, when an architecture is created and used, it goes into a maintenance 
phase. Vigilance is required to ensure that the actual architecture and its repre-
sentation remain faithful to each other during this phase. And when they do get 
significantly out of sync, effort must be expended to either fix the implementation 
or update the architectural documentation.
Although work in this area is still relatively immature, it has been an area of 
intense activity in recent years. Chapter 20 will present the current state of recov-
ering an architecture from an existing system and ensuring that it conforms to the 
specified architecture. 
