278 
Part Three  Architecture in the Life Cycle	
15—Architecture in Agile Projects
Garden Shed or Skyscraper?
A few years ago I built a small shed in my back yard, for holding gardening 
tools, the lawn mower, the fertilizer cart, and so forth. I had a plan in my 
head, a small team of physically co-located “developers,” and excellent 
access to the customer (me) for making any last-minute decisions and for 
incorporating any late-breaking feature requests. What was my architec-
ture? For sure, nothing was written down; I had an image in my head. I 
went to the local big-box hardware store/lumberyard and bought a bunch 
of building materials, primarily wood. I already owned a fine collection of 
hammers, saws, and drills. The boys and I started hammering and sawing 
and drilling. In short order I had a garden shed which has served its 
purpose, with the occasional repair, for quite a few years. My process was 
agile: I was able to accommodate the knowledge, skills, and characteris-
tics of my developers; we were a self-organizing team; and I was able to 
easily accommodate feature requests that emerged late in the process.
Would I recommend this process for the construction of a 20-story office 
building, or even a building-code-compliant single-family house? Of course 
not. All of these are built using the much-maligned BDUF (Big Design Up 
Front) process. 
My ad hoc process for building the shed was ultimately agile, but it had 
little analysis or forethought. It did, however, have just enough forethought 
and planning. Doing BDUF—hiring an architect, a structural engineer, and 
a surveyor, and doing a detailed analysis of soil conditions, potential snow 
loads, and options for future modifications—would have been folly; really 
expensive folly! 
So too with software. As with everything that we recommend in this 
book, the amount of up-front planning and analysis should be justified by 
the potential risks. In the end, everything in architecture is about cost/bene-
fit tradeoffs.
—RK
Let us consider a specific case, to illustrate the tradeoff between up-front 
planning and agility: the Agile technique of employing user stories. User stories 
are a cornerstone of the Agile approach. Each user story describes a set of features 
visible to the user. Implementing user stories is a way of demonstrating progress 
to the customer. This can easily lead to an architecture in which every feature is 
independently designed and implemented. In such an environment, concerns that 
cut across more than one feature become hard to capture. For example, suppose 
there is a utility function that supports multiple features. To identify this utility 
function, coordination is required among the teams that develop the different fea-
tures, and it also requires a role in which a broad overview across all of the fea-
tures is maintained. If the development team is geographically distributed and the 
