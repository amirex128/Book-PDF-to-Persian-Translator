13.2  Overview of the Patterns Catalog
221
The drawbacks of the peer-to-peer pattern are strongly related to its 
strengths. Because peer-to-peer systems are decentralized, managing security, 
data consistency, data and service availability, backup, and recovery are all more 
complex. In many cases it is difficult to provide guarantees with peer-to-peer 
systems because the peers come and go; instead, the architect can, at best, offer 
probabilities that quality goals will be met, and these probabilities typically in-
crease with the size of the population of peers. 
Table 13.6 on the next page summarizes the peer-to-peer pattern solution. 
Peer-to-peer computing is often used in distributed computing applications 
such as file sharing, instant messaging, desktop grid computing, routing, and 
wireless ad hoc networking. Examples of peer-to-peer systems include file-shar-
ing networks such as BitTorrent and eDonkey, and instant messaging and VoIP 
applications such as Skype. Figure 13.10 shows an example of an instantiation of 
the peer-to-peer pattern.
A
B
moldy
69.95.63.49
amidala
70.116.152.15
anakin
207.192.20.13
lambda
50.64.16.14
outrider
74.12.41.111
naboo
157.66.24.26
Key:
Leaf peer
Ultrapeer
Gnutella port
HTTP file transfer
from A to B
Request/reply using Gnutella
protocol over TCP or UDP
Figure 13.10  A peer-to-peer view of a Gnutella network using an informal C&C 
notation. For brevity, only a few peers are identified. Each of the identified leaf 
peers uploads and downloads files directly from other peers.
