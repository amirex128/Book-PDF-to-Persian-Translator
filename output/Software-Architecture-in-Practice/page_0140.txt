7.1  Modifiability General Scenario
119
might be cheaper in the long run to build a sophisticated change-handling mecha-
nism, but you might not be able to wait for that.
7.1  Modifiability General Scenario
From these considerations, we can see the portions of the modifiability general 
scenario:
■
■Source of stimulus. This portion specifies who makes the change: the 
developer, a system administrator, or an end user. 
■
■Stimulus. This portion specifies the change to be made. A change can be 
the addition of a function, the modification of an existing function, or the 
deletion of a function. (For this categorization, we regard fixing a defect 
as changing a function, which presumably wasn’t working correctly as 
a result of the defect.) A change can also be made to the qualities of the 
system: making it more responsive, increasing its availability, and so forth. 
The capacity of the system may also change. Accommodating an increasing 
number of simultaneous users is a frequent requirement. Finally, changes 
may happen to accommodate new technology of some sort, the most 
common of which is porting the system to a different type of computer or 
communication network.
■
■Artifact. This portion specifies what is to be changed: specific components 
or modules, the system’s platform, its user interface, its environment, or 
another system with which it interoperates.
■
■Environment. This portion specifies when the change can be made: design 
time, compile time, build time, initiation time, or runtime. 
■
■Response. Make the change, test it, and deploy it. 
■
■Response measure. All of the possible responses take time and cost money; 
time and money are the most common response measures. Although both 
sound simple to measure, they aren’t. You can measure calendar time or 
staff time. But do you measure the time it takes for the change to wind its 
way through configuration control boards and approval authorities (some 
of whom may be outside your organization), or merely the time it takes 
your engineers to make the change? Cost usually means direct outlay, but 
it might also include opportunity cost of having your staff work on changes 
instead of other tasks. Other measures include the extent of the change 
(number of modules or other artifacts affected) or the number of new 
defects introduced by the change, or the effect on other quality attributes. If 
the change is being made by a user, you may wish to measure the efficacy 
of the change mechanisms provided, which somewhat overlaps with 
measures of usability (see Chapter 11). 
