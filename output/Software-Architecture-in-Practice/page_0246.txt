13.2  Overview of the Patterns Catalog
225
Table 13.7  Service-Oriented Architecture Pattern Solution
Overview
Computation is achieved by a set of cooperating components 
that provide and/or consume services over a network. The 
computation is often described using a workflow language.
Elements
Components:
■
■
Service providers, which provide one or more services 
through published interfaces. Concerns are often tied to 
the chosen implementation technology, and include perfor-
mance, authorization constraints, availability, and cost. In 
some cases these properties are specified in a service-level 
agreement.
■
■
Service consumers, which invoke services directly or through 
an intermediary.
■
■
Service providers may also be service consumers.
■
■
ESB, which is an intermediary element that can route and 
transform messages between service providers and consum-
ers.
■
■
Registry of services, which may be used by providers to 
register their services and by consumers to discover services 
at runtime.
■
■
Orchestration server, which coordinates the interactions 
between service consumers and providers based on 
languages for business processes and workflows.
Connectors:
■
■
SOAP connector, which uses the SOAP protocol for 
synchronous communication between web services, typically 
over HTTP. 
■
■
REST connector, which relies on the basic request/reply 
operations of the HTTP protocol.
■
■
Asynchronous messaging connector, which uses a 
messaging system to offer point-to-point or publish-subscribe 
asynchronous message exchanges.
Relations
Attachment of the different kinds of components available to the 
respective connectors
Constraints
Service consumers are connected to service providers, but 
intermediary components (e.g., ESB, registry, orchestration 
server) may be used. 
Weaknesses
SOA-based systems are typically complex to build.
You don’t control the evolution of independent services.
There is a performance overhead associated with the 
middleware, and services may be performance bottlenecks, and 
typically do not provide performance guarantees.
