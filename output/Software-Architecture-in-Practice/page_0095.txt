74 
Part Two  Quality Attributes	
4—Understanding Quality Attributes
■
■Identifying the elements of the system that must coordinate, or are prohib-
ited from coordinating.
■
■Determining the properties of the coordination, such as timeliness, cur-
rency, completeness, correctness, and consistency.
■
■Choosing the communication mechanisms (between systems, between our 
system and external entities, between elements of our system) that realize 
those properties. Important properties of the communication mechanisms 
include stateful versus stateless, synchronous versus asynchronous, guar-
anteed versus nonguaranteed delivery, and performance-related properties 
such as throughput and latency.
Data Model
Every system must represent artifacts of system-wide interest—data—in some 
internal fashion. The collection of those representations and how to interpret 
them is referred to as the data model. Decisions about the data model include the 
following:
■
■Choosing the major data abstractions, their operations, and their properties. 
This includes determining how the data items are created, initialized, ac-
cessed, persisted, manipulated, translated, and destroyed.
■
■Compiling metadata needed for consistent interpretation of the data.
■
■Organizing the data. This includes determining whether the data is going 
to be kept in a relational database, a collection of objects, or both. If both, 
then the mapping between the two different locations of the data must be 
determined.
Management of Resources
An architect may need to arbitrate the use of shared resources in the architec-
ture. These include hard resources (e.g., CPU, memory, battery, hardware buffers, 
system clock, I/O ports) and soft resources (e.g., system locks, software buffers, 
thread pools, and non-thread-safe code). 
Decisions for management of resources include the following:
■
■Identifying the resources that must be managed and determining the limits 
for each.
■
■Determining which system element(s) manage each resource. 
■
■Determining how resources are shared and the arbitration strategies em-
ployed when there is contention.
■
■Determining the impact of saturation on different resources. For example, 
as a CPU becomes more heavily loaded, performance usually just degrades 
fairly steadily. On the other hand, when you start to run out of memory, at 
