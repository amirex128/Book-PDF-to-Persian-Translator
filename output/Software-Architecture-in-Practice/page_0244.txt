13.2  Overview of the Patterns Catalog
223
The elements in this pattern include service providers and service consum-
ers, which in practice can take different forms, from JavaScript running on a 
web browser to CICS transactions running on a mainframe. In addition to the 
service provider and service consumer components, an SOA application may 
use specialized components that act as intermediaries and provide infrastruc-
ture services:
■
■Service invocation can be mediated by an enterprise service bus (ESB). An 
ESB routes messages between service consumers and service providers. In 
addition, an ESB can convert messages from one protocol or technology to 
another, perform various data transformations (e.g., format, content, split-
ting, merging), perform security checks, and manage transactions. Using an 
ESB promotes interoperability, security, and modifiability. Of course, com-
municating through an ESB adds overhead thereby lowering performance, 
and introduces an additional point of failure. When an ESB is not in place, 
service providers and consumers communicate with each other in a point-
to-point fashion.
■
■To improve the independence of service providers, a service registry can be 
used in SOA architectures. The registry is a component that allows services 
to be registered at runtime. This enables runtime discovery of services, 
which increases system modifiability by hiding the location and identity of 
the service provider. A registry can even permit multiple live versions of the 
same service.
■
■An orchestration server (or orchestration engine) orchestrates the interac-
tion among various service consumers and providers in an SOA system. It 
executes scripts upon the occurrence of a specific event (e.g., a purchase 
order request arrived). Applications with well-defined business processes or 
workflows that involve interactions with distributed components or systems 
gain in modifiability, interoperability, and reliability by using an orches-
tration server. Many commercially available orchestration servers support 
various workflow or business process language standards.
The basic types of connectors used in SOA are these: 
■
■SOAP. The standard protocol for communication in the web services tech-
nology. Service consumers and providers interact by exchanging request/
reply XML messages typically on top of HTTP.
■
■Representational State Transfer (REST). A service consumer sends non-
blocking HTTP requests. These requests rely on the four basic HTTP com-
mands (POST, GET, PUT, DELETE) to tell the service provider to create, 
retrieve, update, or delete a resource.
■
■Asynchronous messaging, a “fire-and-forget” information exchange. 
Participants do not have to wait for an acknowledgment of receipt, because 
the infrastructure is assumed to have delivered the message successfully. 
The messaging connector can be point-to-point or publish-subscribe.
