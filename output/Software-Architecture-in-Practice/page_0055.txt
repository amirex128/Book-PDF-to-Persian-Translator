34 
Part One  Introduction	
2—Why Is Software Architecture Important?
infrastructure—how the elements initialize, communicate, share data, access re-
sources, report errors, log activity, and so forth—is built before much of the sys-
tem’s functionality has been created. (The two can go hand in hand: build a little 
infrastructure to support a little end-to-end functionality; repeat until done.) 
For example, systems built as plug-in architectures are skeletal systems: the 
plug-ins provide the actual functionality. This approach aids the development 
process because the system is executable early in the product’s life cycle. The 
fidelity of the system increases as stubs are instantiated, or prototype parts are 
replaced with complete versions of these parts of the software. In some cases the 
prototype parts can be low-fidelity versions of the final functionality, or they can 
be surrogates that consume and produce data at the appropriate rates but do little 
else. Among other things, this approach allows potential performance problems 
to be identified early in the product’s life cycle.
These benefits reduce the potential risk in the project. Furthermore, if the ar-
chitecture is part of a family of related systems, the cost of creating a framework 
for prototyping can be distributed over the development of many systems.
2.9  Improving Cost and Schedule Estimates
Cost and schedule estimates are important tools for the project manager both to 
acquire the necessary resources and to monitor progress on the project, to know 
if and when a project is in trouble. One of the duties of an architect is to help 
the project manager create cost and schedule estimates early in the project life 
cycle. Although top-down estimates are useful for setting goals and apportion-
ing budgets, cost estimations that are based on a bottom-up understanding of the 
system’s pieces are typically more accurate than those that are based purely on 
top-down system knowledge. 
As we have said, the organizational and work-breakdown structure of a proj-
ect is almost always based on its architecture. Each team or individual responsi-
ble for a work item will be able to make more-accurate estimates for their piece 
than a project manager and will feel more ownership in making the estimates 
come true. But the best cost and schedule estimates will typically emerge from a 
consensus between the top-down estimates (created by the architect and project 
manager) and the bottom-up estimates (created by the developers). The discus-
sion and negotiation that results from this process creates a far more accurate 
estimate than either approach by itself.
It helps if the requirements for a system have been reviewed and validated. 
The more up-front knowledge you have about the scope, the more accurate the 
cost and schedule estimates will be.
Chapter 22 delves into the use of architecture in project management.
