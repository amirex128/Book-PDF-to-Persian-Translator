Some databases support multi-leader configurations by default, but it is also often
implemented with external tools, such as Tungsten Replicator for MySQL [26], BDR
for PostgreSQL [27], and GoldenGate for Oracle [19].
Although multi-leader replication has advantages, it also has a big downside: the
same data may be concurrently modified in two different datacenters, and those write
conflicts must be resolved (indicated as “conflict resolution” in Figure 5-6). We will
discuss this issue in “Handling Write Conflicts” on page 171.
As multi-leader replication is a somewhat retrofitted feature in many databases, there
are often subtle configuration pitfalls and surprising interactions with other database
features. For example, autoincrementing keys, triggers, and integrity constraints can
be problematic. For this reason, multi-leader replication is often considered danger‐
ous territory that should be avoided if possible [28].
Clients with offline operation
Another situation in which multi-leader replication is appropriate is if you have an
application that needs to continue to work while it is disconnected from the internet.
For example, consider the calendar apps on your mobile phone, your laptop, and
other devices. You need to be able to see your meetings (make read requests) and
enter new meetings (make write requests) at any time, regardless of whether your
device currently has an internet connection. If you make any changes while you are
offline, they need to be synced with a server and your other devices when the device
is next online.
In this case, every device has a local database that acts as a leader (it accepts write
requests), and there is an asynchronous multi-leader replication process (sync)
between the replicas of your calendar on all of your devices. The replication lag may
be hours or even days, depending on when you have internet access available.
From an architectural point of view, this setup is essentially the same as multi-leader
replication between datacenters, taken to the extreme: each device is a “datacenter,”
and the network connection between them is extremely unreliable. As the rich his‐
tory of broken calendar sync implementations demonstrates, multi-leader replication
is a tricky thing to get right.
There are tools that aim to make this kind of multi-leader configuration easier. For
example, CouchDB is designed for this mode of operation [29].
Collaborative editing
Real-time collaborative editing applications allow several people to edit a document
simultaneously. For example, Etherpad [30] and Google Docs [31] allow multiple
people to concurrently edit a text document or spreadsheet (the algorithm is briefly
discussed in “Automatic Conflict Resolution” on page 174).
170 
| 
Chapter 5: Replication
