reduced by changing allocation patterns or tuning GC settings [66], we must
assume the worst if we want to offer robust guarantees.
• In virtualized environments, a virtual machine can be suspended (pausing the
execution of all processes and saving the contents of memory to disk) and
resumed (restoring the contents of memory and continuing execution). This
pause can occur at any time in a process’s execution and can last for an arbitrary
length of time. This feature is sometimes used for live migration of virtual
machines from one host to another without a reboot, in which case the length of
the pause depends on the rate at which processes are writing to memory [67].
• On end-user devices such as laptops, execution may also be suspended and
resumed arbitrarily, e.g., when the user closes the lid of their laptop.
• When the operating system context-switches to another thread, or when the
hypervisor switches to a different virtual machine (when running in a virtual
machine), the currently running thread can be paused at any arbitrary point in
the code. In the case of a virtual machine, the CPU time spent in other virtual
machines is known as steal time. If the machine is under heavy load—i.e., if there
is a long queue of threads waiting to run—it may take some time before the
paused thread gets to run again.
• If the application performs synchronous disk access, a thread may be paused
waiting for a slow disk I/O operation to complete [68]. In many languages, disk
access can happen surprisingly, even if the code doesn’t explicitly mention file
access—for example, the Java classloader lazily loads class files when they are first
used, which could happen at any time in the program execution. I/O pauses and
GC pauses may even conspire to combine their delays [69]. If the disk is actually
a network filesystem or network block device (such as Amazon’s EBS), the I/O
latency is further subject to the variability of network delays [29].
• If the operating system is configured to allow swapping to disk (paging), a simple
memory access may result in a page fault that requires a page from disk to be
loaded into memory. The thread is paused while this slow I/O operation takes
place. If memory pressure is high, this may in turn require a different page to be
swapped out to disk. In extreme circumstances, the operating system may spend
most of its time swapping pages in and out of memory and getting little actual
work done (this is known as thrashing). To avoid this problem, paging is often
disabled on server machines (if you would rather kill a process to free up mem‐
ory than risk thrashing).
• A Unix process can be paused by sending it the SIGSTOP signal, for example by
pressing Ctrl-Z in a shell. This signal immediately stops the process from getting
any more CPU cycles until it is resumed with SIGCONT, at which point it contin‐
ues running where it left off. Even if your environment does not normally use
SIGSTOP, it might be sent accidentally by an operations engineer.
Unreliable Clocks 
| 
297
