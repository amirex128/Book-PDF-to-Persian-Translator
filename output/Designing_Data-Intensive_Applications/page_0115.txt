In the rest of this chapter we will look at storage engines that are optimized for ana‐
lytics instead.
The divergence between OLTP databases and data warehouses
The data model of a data warehouse is most commonly relational, because SQL is
generally a good fit for analytic queries. There are many graphical data analysis tools
that generate SQL queries, visualize the results, and allow analysts to explore the data
(through operations such as drill-down and slicing and dicing).
On the surface, a data warehouse and a relational OLTP database look similar,
because they both have a SQL query interface. However, the internals of the systems
can look quite different, because they are optimized for very different query patterns.
Many database vendors now focus on supporting either transaction processing or
analytics workloads, but not both.
Some databases, such as Microsoft SQL Server and SAP HANA, have support for
transaction processing and data warehousing in the same product. However, they are
increasingly becoming two separate storage and query engines, which happen to be
accessible through a common SQL interface [49, 50, 51].
Data warehouse vendors such as Teradata, Vertica, SAP HANA, and ParAccel typi‐
cally sell their systems under expensive commercial licenses. Amazon RedShift is a
hosted version of ParAccel. More recently, a plethora of open source SQL-on-
Hadoop projects have emerged; they are young but aiming to compete with commer‐
cial data warehouse systems. These include Apache Hive, Spark SQL, Cloudera
Impala, Facebook Presto, Apache Tajo, and Apache Drill [52, 53]. Some of them are
based on ideas from Google’s Dremel [54].
Stars and Snowflakes: Schemas for Analytics
As explored in Chapter 2, a wide range of different data models are used in the realm
of transaction processing, depending on the needs of the application. On the other
hand, in analytics, there is much less diversity of data models. Many data warehouses
are used in a fairly formulaic style, known as a star schema (also known as dimen‐
sional modeling [55]).
The example schema in Figure 3-9 shows a data warehouse that might be found at a
grocery retailer. At the center of the schema is a so-called fact table (in this example,
it is called fact_sales). Each row of the fact table represents an event that occurred
at a particular time (here, each row represents a customer’s purchase of a product). If
we were analyzing website traffic rather than retail sales, each row might represent a
page view or a click by a user.
Transaction Processing or Analytics? 
| 
93
