Fan-out
Each message is delivered to all of the consumers. Fan-out allows several inde‐
pendent consumers to each “tune in” to the same broadcast of messages, without
affecting each other—the streaming equivalent of having several different batch
jobs that read the same input file. (This feature is provided by topic subscriptions
in JMS, and exchange bindings in AMQP.)
Figure 11-1. (a) Load balancing: sharing the work of consuming a topic among con‐
sumers; (b) fan-out: delivering each message to multiple consumers.
The two patterns can be combined: for example, two separate groups of consumers
may each subscribe to a topic, such that each group collectively receives all messages,
but within each group only one of the nodes receives each message.
Acknowledgments and redelivery
Consumers may crash at any time, so it could happen that a broker delivers a mes‐
sage to a consumer but the consumer never processes it, or only partially processes it
before crashing. In order to ensure that the message is not lost, message brokers use
acknowledgments: a client must explicitly tell the broker when it has finished process‐
ing a message so that the broker can remove it from the queue.
If the connection to a client is closed or times out without the broker receiving an
acknowledgment, it assumes that the message was not processed, and therefore it
delivers the message again to another consumer. (Note that it could happen that the
message actually was fully processed, but the acknowledgment was lost in the net‐
work. Handling this case requires an atomic commit protocol, as discussed in “Dis‐
tributed Transactions in Practice” on page 360.)
Transmitting Event Streams 
| 
445
