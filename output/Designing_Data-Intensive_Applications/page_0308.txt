queueing in the network, although it can still suffer from delays due to link conges‐
tion [36]. With careful use of quality of service (QoS, prioritization and scheduling of
packets) and admission control (rate-limiting senders), it is possible to emulate circuit
switching on packet networks, or provide statistically bounded delay [25, 32].
Latency and Resource Utilization
More generally, you can think of variable delays as a consequence of dynamic
resource partitioning.
Say you have a wire between two telephone switches that can carry up to 10,000
simultaneous calls. Each circuit that is switched over this wire occupies one of those
call slots. Thus, you can think of the wire as a resource that can be shared by up to
10,000 simultaneous users. The resource is divided up in a static way: even if you’re
the only call on the wire right now, and all other 9,999 slots are unused, your circuit is
still allocated the same fixed amount of bandwidth as when the wire is fully utilized.
By contrast, the internet shares network bandwidth dynamically. Senders push and
jostle with each other to get their packets over the wire as quickly as possible, and the
network switches decide which packet to send (i.e., the bandwidth allocation) from
one moment to the next. This approach has the downside of queueing, but the advan‐
tage is that it maximizes utilization of the wire. The wire has a fixed cost, so if you
utilize it better, each byte you send over the wire is cheaper.
A similar situation arises with CPUs: if you share each CPU core dynamically
between several threads, one thread sometimes has to wait in the operating system’s
run queue while another thread is running, so a thread can be paused for varying
lengths of time. However, this utilizes the hardware better than if you allocated a
static number of CPU cycles to each thread (see “Response time guarantees” on page
298). Better hardware utilization is also a significant motivation for using virtual
machines.
Latency guarantees are achievable in certain environments, if resources are statically
partitioned (e.g., dedicated hardware and exclusive bandwidth allocations). However,
it comes at the cost of reduced utilization—in other words, it is more expensive. On
the other hand, multi-tenancy with dynamic resource partitioning provides better
utilization, so it is cheaper, but it has the downside of variable delays.
Variable delays in networks are not a law of nature, but simply the result of a cost/
benefit trade-off. 
286 
| 
Chapter 8: The Trouble with Distributed Systems
