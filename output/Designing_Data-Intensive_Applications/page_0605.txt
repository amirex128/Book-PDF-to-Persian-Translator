Rubygems (package manager), 428
rules (Datalog), 61
S
safety and liveness properties, 308
in consensus algorithms, 366
in transactions, 222
sagas (see compensating transactions)
Samza (stream processor), 466, 467
fault tolerance, 479
streaming SQL support, 466
sandboxes, 9
SAP HANA (database), 93
scalability, 10-18, 489
approaches for coping with load, 17
defined, 22
describing load, 11
describing performance, 13
partitioning and, 199
replication and, 161
scaling up versus scaling out, 146
scaling out, 17, 146
(see also shared-nothing architecture)
scaling up, 17, 146
scatter/gather approach, querying partitioned
databases, 207
SCD (slowly changing dimension), 476
schema-on-read, 39
comparison to evolvable schema, 128
in distributed filesystems, 415
schema-on-write, 39
schemaless databases (see schema-on-read)
schemas, 557
Avro, 122-127
reader determining writerâ€™s schema, 125
schema evolution, 123
dynamically generated, 126
evolution of, 496
affecting application code, 111
compatibility checking, 126
in databases, 129-131
in message-passing, 138
in service calls, 136
flexibility in document model, 39
for analytics, 93-95
for JSON and XML, 115
merits of, 127
schema migration on railways, 496
Thrift and Protocol Buffers, 117-121
schema evolution, 120
traditional approach to design, fallacy in,
462
searches
building search indexes in batch processes,
411
k-nearest neighbors, 429
on streams, 467
partitioned secondary indexes, 206
secondaries (see leader-based replication)
secondary indexes, 85, 557
partitioning, 206-209, 217
document-partitioned, 206
index maintenance, 495
term-partitioned, 208
problems with dual writes, 452, 491
updating, transaction isolation and, 231
secondary sorts, 405
sed (Unix tool), 392
self-describing files, 127
self-joins, 480
self-validating systems, 530
semantic web, 57
semi-synchronous replication, 154
sequence number ordering, 343-348
generators, 294, 344
insufficiency for enforcing constraints, 347
Lamport timestamps, 345
use of timestamps, 291, 295, 345
sequential consistency, 351
serializability, 225, 233, 251-266, 557
linearizability versus, 329
pessimistic versus optimistic concurrency
control, 261
serial execution, 252-256
partitioning, 255
using stored procedures, 253, 349
serializable snapshot isolation (SSI),
261-266
detecting stale MVCC reads, 263
detecting writes that affect prior reads,
264
distributed execution, 265, 364
performance of SSI, 265
preventing write skew, 262-265
two-phase locking (2PL), 257-261
index-range locks, 260
performance, 258
Serializable (Java), 113
Index 
| 
583
