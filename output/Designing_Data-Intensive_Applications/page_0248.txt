Figure 7-1. A race condition between two clients concurrently incrementing a counter.
However, in practice, serializable isolation is rarely used, because it carries a perfor‐
mance penalty. Some popular databases, such as Oracle 11g, don’t even implement it.
In Oracle there is an isolation level called “serializable,” but it actually implements
something called snapshot isolation, which is a weaker guarantee than serializability
[8, 11]. We will explore snapshot isolation and other forms of isolation in “Weak Iso‐
lation Levels” on page 233.
Durability
The purpose of a database system is to provide a safe place where data can be stored
without fear of losing it. Durability is the promise that once a transaction has com‐
mitted successfully, any data it has written will not be forgotten, even if there is a
hardware fault or the database crashes.
In a single-node database, durability typically means that the data has been written to
nonvolatile storage such as a hard drive or SSD. It usually also involves a write-ahead
log or similar (see “Making B-trees reliable” on page 82), which allows recovery in the
event that the data structures on disk are corrupted. In a replicated database, durabil‐
ity may mean that the data has been successfully copied to some number of nodes. In
order to provide a durability guarantee, a database must wait until these writes or
replications are complete before reporting a transaction as successfully committed.
As discussed in “Reliability” on page 6, perfect durability does not exist: if all your
hard disks and all your backups are destroyed at the same time, there’s obviously
nothing your database can do to save you.
226 
| 
Chapter 7: Transactions
