accessible if a node becomes unreachable.
See Chapter 5.
schema
A description of the structure of some
data, including its fields and datatypes.
Whether some data conforms to a schema
can be checked at various points in the
data’s lifetime (see “Schema flexibility in
the document model” on page 39), and a
schema can change over time (see Chap‐
ter 4).
secondary index
An additional data structure that is main‐
tained alongside the primary data storage
and which allows you to efficiently search
for records that match a certain kind of
condition. See “Other Indexing Struc‐
tures” on page 85 and “Partitioning and
Secondary Indexes” on page 206.
serializable
A guarantee that if several transactions
execute concurrently, they behave the
same as if they had executed one at a time,
in some serial order. See “Serializability”
on page 251.
shared-nothing
An architecture in which independent
nodes—each with their own CPUs, mem‐
ory, and disks—are connected via a con‐
ventional network, in contrast to shared-
memory or shared-disk architectures. See
the introduction to Part II.
skew
1. Imbalanced load across partitions, such
that some partitions have lots of requests
or data, and others have much less. Also
known as hot spots. See “Skewed Work‐
loads and Relieving Hot Spots” on page
205 and “Handling skew” on page 407.
2. A timing anomaly that causes events to
appear in an unexpected, nonsequential
order. See the discussions of read skew in
“Snapshot Isolation and Repeatable Read”
on page 237, write skew in “Write Skew
and Phantoms” on page 246, and clock
skew in “Timestamps for ordering events”
on page 291.
split brain
A scenario in which two nodes simultane‐
ously believe themselves to be the leader,
and which may cause system guarantees
to be violated. See “Handling Node Out‐
ages” on page 156 and “The Truth Is
Defined by the Majority” on page 300.
stored procedure
A way of encoding the logic of a transac‐
tion such that it can be entirely executed
on a database server, without communi‐
cating back and forth with a client during
the transaction. See “Actual Serial Execu‐
tion” on page 252.
stream process
A continually running computation that
consumes a never-ending stream of events
as input, and derives some output from it.
See Chapter 11.
synchronous
The opposite of asynchronous.
system of record
A system that holds the primary, authori‐
tative version of some data, also known as
the source of truth. Changes are first writ‐
ten here, and other datasets may be
derived from the system of record. See the
introduction to Part III.
timeout
One of the simplest ways of detecting a
fault, namely by observing the lack of a
response within some amount of time.
However, it is impossible to know
whether a timeout is due to a problem
with the remote node, or an issue in the
network. See “Timeouts and Unbounded
Delays” on page 281.
total order
A way of comparing things (e.g., time‐
stamps) that allows you to always say
which one of two things is greater and
which one is lesser. An ordering in which
total order
Glossary 
| 
557
