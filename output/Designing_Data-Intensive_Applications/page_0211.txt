Figure 5-13. Capturing causal dependencies between two clients concurrently editing a
shopping cart.
The dataflow between the operations in Figure 5-13 is illustrated graphically in
Figure 5-14. The arrows indicate which operation happened before which other oper‐
ation, in the sense that the later operation knew about or depended on the earlier one.
In this example, the clients are never fully up to date with the data on the server, since
there is always another operation going on concurrently. But old versions of the value
do get overwritten eventually, and no writes are lost.
Figure 5-14. Graph of causal dependencies in Figure 5-13.
Note that the server can determine whether two operations are concurrent by looking
at the version numbers—it does not need to interpret the value itself (so the value
could be any data structure). The algorithm works as follows:
Leaderless Replication 
| 
189
