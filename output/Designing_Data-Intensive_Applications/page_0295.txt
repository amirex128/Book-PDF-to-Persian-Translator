i. With one exception: we will assume that faults are non-Byzantine (see “Byzantine Faults” on page 304).
CHAPTER 8
The Trouble with Distributed Systems
Hey I just met you
The network’s laggy
But here’s my data
So store it maybe
—Kyle Kingsbury, Carly Rae Jepsen and the Perils of Network Partitions (2013)
A recurring theme in the last few chapters has been how systems handle things going
wrong. For example, we discussed replica failover (“Handling Node Outages” on
page 156), replication lag (“Problems with Replication Lag” on page 161), and con‐
currency control for transactions (“Weak Isolation Levels” on page 233). As we come
to understand various edge cases that can occur in real systems, we get better at han‐
dling them.
However, even though we have talked a lot about faults, the last few chapters have
still been too optimistic. The reality is even darker. We will now turn our pessimism
to the maximum and assume that anything that can go wrong will go wrong.i (Expe‐
rienced systems operators will tell you that is a reasonable assumption. If you ask
nicely, they might tell you some frightening stories while nursing their scars of past
battles.)
Working with distributed systems is fundamentally different from writing software
on a single computer—and the main difference is that there are lots of new and excit‐
ing ways for things to go wrong [1, 2]. In this chapter, we will get a taste of the prob‐
lems that arise in practice, and an understanding of the things we can and cannot rely
on.
273
