viii. It is possible to make physical clock timestamps consistent with causality: in “Synchronized clocks for
global snapshots” on page 294 we discussed Google’s Spanner, which estimates the expected clock skew and
waits out the uncertainty interval before committing a write. This method ensures that a causally later trans‐
action is given a greater timestamp. However, most clocks cannot provide the required uncertainty metric.
the block from 1,001 to 2,000. Then each node can independently assign
sequence numbers from its block, and allocate a new block when its supply of
sequence numbers begins to run low.
These three options all perform better and are more scalable than pushing all opera‐
tions through a single leader that increments a counter. They generate a unique,
approximately increasing sequence number for each operation. However, they all
have a problem: the sequence numbers they generate are not consistent with causality.
The causality problems occur because these sequence number generators do not cor‐
rectly capture the ordering of operations across different nodes:
• Each node may process a different number of operations per second. Thus, if one
node generates even numbers and the other generates odd numbers, the counter
for even numbers may lag behind the counter for odd numbers, or vice versa. If
you have an odd-numbered operation and an even-numbered operation, you
cannot accurately tell which one causally happened first.
• Timestamps from physical clocks are subject to clock skew, which can make
them inconsistent with causality. For example, see Figure 8-3, which shows a sce‐
nario in which an operation that happened causally later was actually assigned a
lower timestamp.viii
• In the case of the block allocator, one operation may be given a sequence number
in the range from 1,001 to 2,000, and a causally later operation may be given a
number in the range from 1 to 1,000. Here, again, the sequence number is incon‐
sistent with causality.
Lamport timestamps
Although the three sequence number generators just described are inconsistent with
causality, there is actually a simple method for generating sequence numbers that is
consistent with causality. It is called a Lamport timestamp, proposed in 1978 by Leslie
Lamport [56], in what is now one of the most-cited papers in the field of distributed
systems.
The use of Lamport timestamps is illustrated in Figure 9-8. Each node has a unique
identifier, and each node keeps a counter of the number of operations it has pro‐
cessed. The Lamport timestamp is then simply a pair of (counter, node ID). Two
Ordering Guarantees 
| 
345
