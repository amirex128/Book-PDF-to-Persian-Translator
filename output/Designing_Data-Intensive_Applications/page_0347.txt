Figure 9-1 shows an example of a nonlinearizable sports website [9]. Alice and Bob
are sitting in the same room, both checking their phones to see the outcome of the
2014 FIFA World Cup final. Just after the final score is announced, Alice refreshes
the page, sees the winner announced, and excitedly tells Bob about it. Bob incredu‐
lously hits reload on his own phone, but his request goes to a database replica that is
lagging, and so his phone shows that the game is still ongoing.
If Alice and Bob had hit reload at the same time, it would have been less surprising if
they had gotten two different query results, because they wouldn’t know at exactly
what time their respective requests were processed by the server. However, Bob
knows that he hit the reload button (initiated his query) after he heard Alice exclaim
the final score, and therefore he expects his query result to be at least as recent as
Alice’s. The fact that his query returned a stale result is a violation of linearizability.
What Makes a System Linearizable?
The basic idea behind linearizability is simple: to make a system appear as if there is
only a single copy of the data. However, nailing down precisely what that means
actually requires some care. In order to understand linearizability better, let’s look at
some more examples.
Figure 9-2 shows three clients concurrently reading and writing the same key x in a
linearizable database. In the distributed systems literature, x is called a register—in
practice, it could be one key in a key-value store, one row in a relational database, or
one document in a document database, for example.
Figure 9-2. If a read request is concurrent with a write request, it may return either the
old or the new value.
For simplicity, Figure 9-2 shows only the requests from the clients’ point of view, not
the internals of the database. Each bar is a request made by a client, where the start of
a bar is the time when the request was sent, and the end of a bar is when the response
was received by the client. Due to variable network delays, a client doesn’t know
Linearizability 
| 
325
