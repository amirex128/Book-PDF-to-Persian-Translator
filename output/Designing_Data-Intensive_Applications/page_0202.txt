In Dynamo-style databases, the parameters n, w, and r are typically configurable. A
common choice is to make n an odd number (typically 3 or 5) and to set w = r =
(n + 1) / 2 (rounded up). However, you can vary the numbers as you see fit. For
example, a workload with few writes and many reads may benefit from setting w = n
and r = 1. This makes reads faster, but has the disadvantage that just one failed node
causes all database writes to fail.
There may be more than n nodes in the cluster, but any given value
is stored only on n nodes. This allows the dataset to be partitioned,
supporting datasets that are larger than you can fit on one node.
We will return to partitioning in Chapter 6.
The quorum condition, w + r > n, allows the system to tolerate unavailable nodes as
follows:
• If w < n, we can still process writes if a node is unavailable.
• If r < n, we can still process reads if a node is unavailable.
• With n = 3, w = 2, r = 2 we can tolerate one unavailable node.
• With n = 5, w = 3, r = 3 we can tolerate two unavailable nodes. This case is illus‐
trated in Figure 5-11.
• Normally, reads and writes are always sent to all n replicas in parallel. The
parameters w and r determine how many nodes we wait for—i.e., how many of
the n nodes need to report success before we consider the read or write to be suc‐
cessful.
Figure 5-11. If w + r > n, at least one of the r replicas you read from must have seen the
most recent successful write.
180 
| 
Chapter 5: Replication
