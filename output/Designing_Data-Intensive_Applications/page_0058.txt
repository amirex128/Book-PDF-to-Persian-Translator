Are Document Databases Repeating History?
While many-to-many relationships and joins are routinely used in relational data‐
bases, document databases and NoSQL reopened the debate on how best to represent
such relationships in a database. This debate is much older than NoSQL—in fact, it
goes back to the very earliest computerized database systems.
The most popular database for business data processing in the 1970s was IBM’s Infor‐
mation Management System (IMS), originally developed for stock-keeping in the
Apollo space program and first commercially released in 1968 [13]. It is still in use
and maintained today, running on OS/390 on IBM mainframes [14].
The design of IMS used a fairly simple data model called the hierarchical model,
which has some remarkable similarities to the JSON model used by document data‐
bases [2]. It represented all data as a tree of records nested within records, much like
the JSON structure of Figure 2-2.
Like document databases, IMS worked well for one-to-many relationships, but it
made many-to-many relationships difficult, and it didn’t support joins. Developers
had to decide whether to duplicate (denormalize) data or to manually resolve refer‐
ences from one record to another. These problems of the 1960s and ’70s were very
much like the problems that developers are running into with document databases
today [15].
Various solutions were proposed to solve the limitations of the hierarchical model.
The two most prominent were the relational model (which became SQL, and took
over the world) and the network model (which initially had a large following but
eventually faded into obscurity). The “great debate” between these two camps lasted
for much of the 1970s [2].
Since the problem that the two models were solving is still so relevant today, it’s
worth briefly revisiting this debate in today’s light.
The network model
The network model was standardized by a committee called the Conference on Data
Systems Languages (CODASYL) and implemented by several different database ven‐
dors; it is also known as the CODASYL model [16].
The CODASYL model was a generalization of the hierarchical model. In the tree
structure of the hierarchical model, every record has exactly one parent; in the net‐
work model, a record could have multiple parents. For example, there could be one
record for the "Greater Seattle Area" region, and every user who lived in that
region could be linked to it. This allowed many-to-one and many-to-many relation‐
ships to be modeled.
36 
| 
Chapter 2: Data Models and Query Languages
