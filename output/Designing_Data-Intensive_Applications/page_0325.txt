Fencing tokens
When using a lock or lease to protect access to some resource, such as the file storage
in Figure 8-4, we need to ensure that a node that is under a false belief of being “the
chosen one” cannot disrupt the rest of the system. A fairly simple technique that ach‐
ieves this goal is called fencing, and is illustrated in Figure 8-5.
Figure 8-5. Making access to storage safe by allowing writes only in the order of increas‐
ing fencing tokens.
Let’s assume that every time the lock server grants a lock or lease, it also returns a
fencing token, which is a number that increases every time a lock is granted (e.g.,
incremented by the lock service). We can then require that every time a client sends a
write request to the storage service, it must include its current fencing token.
In Figure 8-5, client 1 acquires the lease with a token of 33, but then it goes into a
long pause and the lease expires. Client 2 acquires the lease with a token of 34 (the
number always increases) and then sends its write request to the storage service,
including the token of 34. Later, client 1 comes back to life and sends its write to the
storage service, including its token value 33. However, the storage server remembers
that it has already processed a write with a higher token number (34), and so it rejects
the request with token 33.
If ZooKeeper is used as lock service, the transaction ID zxid or the node version
cversion can be used as fencing token. Since they are guaranteed to be monotoni‐
cally increasing, they have the required properties [74].
Note that this mechanism requires the resource itself to take an active role in check‐
ing tokens by rejecting any writes with an older token than one that has already been
processed—it is not sufficient to rely on clients checking their lock status themselves.
For resources that do not explicitly support fencing tokens, you might still be able
work around the limitation (for example, in the case of a file storage service you
could include the fencing token in the filename). However, some kind of check is
necessary to avoid processing requests outside of the lock’s protection.
Knowledge, Truth, and Lies 
| 
303
