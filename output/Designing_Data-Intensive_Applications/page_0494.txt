Types of windows
Once you know how the timestamp of an event should be determined, the next step
is to decide how windows over time periods should be defined. The window can then
be used for aggregations, for example to count events, or to calculate the average of
values within the window. Several types of windows are in common use [79, 83]:
Tumbling window
A tumbling window has a fixed length, and every event belongs to exactly one
window. For example, if you have a 1-minute tumbling window, all the events
with timestamps between 10:03:00 and 10:03:59 are grouped into one window,
events between 10:04:00 and 10:04:59 into the next window, and so on. You
could implement a 1-minute tumbling window by taking each event timestamp
and rounding it down to the nearest minute to determine the window that it
belongs to.
Hopping window
A hopping window also has a fixed length, but allows windows to overlap in
order to provide some smoothing. For example, a 5-minute window with a hop
size of 1 minute would contain the events between 10:03:00 and 10:07:59, then
the next window would cover events between 10:04:00 and 10:08:59, and so on.
You can implement this hopping window by first calculating 1-minute tumbling
windows, and then aggregating over several adjacent windows.
Sliding window
A sliding window contains all the events that occur within some interval of each
other. For example, a 5-minute sliding window would cover events at 10:03:39
and 10:08:12, because they are less than 5 minutes apart (note that tumbling and
hopping 5-minute windows would not have put these two events in the same
window, as they use fixed boundaries). A sliding window can be implemented by
keeping a buffer of events sorted by time and removing old events when they
expire from the window.
Session window
Unlike the other window types, a session window has no fixed duration. Instead,
it is defined by grouping together all events for the same user that occur closely
together in time, and the window ends when the user has been inactive for some
time (for example, if there have been no events for 30 minutes). Sessionization is
a common requirement for website analytics (see “GROUP BY” on page 406). 
Stream Joins
In Chapter 10 we discussed how batch jobs can join datasets by key, and how such
joins form an important part of data pipelines. Since stream processing generalizes
472 
| 
Chapter 11: Stream Processing
