databases, different partitions operate independently, so there is no global ordering of
writes: when a user reads from the database, they may see some parts of the database
in an older state and some in a newer state.
One solution is to make sure that any writes that are causally related to each other are
written to the same partition—but in some applications that cannot be done effi‐
ciently. There are also algorithms that explicitly keep track of causal dependencies, a
topic that we will return to in “The “happens-before” relationship and concurrency”
on page 186. 
Solutions for Replication Lag
When working with an eventually consistent system, it is worth thinking about how
the application behaves if the replication lag increases to several minutes or even
hours. If the answer is “no problem,” that’s great. However, if the result is a bad expe‐
rience for users, it’s important to design the system to provide a stronger guarantee,
such as read-after-write. Pretending that replication is synchronous when in fact it is
asynchronous is a recipe for problems down the line.
As discussed earlier, there are ways in which an application can provide a stronger
guarantee than the underlying database—for example, by performing certain kinds of
reads on the leader. However, dealing with these issues in application code is com‐
plex and easy to get wrong.
It would be better if application developers didn’t have to worry about subtle replica‐
tion issues and could just trust their databases to “do the right thing.” This is why
transactions exist: they are a way for a database to provide stronger guarantees so that
the application can be simpler.
Single-node transactions have existed for a long time. However, in the move to dis‐
tributed (replicated and partitioned) databases, many systems have abandoned them,
claiming that transactions are too expensive in terms of performance and availability,
and asserting that eventual consistency is inevitable in a scalable system. There is
some truth in that statement, but it is overly simplistic, and we will develop a more
nuanced view over the course of the rest of this book. We will return to the topic of
transactions in Chapters 7 and 9, and we will discuss some alternative mechanisms in
Part III. 
Problems with Replication Lag 
| 
167
