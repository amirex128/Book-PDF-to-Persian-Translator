Claiming a username
On a website where each user has a unique username, two users may try to create
accounts with the same username at the same time. You may use a transaction to
check whether a name is taken and, if not, create an account with that name.
However, like in the previous examples, that is not safe under snapshot isolation.
Fortunately, a unique constraint is a simple solution here (the second transaction
that tries to register the username will be aborted due to violating the constraint).
Preventing double-spending
A service that allows users to spend money or points needs to check that a user
doesn’t spend more than they have. You might implement this by inserting a ten‐
tative spending item into a user’s account, listing all the items in the account, and
checking that the sum is positive [44]. With write skew, it could happen that two
spending items are inserted concurrently that together cause the balance to go
negative, but that neither transaction notices the other.
Phantoms causing write skew
All of these examples follow a similar pattern:
1. A SELECT query checks whether some requirement is satisfied by searching for
rows that match some search condition (there are at least two doctors on call,
there are no existing bookings for that room at that time, the position on the
board doesn’t already have another figure on it, the username isn’t already taken,
there is still money in the account).
2. Depending on the result of the first query, the application code decides how to
continue (perhaps to go ahead with the operation, or perhaps to report an error
to the user and abort).
3. If the application decides to go ahead, it makes a write (INSERT, UPDATE, or
DELETE) to the database and commits the transaction.
The effect of this write changes the precondition of the decision of step 2. In
other words, if you were to repeat the SELECT query from step 1 after commiting
the write, you would get a different result, because the write changed the set of
rows matching the search condition (there is now one fewer doctor on call, the
meeting room is now booked for that time, the position on the board is now
taken by the figure that was moved, the username is now taken, there is now less
money in the account).
The steps may occur in a different order. For example, you could first make the write,
then the SELECT query, and finally decide whether to abort or commit based on the
result of the query.
250 
| 
Chapter 7: Transactions
