Linearizability
In an eventually consistent database, if you ask two different replicas the same ques‐
tion at the same time, you may get two different answers. That’s confusing. Wouldn’t
it be a lot simpler if the database could give the illusion that there is only one replica
(i.e., only one copy of the data)? Then every client would have the same view of the
data, and you wouldn’t have to worry about replication lag.
This is the idea behind linearizability [6] (also known as atomic consistency [7], strong
consistency, immediate consistency, or external consistency [8]). The exact definition
of linearizability is quite subtle, and we will explore it in the rest of this section. But
the basic idea is to make a system appear as if there were only one copy of the data,
and all operations on it are atomic. With this guarantee, even though there may be
multiple replicas in reality, the application does not need to worry about them.
In a linearizable system, as soon as one client successfully completes a write, all cli‐
ents reading from the database must be able to see the value just written. Maintaining
the illusion of a single copy of the data means guaranteeing that the value read is the
most recent, up-to-date value, and doesn’t come from a stale cache or replica. In
other words, linearizability is a recency guarantee. To clarify this idea, let’s look at an
example of a system that is not linearizable.
Figure 9-1. This system is not linearizable, causing football fans to be confused.
324 
| 
Chapter 9: Consistency and Consensus
