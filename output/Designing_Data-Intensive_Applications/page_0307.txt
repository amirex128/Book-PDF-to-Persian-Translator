ii. Except perhaps for an occasional keepalive packet, if TCP keepalive is enabled.
iii. Asynchronous Transfer Mode (ATM) was a competitor to Ethernet in the 1980s [32], but it didn’t gain
much adoption outside of telephone network core switches. It has nothing to do with automatic teller
machines (also known as cash machines), despite sharing an acronym. Perhaps, in some parallel universe, the
internet is based on something like ATM—in that universe, internet video calls are probably a lot more relia‐
ble than they are in ours, because they don’t suffer from dropped and delayed packets.
This kind of network is synchronous: even as data passes through several routers, it
does not suffer from queueing, because the 16 bits of space for the call have already
been reserved in the next hop of the network. And because there is no queueing, the
maximum end-to-end latency of the network is fixed. We call this a bounded delay.
Can we not simply make network delays predictable?
Note that a circuit in a telephone network is very different from a TCP connection: a
circuit is a fixed amount of reserved bandwidth which nobody else can use while the
circuit is established, whereas the packets of a TCP connection opportunistically use
whatever network bandwidth is available. You can give TCP a variable-sized block of
data (e.g., an email or a web page), and it will try to transfer it in the shortest time
possible. While a TCP connection is idle, it doesn’t use any bandwidth.ii
If datacenter networks and the internet were circuit-switched networks, it would be
possible to establish a guaranteed maximum round-trip time when a circuit was set
up. However, they are not: Ethernet and IP are packet-switched protocols, which suf‐
fer from queueing and thus unbounded delays in the network. These protocols do
not have the concept of a circuit.
Why do datacenter networks and the internet use packet switching? The answer is
that they are optimized for bursty traffic. A circuit is good for an audio or video call,
which needs to transfer a fairly constant number of bits per second for the duration
of the call. On the other hand, requesting a web page, sending an email, or transfer‐
ring a file doesn’t have any particular bandwidth requirement—we just want it to
complete as quickly as possible.
If you wanted to transfer a file over a circuit, you would have to guess a bandwidth
allocation. If you guess too low, the transfer is unnecessarily slow, leaving network
capacity unused. If you guess too high, the circuit cannot be set up (because the net‐
work cannot allow a circuit to be created if its bandwidth allocation cannot be guar‐
anteed). Thus, using circuits for bursty data transfers wastes network capacity and
makes transfers unnecessarily slow. By contrast, TCP dynamically adapts the rate of
data transfer to the available network capacity.
There have been some attempts to build hybrid networks that support both circuit
switching and packet switching, such as ATM.iii InfiniBand has some similarities [35]:
it implements end-to-end flow control at the link layer, which reduces the need for
Unreliable Networks 
| 
285
