copy-on-write (B-trees), 82, 242
CORBA (Common Object Request Broker
Architecture), 134
correctness, 6
auditability, 528-533
Byzantine fault tolerance, 305, 532
dealing with partial failures, 274
in log-based systems, 521-524
of algorithm within system model, 308
of compensating transactions, 355
of consensus, 368
of derived data, 497, 531
of immutable data, 461
of personal data, 535, 540
of time, 176, 289-295
of transactions, 225, 515, 529
timeliness and integrity, 524-528
corruption of data
detecting, 519, 530-533
due to pathological memory access, 529
due to radiation, 305
due to split brain, 158, 302
due to weak transaction isolation, 233
formalization in consensus, 366
integrity as absence of, 524
network packets, 306
on disks, 227
preventing using write-ahead logs, 82
recovering from, 414, 460
Couchbase (database)
durability, 89
hash partitioning, 203-204, 211
rebalancing, 213
request routing, 216
CouchDB (database)
B-tree storage, 242
change feed, 456
document data model, 31
join support, 34
MapReduce support, 46, 400
replication, 170, 173
covering indexes, 86
CPUs
cache coherence and memory barriers, 338
caching and pipelining, 99, 428
increasing parallelism, 43
CRDTs (see conflict-free replicated datatypes)
CREATE INDEX statement (SQL), 85, 500
credit rating agencies, 535
Crunch (batch processing), 419, 427
hash joins, 409
sharded joins, 408
workflows, 403
cryptography
defense against attackers, 306
end-to-end encryption and authentication,
519, 543
proving integrity of data, 532
CSS (Cascading Style Sheets), 44
CSV (comma-separated values), 70, 114, 396
Curator (ZooKeeper recipes), 330, 371
curl (Unix tool), 135, 397
cursor stability, 243
Cypher (query language), 52
comparison to SPARQL, 59
D
data corruption (see corruption of data)
data cubes, 102
data formats (see encoding)
data integration, 490-498, 543
batch and stream processing, 494-498
lambda architecture, 497
maintaining derived state, 495
reprocessing data, 496
unifying, 498
by unbundling databases, 499-515
comparison to federated databases, 501
combining tools by deriving data, 490-494
derived data versus distributed transac‚Äê
tions, 492
limits of total ordering, 493
ordering events to capture causality, 493
reasoning about dataflows, 491
need for, 385
data lakes, 415
data locality (see locality)
data models, 27-64
graph-like models, 49-63
Datalog language, 60-63
property graphs, 50
RDF and triple-stores, 55-59
query languages, 42-48
relational model versus document model,
28-42
data protection regulations, 542
data systems, 3
about, 4
Index 
| 
565
