Figure 3-10. Storing relational data by column, rather than by row.
The column-oriented storage layout relies on each column file containing the rows in
the same order. Thus, if you need to reassemble an entire row, you can take the 23rd
entry from each of the individual column files and put them together to form the
23rd row of the table.
Column Compression
Besides only loading those columns from disk that are required for a query, we can
further reduce the demands on disk throughput by compressing data. Fortunately,
column-oriented storage often lends itself very well to compression.
Take a look at the sequences of values for each column in Figure 3-10: they often look
quite repetitive, which is a good sign for compression. Depending on the data in the
column, different compression techniques can be used. One technique that is particu‚Äê
larly effective in data warehouses is bitmap encoding, illustrated in Figure 3-11.
Column-Oriented Storage 
| 
97
