Schema evolution thus allows the entire database to appear as if it was encoded with a
single schema, even though the underlying storage may contain records encoded with
various historical versions of the schema.
Archival storage
Perhaps you take a snapshot of your database from time to time, say for backup pur‐
poses or for loading into a data warehouse (see “Data Warehousing” on page 91). In
this case, the data dump will typically be encoded using the latest schema, even if the
original encoding in the source database contained a mixture of schema versions
from different eras. Since you’re copying the data anyway, you might as well encode
the copy of the data consistently.
As the data dump is written in one go and is thereafter immutable, formats like Avro
object container files are a good fit. This is also a good opportunity to encode the data
in an analytics-friendly column-oriented format such as Parquet (see “Column Com‐
pression” on page 97).
In Chapter 10 we will talk more about using data in archival storage. 
Dataflow Through Services: REST and RPC
When you have processes that need to communicate over a network, there are a few
different ways of arranging that communication. The most common arrangement is
to have two roles: clients and servers. The servers expose an API over the network,
and the clients can connect to the servers to make requests to that API. The API
exposed by the server is known as a service.
The web works this way: clients (web browsers) make requests to web servers, mak‐
ing GET requests to download HTML, CSS, JavaScript, images, etc., and making POST
requests to submit data to the server. The API consists of a standardized set of proto‐
cols and data formats (HTTP, URLs, SSL/TLS, HTML, etc.). Because web browsers,
web servers, and website authors mostly agree on these standards, you can use any
web browser to access any website (at least in theory!).
Web browsers are not the only type of client. For example, a native app running on a
mobile device or a desktop computer can also make network requests to a server, and
a client-side JavaScript application running inside a web browser can use
XMLHttpRequest to become an HTTP client (this technique is known as Ajax [30]).
In this case, the server’s response is typically not HTML for displaying to a human,
but rather data in an encoding that is convenient for further processing by the client-
side application code (such as JSON). Although HTTP may be used as the transport
protocol, the API implemented on top is application-specific, and the client and
server need to agree on the details of that API.
Modes of Dataflow 
| 
131
