13. Ports and adapters
private EbookOrderService $ebookOrderService;
public function __construct(EbookOrderService $ebookOrderService)
{
$this->ebookOrderService = $ebookOrderService;
}
public function handle(object $command)
{
if ($command instanceof CreateOrder) {
return $this->ebookOrderService->create($command);
} elseif ($command instanceof /* ... */) {
// and so on...
}
throw new RuntimeException(
'Unknown command type: ' . get_class($command)
);
}
}
See Listing 13.13 for the modified controller that now uses the CommandBus
interface.
Listing 13.13. The controller uses the CommandBus.
final class OrderController
{
private CommandBus $commandBus;
public function __construct(
CommandBus $commandBus
) {
$this->commandBus = $commandBus;
}
public function orderEbookAction(Request $request): Response
{
$orderId = $this->commandBus->handle(
CreateOrder::fromRequestData($request->request->all())
);
313
