5. Service locators
arguments. Instead, we need to pass them to the service as arguments of its
send() method. Listing 5.4 shows the result of this change.
Listing 5.4. Passing contextual data as method arguments.
final class SendIpConfirmationEmail
{
// ...
public function send(
User $user,
string $ipAddress
): void {
$message = EmailMessage::create()
->to($user->email())
->from($this->defaultSender)
->text(
trans(
'Add your :ip to the whitelist',
[
'ip' => $ipAddress
]
)
);
$this->mailer->send($message);
}
}
There’s one last thing we have to make explicit: the call to trans(), which is
supposed to translate the email message to the user’s language. In practice,
trans() will use the locale that is configured for the current request. Even
though we don’t explicitly fetch this information from the request, like we did
with the client’s IP address, we still rely on it to be configured before this ser-
vice gets invoked. This makes us once more dependent on the framework’s
infrastructure. To make this dependency explicit, we have to do two things:
pass the user’s locale explicitly to the translator, and make the translator an
explicit dependency of the service. Listing 5.5 shows the result.
Listing 5.5. Injecting an extra dependency and providing an explicit locale.
116
