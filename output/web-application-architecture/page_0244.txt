8. Validation
sistent state. Validating relations between entities can be done by retrieving
the related entity from its (read model) repository.
Once we can be sure that an entity is always-valid, we still need to assist the
user in providing the right data. We need to keep in mind who the user is,
and how they communicate with our application. This is the infrastructure-
specific part of validation, where we render HTML form errors in the userâ€™s
language, or provide a JSON-encoded list of machine-readable validation er-
rors.
Sometimes validation is not the answer, because the data involved in the val-
idation process may be outdated, like when you check the stock levels of a
certain product before you accept an order for it. When validation might not
be able to give the right answer, look for other design options.
Exercises
1. Which of the following object types are allowed to throw exceptions in
case the provided input is invalid?a
1. Value objects
2. Entities
3. Application services
4. Controllers
5. Validators
2. Where should we collect a list of validation errors for submitted form
data?b
1. In the entity
2. In the application service
3. In the controller
3. Which of these sentences apply to command objects and command ob-
224
