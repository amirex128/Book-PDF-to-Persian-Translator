8. Validation
4. Inside a custom object we can define default values for missing request
data by setting default property values.
Since request data is of type string, we usually have to do some casting
before we can use it. I find it convenient to do this work inside a named
constructor on the command class itself.
That way knowledge about the
fields and what goes in them lives inside a single class. Listing 8.17 shows
a simple example. The OrderEbook command object should contain an e-
book ID, a quantity, an email address, and optionally the name of the buyer.
OrderEbook::fromRequestData() relies on the complete array of request data,
so the code can remain decoupled from the particular framework that we
use.
Listing 8.17. A command gets instantiated based on request data.
final class OrderEbook
{
private string $emailAddress;
private int $ebookId;
private int $quantity;
private ?string $buyerName;
public function __construct(
string $emailAddress,
int $ebookId,
int $quantity,
?string $buyerName
) {
$this->emailAddress = $emailAddress;
$this->ebookId = $ebookId;
$this->quantity = $quantity;
$this->buyerName = $buyerName;
}
/**
* @param array<string,string|null> $data
*/
public static function fromRequestData(array $data): self
217
