2. The domain model
“Shouldn’t we also have a getById() method?”
Besides saving an entity, a repository usually offers a way to retrieve a
previously saved entity from the database. Normally a repository has a
getById() method that allows clients to do so:
interface OrderRepository
{
public function save(Order $order): void;
/**
* @throws CouldNotFindOrder
*/
public function getById(int $orderId): Order;
}
A client provides the ID of the entity that it wants to retrieve, and the repos-
itory takes the data for the corresponding order from the database, and fi-
nally reconstitutes the entire entity object using this data. If the repository
can’t find an order with the provided ID, it will throw a custom exception
(e.g. CouldNotFindOrder) which extends from RuntimeException.
Since we’re refactoring existing code for only one controller, I didn’t want
to propose adding a getById() method to the OrderRepository right away,
but when the time comes, it’s good to know that save() has a symmetrical
counterpart called getById().
In the controller, things are becoming much cleaner now (see Listing 2.9). We
can instantiate a new Order object and hand it over to the OrderRepository,
which will then save it to the database. Assuming that we can somehow get
a working OrderRepository instance from our service container, that is.
Listing 2.9. orderEbookAction() now uses the OrderRepository and the
Order entity.
public function orderEbookAction(Request $request): Response
{
// ...
$order = new Order(/* ... */);
25
