14. A testing strategy for decoupled applications
foreach ($this->orderRepositories() as $orderRepository) {
$orderRepository->save($order);
$fromRepository = $orderRepository->getById($order->orderId());
self::assertEquals($order, $fromRepository);
}
}
/**
* @return Generator<OrderRepository>
*/
private function orderRepositories(): Generator
{
yield new InMemoryOrderRepository();
yield new OrderRepositoryUsingDoctrineDbal(/* ... */);
// yield any other implementation you have
}
/**
* @return Generator<array<Order>>
*/
public function orders(): Generator
{
yield [Order::create(/* ... */)];
yield [Order::create(/* ... */)->cancel()];
yield [Order::create(/* ... */)->markAsPaid()];
// yield any other `Order` entity that you might want to save
}
// ...
}
Several other parts of the contract should be tested as well, like the ability
of all implementations to provide unique order IDs. Or the ability to save an
325
