Chapter 1, Microservices, in order to build a scalable application, we need to design
for concurrency and partitioning: concurrency allows each task to be broken up into
smaller pieces, while partitioning is essential for allowing these smaller pieces to be
processed in parallel. So, while scalability is related to how we divide and conquer the
processing of tasks, performance is the measure of how efficiently the application pro‐
cesses those tasks.
In a growing, thriving microservice ecosystem, where traffic is increasing steadily,
each microservice needs to be able to scale with the entire system without suffering
from performance problems. To ensure that our microservices are scalable and per‐
formant, we need to require several things of each microservice. We need to under‐
stand its growth scale, both quantitative and qualitative, so that we can prepare for
expected growth. We need to use our hardware resources efficiently, be aware of
resource bottlenecks and requirements, and do appropriate capacity planning. We need
to ensure that a microservice’s dependencies will scale with it. We need to manage traf‐
fic in a scalable and performant way. We need to handle and process tasks in a per‐
formant manner. Last but not least, we need to store data in a scalable way.
A Production-Ready Service Is Scalable and Performant
• Its qualitative and quantitative growth scales are known.
• It uses hardware resources efficiently.
• Its resource bottlenecks and requirements have been identified.
• Capacity planning is automated and performed on a scheduled basis.
• Its dependencies will scale with it.
• It will scale with its clients.
• Its traffic patterns are understood.
• Traffic can be re-routed in case of failures.
• It is written in a programming language that allows it to be scalable and perform‐
ant.
• It handles and processes tasks in a performant manner.
• It handles and stores data in a scalable and performant way.
Knowing the Growth Scale
Determining how a microservice scales (at a very high level) is the first step toward
understanding how to build and maintain a scalable microservice. There are two
aspects to knowing the growth scale of a microservice, and they both play important
roles in understanding and planning for the scalability of a service. The first is the
44 
| 
Chapter 4: Scalability and Performance
