described in earlier chapters, each of these standards is accompanied by a set of
requirements that can be used to bring each service up to those standards—develop‐
ers can adjust these requirements of each production-readiness standard so that they
meet the needs and goals of the organization. The exact requirements will depend on
the details of the company’s microservice ecosystem, but the standards and their basic
components are relevant across every ecosystem (see Appendix A for a summary
checklist containing the production-readiness standards and their general require‐
ments).
Production-Readiness Roadmaps
Once a microservice development team has completed a thorough production-
readiness audit of their microservice and the team understands whether their service
is production-ready, the next step is to plan how to bring the service to a production-
ready state. Audits make this easy: at this point, the team has a checklist of which
production-readiness requirements their service doesn’t meet, and all that is left to do
is to satisfy each unfulfilled requirement.
This is where production-readiness roadmaps can be developed, and I’ve found them
to be an extremely useful piece of the production-readiness and microservice under‐
standing process. Each microservice is different, and the implementation details of
each unsatisfied requirement will vary between services, so producing a detailed
roadmap that documents all of the implementation details will guide the team toward
making their microservice production-ready. Requirements that need to be met can
be accompanied by the technical details, problems that have arisen (outages and inci‐
dents) that are related to the requirement, a link to some ticket in a task-management
system, and the name(s) of the developer(s) who will be working on the project.
The roadmap and the list of unsatisfied production-readiness requirements it con‐
tains can become part of whatever planning and (if used at the company) OKRs are in
store for the service. Satisfying production-readiness requirements works best when
the process goes hand in hand both with feature development and with the adoption
of new technologies. Making each service in the microservice ecosystem stable, relia‐
ble, scalable, performant, fault tolerant, catastrophe-prepared, monitored, docu‐
mented, and understood is a straightforward, quantifiable way to guarantee that each
service is truly production-ready, ensuring the availability of the entire microservice
ecosystem.
Production-Readiness Automation
Architecture reviews, audits, and roadmaps solve the challenges of microservice
understanding at the developer and team levels, but understanding at an organiza‐
tional level requires an additional component. As I’ve presented it so far, all of the
work that goes into building a production-ready microservice is mostly manual,
72 
| 
Chapter 7: Documentation and Understanding
