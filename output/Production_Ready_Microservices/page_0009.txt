CHAPTER 1
Microservices
In the past few years, the technology industry has witnessed a rapid change in
applied, practical distributed systems architecture that has led industry giants (such
as Netflix, Twitter, Amazon, eBay, and Uber) away from building monolithic applica‐
tions to adopting microservice architecture. While the fundamental concepts behind
microservices are not new, the contemporary application of microservice architecture
truly is, and its adoption has been driven in part by scalability challenges, lack of effi‐
ciency, slow developer velocity, and the difficulties with adopting new technologies
that arise when complex software systems are contained within and deployed as one
large monolithic application.
Adopting microservice architecture, whether from the ground up or by splitting an
existing monolithic application into independently developed and deployed micro‐
services, solves these problems. With microservice architecture, an application can
easily be scaled both horizontally and vertically, developer productivity and velocity
increase dramatically, and old technologies can easily be swapped out for the newest
ones.
As we will see in this chapter, the adoption of microservice architecture can be seen
as a natural step in the scaling of an application. The splitting of a monolithic applica‐
tion into microservices is driven by scalability and efficiency concerns, but microser‐
vices introduce challenges of their own. A successful, scalable microservice ecosystem
requires that a stable and sophisticated infrastructure be in place. In addition, the
organizational structure of a company adopting microservices must be radically
changed to support microservice architecture, and the team structures that spring
from this can lead to siloing and sprawl. The largest challenges that microservice
architecture brings, however, are the need for standardization of the architecture of
the services themselves, along with requirements for each microservice in order to
ensure trust and availability.
1
