Grushenka’s tale is the golden rule of microservice documentation: always give an
onion. Give an onion for your sake, for the sake of fellow developers working on your
service, and for the sake of the developers whose services depend on yours.
A Production-Ready Service Is Documented and Understood
• It has comprehensive documentation.
• Its documentation is updated regularly.
• Its documentation contains a description of the microservice; an architecture
diagram; contact and on-call information; links to important information; an
onboarding and development guide; information about the service’s request
flow(s), endpoints, and dependencies; an on-call runbook; and answers to fre‐
quently asked questions.
• It is well understood at the developer, team, and organizational levels.
• It is held to a set of production-readiness standards and meets the associated
requirements.
• Its architecture is reviewed and audited frequently.
Microservice Documentation
The documentation for all microservices in an engineering organization should be
stored in a centralized, shared, and easily accessible place. Any developer on any team
should be able to find the documentation for every microservice without any diffi‐
culty. An internal website containing the documentation for all microservices and
internal tools tends to be the best medium for this.
READMEs and Code Comments Are Not Documentation
Many developers limit the documentation of their microservices to
a README file in their repository or to comments scattered
throughout the code. While having a README is essential, and all
microservice code should contain appropriate comments, this is
not production-ready documentation and requires that developers
check out and search through the code. Proper documentation is
stored in a centralized place (like a website) where the documenta‐
tion for all microservices in the engineering organization lives.
The documentation should be updated regularly. Any time a significant change is
made to the service, the documentation should be updated. For example, if a new API
endpoint is added, information about the endpoint must be added to the documenta‐
Microservice Documentation 
| 
63
