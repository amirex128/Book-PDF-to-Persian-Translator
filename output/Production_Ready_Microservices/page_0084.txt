• It will scale with its clients.
• Its traffic patterns are understood.
• Traffic can be re-routed in case of failures.
• It is written in a programming language that allows it to be scalable and
performant.
• It handles and processes tasks in a performant manner.
• It handles and stores data in a scalable and performant way.
A Production-Ready Service Is Fault Tolerant and
Prepared for Any Catastrophe
• It has no single point of failure.
• All failure scenarios and possible catastrophes have been identified.
• It is tested for resiliency through code testing, load testing, and chaos testing.
• Failure detection and remediation has been automated.
• There are standardized incident and outage procedures in place within the
microservice development team and across the organization.
A Production-Ready Service Is Properly Monitored
• Its key metrics are identified and monitored at the host, infrastructure, and
microservice levels.
• It has appropriate logging that accurately reflects the past states of the
microservice.
• Its dashboards are easy to interpret and contain all key metrics.
• Its alerts are actionable and are defined by signal-providing thresholds.
• There is a dedicated on-call rotation responsible for monitoring and responding
to any incidents and outages.
• There is a clear, well-defined, and standardized on-call procedure in place for
handling incidents and outages.
76 
| 
Appendix A: Production-Readiness Checklist
