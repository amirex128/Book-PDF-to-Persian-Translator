Summary: Elements of Production-Ready Microservice
Documentation
Production-ready microservice documentation includes:
• A description of the microservice and its place in the overall microservice eco‐
system and the business
• An architecture diagram detailing the architecture of the service and its clients
and dependencies at a high level of abstraction
• Contact and on-call information about the microservice’s development team
• Links to the repository, dashboard(s), the RFC for the service, architecture
reviews, and any other relevant or useful information
• An onboarding and development guide containing details about the develop‐
ment process, the deployment pipeline, and any other information that will be
useful to developers who contribute code to the service
• Detailed information about the microservice’s request flows, SLA, production-
readiness status, API endpoints, important clients, and dependencies
• An on-call runbook containing general incident and outage response procedures,
step-by-step instructions on how to triage, mitigate, and resolve each alert, and a
general troubleshooting and debugging section
• A “Frequently Asked Questions” (FAQ) section
Microservice Understanding
Centralized, updated, and thorough documentation is only one part of production-
ready microservice documentation and understanding. Aside from writing and
updating documentation, organizational processes should be put into place to ensure
that microservices are well understood not only by the individual development teams
but by the organization as a whole. In many ways, a well-understood microservice is
one that meets every production-readiness requirement.
Microservice understanding is truly indispensable to the developer, the team, and the
organization. While the notion of “understanding” a microservice may seem too
vague to be useful at first glance, the concept of a production-ready microservice can
be used to guide and define microservice understanding at every level. Armed with
production-readiness standards and requirements, along with a realistic understand‐
ing of organizational complexity and the challenges that microservice architecture
brings to the arena, developers can quantify their understanding of each microservice
Microservice Understanding 
| 
69
