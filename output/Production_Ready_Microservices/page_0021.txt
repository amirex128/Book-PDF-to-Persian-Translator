provider (or providers) is not an easy decision to make, and cost, availability, reliabil‐
ity, and operational expenses are things that need to be considered.
Managing these servers is part of the hardware layer. Each server needs to have an
operating system installed, and the operating system should be standardized across all
servers. There is no correct, right answer as to which operating system a microservice
ecosystem should use: the answer to this question depends entirely on the applica‐
tions you will be building, the languages they will be written in, and the libraries and
tools that your microservices require. The majority of microservice ecosystems run
some variant of Linux, commonly CentOS, Debian, or Ubuntu, but a .NET company
will, obviously, choose differently. Additional abstractions can be built and layered
atop the hardware: resource isolation and resource abstraction (as offered by technol‐
ogies like Docker and Apache Mesos) also belong in this layer, as do databases (dedi‐
cated or shared).
Installing an operating system and provisioning the hardware is the first layer on top
of the servers themselves. Each host must be provisioned and configured, and after
the operating system is installed, a configuration management tool (such as Ansible,
Chef, or Puppet) should be used to install all of the applications and set all the neces‐
sary configurations.
The hosts need proper host-level monitoring (using something like Nagios) and host-
level logging so that if anything happens (disk failure, network failure, or if CPU uti‐
lization goes through the roof), problems with the hosts can be easily diagnosed,
mitigated, and resolved. Host-level monitoring is covered in greater detail in ???.
Summary of Layer 1: The Hardware Layer
The hardware layer (layer 1) of the microservice ecosystem contains:
• The physical servers (owned by the company or rented from cloud providers)
• Databases (dedicated and/or shared)
• The operating system
• Resource isolation and abstraction
• Configuration management
• Host-level monitoring
• Host-level logging
Layer 2: Communication
The second layer of the microservice ecosystem is the communication layer. The com‐
munication layer bleeds into all of the other layers of the ecosystem (including the
The Microservice Ecosystem 
| 
13
