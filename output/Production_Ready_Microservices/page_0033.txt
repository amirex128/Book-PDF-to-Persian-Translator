CHAPTER 3
Stability and Reliability
A production-ready microservice is stable and reliable. Both individual microservices
and the overall microservice ecosystem are constantly changing and evolving, and
any efforts made to increase the stability and reliability of a microservice go a long
way toward ensuring the health and availability of the overall ecosystem. In this chap‐
ter, different ways to build and run a stable and reliable microservice are explored,
including standardizing the development process, building comprehensive deploy‐
ment pipelines, understanding dependencies and protecting against their failures,
building stable and reliable routing and discovery, and establishing appropriate dep‐
recation and decommissioning procedures for old or outdated microservices and/or
their endpoints.
Principles of Building Stable and Reliable Microservices
Microservice architecture lends itself to fast-paced development. The freedom offered
by microservices means that the ecosystem will be in a state of continuous change,
never static, always evolving. Features will be added every day, new builds will be
deployed multiple times per day, and old technologies will be swapped for newer and
better ones at an astounding pace. This freedom and flexibility gives rise to real, tan‐
gible innovation, but comes at a great cost.
Innovation, increased developer velocity and productivity, rapid technological
advancement, and the ever-changing microservice ecosystem can all very quickly be
brought to a screeching halt if any piece of the microservice ecosystem becomes
unstable or unreliable. In some cases, all it takes to bring the entire business down is
deploying a broken build or a build containing a bug to one business-critical micro‐
service.
25
