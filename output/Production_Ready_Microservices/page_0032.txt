structure resources (physical machines, cloud hardware, database storage, etc.), and
each resource costs the company a great deal of money.
When your microservice ecosystem has a large number of microservices and a large
and sophisticated application platform, competition between teams for hardware and
infrastructure resources is inevitable: every service, every tool will be presented as
equally important, its scaling needs presented as being of the highest priority.
Likewise, when application platform teams are asking for specifications and needs
from microservice teams so that they can design their systems and tools appropri‐
ately, every microservice development team will argue that their needs are the most
important and will be disappointed (and potentially very frustrated) if they are not
included. This kind of competition for engineering resources can lead to resentment
between teams.
The last kind of competition for resources is perhaps the most obvious one: the com‐
petition between managers, between teams, and between different engineering
departments/organization for engineering headcount. Even with the increase in com‐
puter science graduates and the rise of developer bootcamps, truly great developers
are difficult to find, and represent one of the most irreplaceable and scarce resources.
When there are hundreds or thousands of teams that could use an extra engineer or
two, every single team will insist that their team needs an extra engineer more than
any of the other teams.
There is no way to avoid competition for resources, though there are ways to mitigate
competition somewhat. The most effective seems to be organizing or categorizing
teams in terms of their importance and criticality to the overall business, and then
giving teams access to resources based on their priority or importance. There are
downsides to this, because it tends to result in poorly staffed development tools
teams, and in projects whose importance lies in shaping the future (such as adopting
new infrastructure technologies) being abandoned.
24 
| 
Chapter 1: Microservices
