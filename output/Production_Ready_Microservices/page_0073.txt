Description:
After a customer places an order, receipt-sender sends a receipt to the customer via
email.
This is essential because it ensures that anyone who finds the documentation will
know what role the microservice plays in the microservice ecosystem.
Architecture Diagram
The description of the service should be followed by an architecture diagram. This
diagram should detail the architecture of the service, including its components, its
endpoints, the request flow, its dependencies (both upstream and downstream), and
information about any databases or caches. See an example architecture diagram in
Figure 7-1.
Architecture diagrams are essential for several reasons. It’s nearly impossible to
understand how and why a microservice works just by reading through the code, and
so a well-designed architecture diagram is an easily understandable visual description
and summary of the microservice. These diagrams also aid developers in adding new
features by abstracting away the inner workings of the service so that developers can
see where and how new features will (or will not) fit. Most importantly, they illumi‐
nate issues and problems with the service that would go unnoticed without a com‐
plete visual representation of its architecture: it’s difficult to discover a service’s points
of failure by combing through lines of code, but they tend to stick out like sore
thumbs in an accurate architecture diagram.
Figure 7-1. Example microservice architecture diagram
Microservice Documentation 
| 
65
