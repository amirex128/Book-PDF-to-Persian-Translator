gating and resolving these outages and failures usually entails nothing more than roll‐
ing back to the latest stable build, reverting whatever commit contained the bug, and
re-deploying a new (bug-less) version of the code.
The True Cost of Unstable and Unreliable Development
A microservice ecosystem is not the Wild West. Every outage,
every incident, and every bug can and will cost the company thou‐
sands (if not millions) of dollars in engineering hours and lost rev‐
enue. Safeguards need to be in place during the development cycle
(and, as we will see, in the deployment pipeline) to catch every bug
before it hits production.
A stable and reliable development cycle has several steps (Figure 3-1).
Figure 3-1. The development cycle
First, the developer makes a change to the code. This will usually begin with checking
a copy of the code out from a central repository (usually using git or svn), creating an
individual branch where they will make changes, adding their changes to their
branch, and running any unit and integration tests. This stage of development can
The Development Cycle 
| 
27
