Preface
Who Should Read This Book
At this point, nearly every developer is a developer or consumer (or both) of dis‐
tributed systems. Even relatively simple mobile applications are backed with cloud
APIs so that their data can be present on whatever device the customer happens to be
using. Whether you are new to developing distributed systems or an expert with scars
on your hands to prove it, the patterns and components described in this book can
transform your development of distributed systems from art to science. Reusable
components and patterns for distributed systems will enable you to focus on the core
details of your application. This book will help any developer become better, faster,
and more efficient at building distributed systems.
Why I Wrote This Book
Throughout my career as a developer of a variety of software systems from web
search to the cloud, I have built a large number of scalable, reliable distributed sys‐
tems. Each of these systems was, by and large, built from scratch. In general, this is
true of all distributed applications. Despite having many of the same concepts and
even at times nearly identical logic, the ability to apply patterns or reuse components
is often very, very challenging. This forced me to waste time reimplementing systems,
and each system ended up less polished than it might have otherwise been.
The recent introduction of containers and container orchestrators fundamentally
changed the landscape of distributed system development. Suddenly we have an
object and interface for expressing core distributed system patterns and building
reusable containerized components. I wrote this book to bring together all of the
practitioners of distributed systems, giving us a shared language and common stan‐
dard library so that we can all build better systems more quickly.
vii
