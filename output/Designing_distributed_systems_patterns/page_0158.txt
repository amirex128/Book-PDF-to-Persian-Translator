Again, we find ourselves at a moment of technological transformation. The need for
distributed systems far exceeds our ability to deliver them. Fortunately, the develop‐
ment of technology has produced another set of tools to further expand the pool of
developers capable of building these distributed systems. The recent development of
containers and container orchestration has brought tools that enable rapid, easier
development of distributed systems. With luck, these tools, when combined with the
patterns and practices described in this book, can enhance and improve the dis‐
tributed systems built by current developers, and more importantly develop a whole
new expanded group of developers capable of building these systems.
Patterns like sidecars, ambassadors, sharded services, FaaS, work queues, and more
can form the foundation on which modern distributed systems are built. Distributed
system developers should no longer be building their systems from scratch as indi‐
viduals but rather collaborating together on reusable, shared implementations of can‐
onical patterns that form the basis of all of the systems we collectively deploy. This
will enable us to meet the demands of today’s reliable, scalable APIs and services and
empower a new set of applications and services for the future.
144 
| 
Chapter 13: Conclusion: A New Beginning?
