parameterized, 17
coordinated batch processing, 133-141
counting example, 136
histograms with, 137
image tagging/processing pipeline, 138-141
join pattern, 134
reduce pattern, 135
summing with, 137
copier pattern, 122
CoreOS, 97
(see also etcd)
counting, coordinated batch processing for, 136
D
data manipulation, concurrent, 103-105
debugging, microservices-based systems and,
43
decorator pattern, 85
decoupling of microservices, 42
deep monitoring, 36-39
denial-of-service attacks, 54
dictionary-server service
caching layer deployment, 51-53
replicated service for, 47
distributed consensus algorithm, 96
distributed ownership, 93
distributed systems (generally)
current state of, viii
defined, 7
future of, 143
history of patterns in software development,
2-4
systems development history, 1
value of patterns, practices, and compo‐
nents, 4-6
Dockerfile, 19
document search
scatter/gather pattern for, 75
with leaf sharding, 77
documentation, sidecar container, 18
dynamic configuration, 12
E
etcd (distributed lock server), 97
implementing leases in, 102
implementing locks in, 100
event handling, FaaS and, 87-89
event-based pipelines
FaaS and, 89-91
for new-user signup, 89-91
event-driven batch processing systems, 121-131
copier pattern, 122
filter pattern, 123
for new-user signup, 128
Kafka deployment, 130
merger pattern, 127
patterns of, 122-127
publisher/subscriber infrastructure, 129
sharder, 125
splitter pattern, 124
event-driven FaaS, 81
event-driven processing, functions and, 81-91
(see also function-as-a-service)
events, requests vs., 87
experimentation
ambassador patterns for, 26-29
implementing 10% experiments, 27-29
F
filter pattern, 123
fluentd, 35
function-as-a-service (FaaS), 81-91
adding request defaulting prior to request
processing, 86
and need to hold data in memory, 83
and situations that require background pro‐
cessing, 82
benefits of, 82
challenges of, 82
costs of sustained request-based processing,
84
decorator pattern, 85
event-based pipelines, 89-91
handling events, 87-89
implementing two-factor authentication,
87-89
patterns for, 84-91
serverless computing and, 81
when to use, 82-84
G
Gamma, Erich, 3
H
hashing function
consistent, 49
sharding function and, 67
146 
| 
Index
