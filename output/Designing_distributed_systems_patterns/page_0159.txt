Index
A
adapter containers, 31, 36
adapter patterns, 31-39
about, 31
for health monitoring of application con‚Äê
tainer, 36-39
for logging, 34-36
for monitoring, 32-34
rich health monitoring for MySQL, 36-39
algorithmic programming, 3
ambassador patterns, 21-29
basics, 21
for experimentation, 26-29
for request splitting, 26-29
for service brokering, 25
for sharded cache, 63-66
implementing 10% experiments, 27-29
implementing sharded Redis, 23-25
sharding a service with, 22-25
value of, 21
Apache Storm, 36
APIs
for microservices, 42
for sidecar containers, 17
pub/sub, 129
application containers
adapter container and, 31
adapters for health monitoring, 36-39
sidecar pattern, 11
with sidecar, 14
application-layer replicated services, 49
authentication, FaaS for, 87-89
B
background processing, FaaS and, 82
barrier synchronization, 134
(see also join pattern)
batch computational patterns
coordinated batch processing, 133-141
event-driven batch processing systems,
121-131
multi-node batch patterns, 107
best practices, patterns as collection of, 4
boundaries, 7
C
caching layer
deploying, 50-53
deploying nginx and SSL termination, 55-57
expanding, 53-57
for stateless service, 49-53
introducing, 49-57
rate limiting as denial-of-service defense, 54
SSL termination, 54-57
caching, sharded (see sharded caching)
compare-and-swap operation, 96
concurrent data manipulation, 103-105
configuration synchronization, 12
consensus algorithm, 96
consistent hashing function, 49
container group, 11
container images, 6
container patterns, single-node, 7-9
containerization, goals of, 7
containers
documentation, 18
modular, with sidecars, 14
145
