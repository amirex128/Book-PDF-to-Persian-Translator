The World of Distributed Systems Today
Once upon a time, people wrote programs that ran on one machine and were also
accessed from that machine. The world has changed. Now, nearly every application is
a distributed system running on multiple machines and accessed by multiple users
from all over the world. Despite their prevalence, the design and development of
these systems is often a black art practiced by a select group of wizards. But as with
everything in technology, the world of distributed systems is advancing, regularizing,
and abstracting. In this book I capture a collection of repeatable, generic patterns that
can make the development of reliable distributed systems more approachable and
efficient. The adoption of patterns and reusable components frees developers from
reimplementing the same systems over and over again. This time is then freed to
focus on building the core application itself.
Navigating This Book
This book is organized into a 4 parts as follows:
Chapter 1, Introduction
Introduces distributed systems and explains why patterns and reusable compo‐
nents can make such a difference in the rapid development of reliable distributed
systems.
Part I, Single-Node Patterns
Chapters 2 through 4 discuss reusable patterns and components that occur on
individual nodes within a distributed system. It covers the side-car, adapter, and
ambassador single-node patterns.
Part II, Serving Patterns
Chapters 8 and 9 cover multi-node distributed patterns for long-running serving
systems like web applications. Patterns for replicating, scaling, and master elec‐
tion are discussed.
Part III, Batch Computational Patterns
Chapters 10 through 12 cover distributed system patterns for large-scale batch
data processing covering work queues, event-based processing, and coordinated
workflows.
If you are an experienced distributed systems engineer, you can likely skip the first
couple of chapters, though you may want to skim them to understand how we expect
these patterns to be applied and why we think the general notion of distributed sys‐
tem patterns is so important.
Everyone will likely find utility in the single-node patterns as they are the most
generic and most reusable patterns in the book.
viii 
| 
Preface
