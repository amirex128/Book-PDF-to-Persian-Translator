12. Architectural layers
tric circles instead of horizontal blocks. Once we redraw the previous depen-
dency diagram (see Figure 12.5) using circles (see Figure 12.6), we can prove
that none of the dependencies point inwards, so if we apply dependency in-
version, the dependency rule will be followed as well.
Figure 12.6. This modified dependency diagram using concentric circles
shows that dependencies only point inwards.
The dependency arrows only point inwards: from Infrastructure toAppli-
cation , from Application toDomain ; never the other way around. This is a
great design tool for a software architect like yourself, because you can re-
connect your application to different types of actors without affecting the
classes that are in the Application orDomain layer. If there are no depen-
dencies upwards, this means we can rewrite or replace higher layers with-
out affecting the lower ones. This is also a great design tool for a software
developer like yourself, because all the business logic represented by the Ap-
plication and Domain layer can be tested in isolation from its surrounding
infrastructure, by replacing only a few infrastructure implementations with
289