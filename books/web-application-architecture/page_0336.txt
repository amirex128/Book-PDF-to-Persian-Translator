13. Ports and adapters
jump to the related infrastructure code. That said, it’s often a good idea to at
least make some kind of subdivision within the Infrastructure namespace.
If you have multiple classes related to a single adapter, you could group them
in a sub-namespace of Infrastructure , just like you do when a use case re-
lies on multiple classes. If you have multiple adapters which all use the same
technology (framework, library, communication protocol, etc.), you could
also group them in a sub-namespace of Infrastructure . This has the ad-
ditional benefit of giving readers of the code a clear overview of the ways in
which this application connects to external systems; something that an aver-
age code base isn’t able to do. Figure ??shows several examples of classes in
Infrastructure and its sub-namespaces.
Figure 13.5. Sub-namespaces of the Infrastructure namespace.
Sometimes sub-namespaces of Infrastructure look like they could be ex-
tracted into a proper package. For example the VatApiDotCom classes in Fig-
ure??form a stand-alone HTTP client for vatapi.com and might as well be
extracted. If the code is not project-specific you may even make the library
publicly accessible.
Something else that might happen in the Infrastructure namespace is the
316