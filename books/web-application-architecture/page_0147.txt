5. Service locators
Figure 5.2. The compiler can’t help you figure out what’s needed to call
send() . The prerequisites can’t be derived from the constructor
or method signatures.
tests you will be tempted to stop writing tests at all.
Part of the solution is to design your services in a different way. Make things
more explicit: both dependencies and method arguments help with that. An-
other part of the solution is not to write a unit test for every single class. Unit
tests only fit a certain type of objects. Mailer services, controllers, repos-
itories, they all need integration tests; tests that use the real thing (a mail
server, a web server, a database server). Testing this kind of code as a unit
test doesn’t prove anything about its effectiveness.
But it always pays to find a way to separate the logic from the infrastructural
concerns. If you can do this, you will end up with two islands of code: for
the one you can write unit tests, for the other integration tests. We’ll see an
example of an effective separation of these two types of code in Chapter 6.
127