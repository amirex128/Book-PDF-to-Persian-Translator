12. Architectural layers
Figure 12.2. Controllers are small, as they should be, but services become
too big. Models are still simple data holders.
In the previous chapter we saw how to improve this situation by letting an
application service take the first step, then dispatch events, to which event
subscribers can respond by taking further steps. But MVC, with the added
service layer, can’t help us with this.
At this point we should conclude that MVC isn’t a sufficient organizational
principle for web applications. There is just too much that doesn’t have a
natural place within the categories of models, views, and controllers.
12.2. A standard set of layers
In this chapter I propose a set of layers, consisting of a Domain ,Application ,
andInfrastructure layer. They provide broad categories for your code, help-
ing you find the right place for each class in your application. Combined with
theDependency rule , they can even help you verify that you’re correctly sep-
arating core code from infrastructure code.
In previous chapters we’ve made a distinction between core code and infras-
tructure code. Given the proposed set of layers, infrastructure code naturally
283