11. Key design patterns
11.4.2. Input should be defined as primitive-type data
The client of an application service is usually some kind of a controller, like
a web controller or a console command. Another client could be a test that
invokes the service. Weâ€™ll see an example of this in Chapter 14.
To make an application service fully portable, allowing any type of client to
use the service, you should make the input arguments easy to create. The best
way to do that is to use primitive-type parameters only (see Listing 11.10 ).
Listing 11.10. This application service accepts simple, easy to create argu-
ment.
final class OrderService
{
// ...
public function changeDeliveryAddress (
string $orderId ,
string $address ,
string $postalCode ,
string $city ,
string $country
):void {
// ...
}
}
11.4.3. Wrap input inside command objects
You can introduce Parameter object which combines all the parameters in a
single object (see Listing 11.11 ).
Listing 11.11. Using a parameter object.
final class ChangeDeliveryAddress
{
private string $orderId ;
private string $address ;
private string $postalCode ;
258