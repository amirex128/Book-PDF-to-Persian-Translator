12. Architectural layers
12.5. Summary
In this chapter we started out with a discussion about the MVC architec-
ture for web applications and how it can’t provide the necessary guidance
in structuring our application. I then proposed a set of layers that provide a
natural place for objects of all types:
•ADomain layer, which mainly consists of entities, value objects, and
domain events.
•AnApplication layer, which contains classes that represent the applica-
tion’s use cases (what an actor can do with it and what information it
can retrieve from it).
•AnInfrastructure layer, which contains the code needed to connect the
application to its primary and supporting actors.
We discussed the Dependency rule , which says that source code dependencies
between layers can only go inward.
Using namespaces we can make our use of layers visible in the code base
itself. Once every class has a namespace which corresponds to one of the
proposed layers, we can let a tool automatically verify that every class follows
theDependency rule .
Exercises
1. What does the Dependency rule say?a
1.Services should depend on abstractions
2.Layers should only have inward dependencies
3.Classes should be open for extension, closed for modification
2. Which of the following types of classes belong to the Domain layer?b
1.Command DTO
296