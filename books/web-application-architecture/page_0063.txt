2. The domain model
$orderRepository =$this ->container ->get('order_repository' );
$orderId =$orderRepository ->nextIdentity ();
$order =new Order(
$orderId ,
$request ->get('ebook_id' ),
$request ->get('email_address' ),
(int) $request ->get('quantity' ),
(int) $pricePerUnitInCents ,
(int) $orderAmount
);
$orderRepository ->save ($order );
$this ->container ->get('session' )->set(
'currentOrderId' ,
$orderId
);
// ...
}
We didnâ€™t break anything, except the code that saves the current order ID in
the session. Since $orderId is now an OrderId instance, this will no longer
work; you can only save things in a session that are serializable. In this case,
we could add a simple asString() method to the OrderId class, and call it
when saving the current order ID in the session, as shown in Listing 2.28.
Listing 2.28. OrderId supports serialization using its asString() method.
final class OrderId
{
// ...
public function asString ():string
{
// `Ramsey\Uuid` conveniently has a `toString()` method
return $this ->id->toString ();
}
}
43