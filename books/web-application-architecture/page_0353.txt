14. A testing strategy for decoupled applications
any secondary actor to be available. This test will only invoke code on the
left side of the application, where incoming communication is processed. Fig-
ure14.3 shows what elements are involved in running this OrderControllerTest .
Figure 14.3. Test coverage of OrderControllerTest .
One thing to be aware of: even if we write a controller test like this, we can’t
be completely sure that the application works in production. The WebTestCase
client doesn’t communicate with a web server; it doesn’t make an actual
HTTP request. It instantiates a Request object just like we did before. This
means that once the application runs behind a web server it may still not
function correctly. There could be issues in the code between the moment the
web server calls PHP and the moment the framework calls our controller. So
should we test the application in a more production-like environment? Pan-
ther, the testing tool I mentioned before, is able to promote tests based on
theWebTestCase to tests that start a web server and run the same tests while
making actual HTTP requests. But I’m not sure if we should use this approach
in an adapter test.
With any kind of adapter tests, the trade-off is between how many assump-
tions your test verifies and how fast and stable your tests will be. The first
333