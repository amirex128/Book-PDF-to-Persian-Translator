4. Application services
parameters of the application service into a single class. Such a class is called
aCommand class.
After decoupling the primary step of the use case, we also wanted to move
the second step of the use case to the application service. Instead of directly
moving the code for sending the order confirmation email, we introduced a
proper abstraction. This allowed us to move the implementation details out
of sight and have a clear representation of this step inside the application
service. We also looked at a more generic solution for dealing with multiple
use case steps which relies on domain events and dispatching them to event
subscribers by means of an event dispatcher service.
Exercises
1. What makes an application service reusable by different clients?a
1.Providing input data in a way that doesn’t tie it to a particular deliv-
ery mechanism
2.Combining all input data in a single Parameter object
2. Put the refactoring steps for decoupling a use case in the correct order:b
1.Extract Class
2.Introduce Parameter Object
3.Extract Variable
4.Inline Variable
3. Add at least four more examples of clients that don’t want to invoke an
application use case by submitting a web form.c
1.An HTTP-JSON API endpoint
2.A console command
3.…
107