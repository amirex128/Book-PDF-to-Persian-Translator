12. Architectural layers
to run in, nor does it have dependencies that are designed to run
in a specific context only.
And as you know: if the code isn’t core code, it’s infrastructure code, and then
it should go into the infrastructure layer. If you don’t want it to be infrastruc-
ture code, you can refactor it using any of the techniques demonstrated in
Part I. After doing so you are “allowed” to move the code to one of the other
layers.
12.2.2. The application layer
The application layer is the first layer that’s free of infrastructure code. This
layer includes:
•Application services/command handlers, and command DTOs
•View model repository interfaces , and view model DTOs
•Event subscribers that listen to domain events and perform secondary
tasks
•Interfaces for infrastructure services
Looking at the classes in the application layer you should be able to recognize:
•What actors can do with your application and what data an actor has to
provide for each task (represented by the application services and their
method parameters, which could be command DTOs).
•What an actor can learn from your application (represented by the view
model repository interfaces and the view model objects).
•How different use cases are connected to each other (represented by
the event subscribers).
•On which things in the outside world your use cases depend (repre-
sented by the interfaces for infrastructure services).
285