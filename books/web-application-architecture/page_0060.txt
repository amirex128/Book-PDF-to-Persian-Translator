2. The domain model
}
}
Now we only have to change the type of the Order ’s$idconstructor parame-
ter to accept a UuidInterface instance, instead of an int(see Listing 2.25).
Listing 2.25. The ID of an Order is an instance of UuidInterface now.
final class Order
{
private UuidInterface $id;
// ...
public function __construct (
UuidInterface $id
/* ... */
) {
$this ->id=$id;
// ...
}
}
“Wait, is UUID the best we can get?”
According to several readers who have emailed me, there are some aspects
of UUID (version 4) that we should be aware of. For instance, Thomas Nun-
ninger writes that “As far as I understood, innodb reorders the records of a
table by the primary key when you insert new records. So if you have a ran-
dom UUID it has to reorganize the database pages all the time.” Also, there
may be more modern solutions available when you’re reading this, as Luis
Ramon Lopez writes: “Some weeks ago I heard about ULIDs…I think they
may be a nice addition to the chapter as it’s a good alternative to UUIDs in
some cases.”
In the context of this book I think there are two important messages here:
1.Technology changes. There will always be new solutions for old prob-
40