7. Time and randomness
return (float) $timestamp ->format ('U.u' );
}
}
This should work, and might be a correct integration test, but I doubt if it’s a
very useful test.
7.7. Summary
We started this chapter with an entity that implicitly used the system’s clock
and random device to collect part of its relevant data. Instead of letting the
object retrieve the information itself, we changed it to accept the information
as constructor arguments. By wrapping the data inside custom value objects,
we made it possible to further separate core from infrastructure code. We
provided abstractions for creating instances of these value objects. Finally,
for producing value objects based on the current time, we set up a generic
Clock abstraction.
Exercises
1. By using certain built-in PHP functions your code would instantly be-
come infrastructure code. For which of the following functions is this the
case?a
1.time()b
2.date(string $format, int $timestamp = null)cproviding only the
first argument
3.date(string $format, int $timestamp = null) providing both ar-
guments
4.checkdate(int $month, int $day, int $year)d
2. An object can’t provide truly random data all by itself. It would need
to reach out to the system’s random device. What about this value object,
187