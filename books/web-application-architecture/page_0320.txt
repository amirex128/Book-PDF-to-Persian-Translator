13. Ports and adapters
Figure 13.1. A hexagon with some of its incoming and outgoing ports.
terface” with our application. Every port will have a corresponding interface
element inside the hexagon. We’ve already seen the port for saving an order
(as one of the outgoing ports is called in Figure 13.1): the OrderRepository ’s
save() method (see Listing 13.1).
Listing 13.1. The OrderRepository interface corresponds to the “for saving
orders” port of the application.
interface OrderRepository
{
// ...
public function save (Order $order ):void;
}
A port is only the intention of communication. A useful way to find good
words for the intention of a port is to complete the sentence “for …”. As an
example, our e-book store would get ports “for listing the available e-books”,
300