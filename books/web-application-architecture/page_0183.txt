7. Time and randomness
$order =new self();
$order ->id=Uuid ::uuid4 ();
$order ->orderDate =new DateTimeImmutable( 'now' );
$order ->recordThat (
new OrderWasCreated( $order ->id,$order ->orderDate )
);
return $order ;
}
// ...
}
The code is part of an entity, which is supposed to be core code. However,
this can’t be considered core code. When you instantiate an Order by using
its named constructor create() , it will create two more objects: a Uuid ob-
ject and a DateTimeImmutable object. Both objects will reach out to a system
device during their construction phase. Uuid::uuid4() talks to the system’s
random device to retrieve random bytes for creating a unique identifier. new
DateTimeImmutable('now') will ask the system’s clock what the current date
and time is. So running this code means that these external dependencies
need to be available, which makes this infrastructure code (Figure 7.1).
Figure 7.1. Order and its implicit external dependencies.
163