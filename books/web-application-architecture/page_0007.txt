Contents
5. Service locators 109
5.1. From service location to explicit dependencies . . . . . . . . . . . 109
5.2. Depending on global state . . . . . . . . . . . . . . . . . . . . . . . . 111
5.3. Injecting dependencies . . . . . . . . . . . . . . . . . . . . . . . . . . 113
5.4. Injecting configuration values . . . . . . . . . . . . . . . . . . . . . 114
5.5. Using method arguments for job-specific data . . . . . . . . . . . . 115
5.6. Clients of reusable services . . . . . . . . . . . . . . . . . . . . . . . 117
5.7. Testing . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . 120
5.8. Effective testing . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . 126
5.9. The Composition root is near the entry point . . . . . . . . . . . . 129
5.10.Summary . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . 130
6. External services 133
6.1. Connecting to the external service . . . . . . . . . . . . . . . . . . . 135
6.2. Introducing an abstraction . . . . . . . . . . . . . . . . . . . . . . . 144
6.3. Architectural advantages . . . . . . . . . . . . . . . . . . . . . . . . 147
6.4. Testing . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . 151
6.5. Summary . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . 159
7. Time and randomness 162
7.1. Passing current time and random data as method arguments . . 165
7.2. Introducing factories . . . . . . . . . . . . . . . . . . . . . . . . . . . 167
7.3. Introducing value objects . . . . . . . . . . . . . . . . . . . . . . . . 170
7.4. Improving the factories . . . . . . . . . . . . . . . . . . . . . . . . . 176
7.5. Manipulating the current time . . . . . . . . . . . . . . . . . . . . . 180
7.6. Integration tests again . . . . . . . . . . . . . . . . . . . . . . . . . . 184
7.7. Summary . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . 187
8. Validation 191
8.1. Protecting entity state . . . . . . . . . . . . . . . . . . . . . . . . . . . 193
8.2. Using value objects to validate separate values . . . . . . . . . . . 198
8.3. Form validation . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . 203
8.4. Using exceptions to talk to users . . . . . . . . . . . . . . . . . . . . 208
8.5. When validation is not the answer . . . . . . . . . . . . . . . . . . . 214
8.6. Creating and validating command objects . . . . . . . . . . . . . . 215
8.7. Summary . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . 223
vi