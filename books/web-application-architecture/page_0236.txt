8. Validation
isn’t there or isn’t of the right type? When processing forms, a known issue
is that empty input fields may not be submitted by the browser. So if we ask
theRequest object to give us the value of field X, we may find out that field
X wasn’t even in the request body. Another issue is that we can’t distinguish
between an empty string and null when it comes to serialized data like a
request body. So before we know it, we’re passing around an empty string,
where it would make more sense to use null . If not the browser, then your
JS framework may do weird things to form data, so we need to improve the
situation either way.
What I suggest is to provide some shape to the input data first. Instead of
taking out separate values from the Request we could bundle these values
and put them in an object. We give the object a good class name, which tells
the reader how the data inside it is going to be used. We’ve seen such an ob-
ject before, in Section 4.4: this is a Command object . There we introduced it
as a way to group the parameters of an application service call. A command
object also serves as a recognizable shape for input data in your application.
The object is a data holder and transfers data from a controller to an appli-
cation service, which is why a command object is also a Data Transfer Object
(DTO).
There are several advantages to accessing the properties or getters of a cus-
tom object over accessing request data key by key.
1.A custom object provides a complete list of all the available “keys” (i.e.
properties or getters). A Request object can’t provide such a list and just
does a lookup in the request data for any key you provide when calling
get() .
2.A potential client of an application service can look at the command ob-
ject and find out what data it needs to provide. It couldn’t find that out
by looking at the structure of the request body, because it may be in-
complete, or contain more fields than necessary, which will be ignored
by the application.
3.ARequest object does not inherently use specific data types. Values that
are extracted from a Request object are either of type string or unde-
fined ( null ). Using a custom object enables us to explicitly define types
and make it clear for clients whether or not a value is “nullable”.
216